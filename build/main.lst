ARM GAS  /tmp/ccPSn8Hl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	triggerMask,4,4
  18              		.comm	triggerValue,4,4
  19              		.comm	flags,2,2
  20              		.comm	period,2,2
  21              		.comm	transferSize,4,4
  22              		.section	.text.main,"ax",%progbits
  23              		.align	1
  24              		.global	main
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  28              		.fpu fpv4-sp-d16
  30              	main:
  31              	.LFB133:
  32              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/main.c    ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/main.c    ****   * the License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                             www.st.com/SLA0044
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "usb_device.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccPSn8Hl.s 			page 2


  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  52:Src/main.c    **** void SystemClock_Config(void);
  53:Src/main.c    **** static void MX_GPIO_Init(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** void Init(void);
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /**
  66:Src/main.c    ****   * @brief  The application entry point.
  67:Src/main.c    ****   * @retval int
  68:Src/main.c    ****   */
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  33              		.loc 1 70 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
  71:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccPSn8Hl.s 			page 3


  72:Src/main.c    **** 
  73:Src/main.c    ****   /* USER CODE END 1 */
  74:Src/main.c    ****   
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  45              		.loc 1 79 0
  46 0004 FFF7FEFF 		bl	HAL_Init
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Configure the system clock */
  86:Src/main.c    ****   SystemClock_Config();
  47              		.loc 1 86 0
  48 0008 FFF7FEFF 		bl	SystemClock_Config
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  89:Src/main.c    ****   Init();
  49              		.loc 1 89 0
  50 000c FFF7FEFF 		bl	Init
  90:Src/main.c    ****   HAL_Delay(100);
  51              		.loc 1 90 0
  52 0010 6420     		movs	r0, #100
  53 0012 FFF7FEFF 		bl	HAL_Delay
  91:Src/main.c    ****   /* USER CODE END SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Initialize all configured peripherals */
  94:Src/main.c    ****   MX_GPIO_Init();
  54              		.loc 1 94 0
  55 0016 FFF7FEFF 		bl	MX_GPIO_Init
  95:Src/main.c    ****   MX_USB_DEVICE_Init();
  56              		.loc 1 95 0
  57 001a FFF7FEFF 		bl	MX_USB_DEVICE_Init
  58              	.L2:
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Infinite loop */
 101:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 102:Src/main.c    ****   while (1)
 103:Src/main.c    ****   {
 104:Src/main.c    ****     /* USER CODE END WHILE */
 105:Src/main.c    ****     __WFI();
  59              		.loc 1 105 0 discriminator 1
  60              		.syntax unified
  61              	@ 105 "Src/main.c" 1
  62 001e 30BF     		wfi
  63              	@ 0 "" 2
  64              		.thumb
  65              		.syntax unified
  66 0020 FDE7     		b	.L2
  67              		.cfi_endproc
ARM GAS  /tmp/ccPSn8Hl.s 			page 4


  68              	.LFE133:
  70              		.section	.text.SystemClock_Config,"ax",%progbits
  71              		.align	1
  72              		.global	SystemClock_Config
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  76              		.fpu fpv4-sp-d16
  78              	SystemClock_Config:
  79              	.LFB134:
 106:Src/main.c    ****     /* USER CODE BEGIN 3 */
 107:Src/main.c    ****   }
 108:Src/main.c    ****   /* USER CODE END 3 */
 109:Src/main.c    **** }
 110:Src/main.c    **** 
 111:Src/main.c    **** /**
 112:Src/main.c    ****   * @brief System Clock Configuration
 113:Src/main.c    ****   * @retval None
 114:Src/main.c    ****   */
 115:Src/main.c    **** void SystemClock_Config(void)
 116:Src/main.c    **** {
  80              		.loc 1 116 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 80
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 7, -8
  88              		.cfi_offset 14, -4
  89 0002 94B0     		sub	sp, sp, #80
  90              	.LCFI3:
  91              		.cfi_def_cfa_offset 88
  92 0004 00AF     		add	r7, sp, #0
  93              	.LCFI4:
  94              		.cfi_def_cfa_register 7
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  95              		.loc 1 117 0
  96 0006 07F12003 		add	r3, r7, #32
  97 000a 3022     		movs	r2, #48
  98 000c 0021     		movs	r1, #0
  99 000e 1846     		mov	r0, r3
 100 0010 FFF7FEFF 		bl	memset
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 101              		.loc 1 118 0
 102 0014 07F10C03 		add	r3, r7, #12
 103 0018 0022     		movs	r2, #0
 104 001a 1A60     		str	r2, [r3]
 105 001c 5A60     		str	r2, [r3, #4]
 106 001e 9A60     		str	r2, [r3, #8]
 107 0020 DA60     		str	r2, [r3, #12]
 108 0022 1A61     		str	r2, [r3, #16]
 109              	.LBB2:
 119:Src/main.c    **** 
 120:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 121:Src/main.c    ****   */
 122:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
ARM GAS  /tmp/ccPSn8Hl.s 			page 5


 110              		.loc 1 122 0
 111 0024 0023     		movs	r3, #0
 112 0026 BB60     		str	r3, [r7, #8]
 113 0028 284B     		ldr	r3, .L7
 114 002a 1B6C     		ldr	r3, [r3, #64]
 115 002c 274A     		ldr	r2, .L7
 116 002e 43F08053 		orr	r3, r3, #268435456
 117 0032 1364     		str	r3, [r2, #64]
 118 0034 254B     		ldr	r3, .L7
 119 0036 1B6C     		ldr	r3, [r3, #64]
 120 0038 03F08053 		and	r3, r3, #268435456
 121 003c BB60     		str	r3, [r7, #8]
 122 003e BB68     		ldr	r3, [r7, #8]
 123              	.LBE2:
 124              	.LBB3:
 123:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 125              		.loc 1 123 0
 126 0040 0023     		movs	r3, #0
 127 0042 7B60     		str	r3, [r7, #4]
 128 0044 224B     		ldr	r3, .L7+4
 129 0046 1B68     		ldr	r3, [r3]
 130 0048 214A     		ldr	r2, .L7+4
 131 004a 43F48043 		orr	r3, r3, #16384
 132 004e 1360     		str	r3, [r2]
 133 0050 1F4B     		ldr	r3, .L7+4
 134 0052 1B68     		ldr	r3, [r3]
 135 0054 03F48043 		and	r3, r3, #16384
 136 0058 7B60     		str	r3, [r7, #4]
 137 005a 7B68     		ldr	r3, [r7, #4]
 138              	.LBE3:
 124:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 125:Src/main.c    ****   */
 126:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 139              		.loc 1 126 0
 140 005c 0123     		movs	r3, #1
 141 005e 3B62     		str	r3, [r7, #32]
 127:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 142              		.loc 1 127 0
 143 0060 4FF48033 		mov	r3, #65536
 144 0064 7B62     		str	r3, [r7, #36]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145              		.loc 1 128 0
 146 0066 0223     		movs	r3, #2
 147 0068 BB63     		str	r3, [r7, #56]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 148              		.loc 1 129 0
 149 006a 4FF48003 		mov	r3, #4194304
 150 006e FB63     		str	r3, [r7, #60]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 151              		.loc 1 130 0
 152 0070 0423     		movs	r3, #4
 153 0072 3B64     		str	r3, [r7, #64]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 154              		.loc 1 131 0
 155 0074 A823     		movs	r3, #168
 156 0076 7B64     		str	r3, [r7, #68]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/ccPSn8Hl.s 			page 6


 157              		.loc 1 132 0
 158 0078 0223     		movs	r3, #2
 159 007a BB64     		str	r3, [r7, #72]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 160              		.loc 1 133 0
 161 007c 0723     		movs	r3, #7
 162 007e FB64     		str	r3, [r7, #76]
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 163              		.loc 1 134 0
 164 0080 07F12003 		add	r3, r7, #32
 165 0084 1846     		mov	r0, r3
 166 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 167 008a 0346     		mov	r3, r0
 168 008c 002B     		cmp	r3, #0
 169 008e 01D0     		beq	.L4
 135:Src/main.c    ****   {
 136:Src/main.c    ****     Error_Handler();
 170              		.loc 1 136 0
 171 0090 FFF7FEFF 		bl	Error_Handler
 172              	.L4:
 137:Src/main.c    ****   }
 138:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 139:Src/main.c    ****   */
 140:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173              		.loc 1 140 0
 174 0094 0F23     		movs	r3, #15
 175 0096 FB60     		str	r3, [r7, #12]
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 142:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 176              		.loc 1 142 0
 177 0098 0223     		movs	r3, #2
 178 009a 3B61     		str	r3, [r7, #16]
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 179              		.loc 1 143 0
 180 009c 0023     		movs	r3, #0
 181 009e 7B61     		str	r3, [r7, #20]
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 182              		.loc 1 144 0
 183 00a0 4FF4A053 		mov	r3, #5120
 184 00a4 BB61     		str	r3, [r7, #24]
 145:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 185              		.loc 1 145 0
 186 00a6 4FF48053 		mov	r3, #4096
 187 00aa FB61     		str	r3, [r7, #28]
 146:Src/main.c    **** 
 147:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 188              		.loc 1 147 0
 189 00ac 07F10C03 		add	r3, r7, #12
 190 00b0 0521     		movs	r1, #5
 191 00b2 1846     		mov	r0, r3
 192 00b4 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 193 00b8 0346     		mov	r3, r0
 194 00ba 002B     		cmp	r3, #0
 195 00bc 01D0     		beq	.L6
 148:Src/main.c    ****   {
 149:Src/main.c    ****     Error_Handler();
 196              		.loc 1 149 0
ARM GAS  /tmp/ccPSn8Hl.s 			page 7


 197 00be FFF7FEFF 		bl	Error_Handler
 198              	.L6:
 150:Src/main.c    ****   }
 151:Src/main.c    **** }
 199              		.loc 1 151 0
 200 00c2 00BF     		nop
 201 00c4 5037     		adds	r7, r7, #80
 202              	.LCFI5:
 203              		.cfi_def_cfa_offset 8
 204 00c6 BD46     		mov	sp, r7
 205              	.LCFI6:
 206              		.cfi_def_cfa_register 13
 207              		@ sp needed
 208 00c8 80BD     		pop	{r7, pc}
 209              	.L8:
 210 00ca 00BF     		.align	2
 211              	.L7:
 212 00cc 00380240 		.word	1073887232
 213 00d0 00700040 		.word	1073770496
 214              		.cfi_endproc
 215              	.LFE134:
 217              		.section	.text.MX_GPIO_Init,"ax",%progbits
 218              		.align	1
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	MX_GPIO_Init:
 225              	.LFB135:
 152:Src/main.c    **** 
 153:Src/main.c    **** /**
 154:Src/main.c    ****   * @brief GPIO Initialization Function
 155:Src/main.c    ****   * @param None
 156:Src/main.c    ****   * @retval None
 157:Src/main.c    ****   */
 158:Src/main.c    **** static void MX_GPIO_Init(void)
 159:Src/main.c    **** {
 226              		.loc 1 159 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 8
 229              		@ frame_needed = 1, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 80B4     		push	{r7}
 232              	.LCFI7:
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 7, -4
 235 0002 83B0     		sub	sp, sp, #12
 236              	.LCFI8:
 237              		.cfi_def_cfa_offset 16
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI9:
 240              		.cfi_def_cfa_register 7
 241              	.LBB4:
 160:Src/main.c    **** 
 161:Src/main.c    ****   /* GPIO Ports Clock Enable */
 162:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 242              		.loc 1 162 0
ARM GAS  /tmp/ccPSn8Hl.s 			page 8


 243 0006 0023     		movs	r3, #0
 244 0008 7B60     		str	r3, [r7, #4]
 245 000a 104B     		ldr	r3, .L10
 246 000c 1B6B     		ldr	r3, [r3, #48]
 247 000e 0F4A     		ldr	r2, .L10
 248 0010 43F08003 		orr	r3, r3, #128
 249 0014 1363     		str	r3, [r2, #48]
 250 0016 0D4B     		ldr	r3, .L10
 251 0018 1B6B     		ldr	r3, [r3, #48]
 252 001a 03F08003 		and	r3, r3, #128
 253 001e 7B60     		str	r3, [r7, #4]
 254 0020 7B68     		ldr	r3, [r7, #4]
 255              	.LBE4:
 256              	.LBB5:
 163:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 257              		.loc 1 163 0
 258 0022 0023     		movs	r3, #0
 259 0024 3B60     		str	r3, [r7]
 260 0026 094B     		ldr	r3, .L10
 261 0028 1B6B     		ldr	r3, [r3, #48]
 262 002a 084A     		ldr	r2, .L10
 263 002c 43F00103 		orr	r3, r3, #1
 264 0030 1363     		str	r3, [r2, #48]
 265 0032 064B     		ldr	r3, .L10
 266 0034 1B6B     		ldr	r3, [r3, #48]
 267 0036 03F00103 		and	r3, r3, #1
 268 003a 3B60     		str	r3, [r7]
 269 003c 3B68     		ldr	r3, [r7]
 270              	.LBE5:
 164:Src/main.c    **** 
 165:Src/main.c    **** }
 271              		.loc 1 165 0
 272 003e 00BF     		nop
 273 0040 0C37     		adds	r7, r7, #12
 274              	.LCFI10:
 275              		.cfi_def_cfa_offset 4
 276 0042 BD46     		mov	sp, r7
 277              	.LCFI11:
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 0044 5DF8047B 		ldr	r7, [sp], #4
 281              	.LCFI12:
 282              		.cfi_restore 7
 283              		.cfi_def_cfa_offset 0
 284 0048 7047     		bx	lr
 285              	.L11:
 286 004a 00BF     		.align	2
 287              	.L10:
 288 004c 00380240 		.word	1073887232
 289              		.cfi_endproc
 290              	.LFE135:
 292              		.section	.text.Init,"ax",%progbits
 293              		.align	1
 294              		.global	Init
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
ARM GAS  /tmp/ccPSn8Hl.s 			page 9


 298              		.fpu fpv4-sp-d16
 300              	Init:
 301              	.LFB136:
 166:Src/main.c    **** 
 167:Src/main.c    **** /* USER CODE BEGIN 4 */
 168:Src/main.c    **** 
 169:Src/main.c    **** void Init(void)
 170:Src/main.c    **** {
 302              		.loc 1 170 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 24
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              	.LCFI13:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 86B0     		sub	sp, sp, #24
 312              	.LCFI14:
 313              		.cfi_def_cfa_offset 32
 314 0004 00AF     		add	r7, sp, #0
 315              	.LCFI15:
 316              		.cfi_def_cfa_register 7
 317              	.LBB6:
 171:Src/main.c    ****   //PriorityGroupConfig(NVIC_PRIORITYGROUP_4);
 172:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 318              		.loc 1 172 0
 319 0006 0023     		movs	r3, #0
 320 0008 3B60     		str	r3, [r7]
 321 000a 124B     		ldr	r3, .L13
 322 000c 1B6B     		ldr	r3, [r3, #48]
 323 000e 114A     		ldr	r2, .L13
 324 0010 43F00803 		orr	r3, r3, #8
 325 0014 1363     		str	r3, [r2, #48]
 326 0016 0F4B     		ldr	r3, .L13
 327 0018 1B6B     		ldr	r3, [r3, #48]
 328 001a 03F00803 		and	r3, r3, #8
 329 001e 3B60     		str	r3, [r7]
 330 0020 3B68     		ldr	r3, [r7]
 331              	.LBE6:
 173:Src/main.c    ****   GPIO_InitTypeDef gpioInit = {0};
 332              		.loc 1 173 0
 333 0022 3B1D     		adds	r3, r7, #4
 334 0024 0022     		movs	r2, #0
 335 0026 1A60     		str	r2, [r3]
 336 0028 5A60     		str	r2, [r3, #4]
 337 002a 9A60     		str	r2, [r3, #8]
 338 002c DA60     		str	r2, [r3, #12]
 339 002e 1A61     		str	r2, [r3, #16]
 174:Src/main.c    ****   gpioInit.Pin = 0xffff;
 340              		.loc 1 174 0
 341 0030 4FF6FF73 		movw	r3, #65535
 342 0034 7B60     		str	r3, [r7, #4]
 175:Src/main.c    **** 	gpioInit.Mode = GPIO_MODE_INPUT;
 343              		.loc 1 175 0
 344 0036 0023     		movs	r3, #0
 345 0038 BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccPSn8Hl.s 			page 10


 176:Src/main.c    **** 	gpioInit.Pull = GPIO_PULLDOWN;
 346              		.loc 1 176 0
 347 003a 0223     		movs	r3, #2
 348 003c FB60     		str	r3, [r7, #12]
 177:Src/main.c    **** 	gpioInit.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 349              		.loc 1 177 0
 350 003e 0323     		movs	r3, #3
 351 0040 3B61     		str	r3, [r7, #16]
 178:Src/main.c    ****   HAL_GPIO_Init(SAMPLING_PORT, &gpioInit);
 352              		.loc 1 178 0
 353 0042 3B1D     		adds	r3, r7, #4
 354 0044 1946     		mov	r1, r3
 355 0046 0448     		ldr	r0, .L13+4
 356 0048 FFF7FEFF 		bl	HAL_GPIO_Init
 179:Src/main.c    **** 
 180:Src/main.c    ****   #ifdef SAMPLING_MANUAL
 181:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 182:Src/main.c    ****   GPIO_InitTypeDef gpioInit_b = {0};
 183:Src/main.c    **** 	gpioInit_b.Pin = 0x0001;
 184:Src/main.c    **** 	gpioInit_b.Mode = GPIO_MODE_AF_PP;
 185:Src/main.c    **** 	gpioInit_b.Pull = GPIO_PULLDOWN;
 186:Src/main.c    **** 	gpioInit_b.Speed = GPIO_SPEED_FREQ_HIGH;
 187:Src/main.c    ****   gpioInit_b.Alternate = GPIO_AF3_TIM8;
 188:Src/main.c    **** 	HAL_GPIO_Init(GPIOA, &gpioInit_b);
 189:Src/main.c    **** 
 190:Src/main.c    **** 	//GPIO_PinAFConfig(GPIOA, GPIO_PinSource0 , GPIO_AF_TIM8);
 191:Src/main.c    **** #endif
 192:Src/main.c    **** }
 357              		.loc 1 192 0
 358 004c 00BF     		nop
 359 004e 1837     		adds	r7, r7, #24
 360              	.LCFI16:
 361              		.cfi_def_cfa_offset 8
 362 0050 BD46     		mov	sp, r7
 363              	.LCFI17:
 364              		.cfi_def_cfa_register 13
 365              		@ sp needed
 366 0052 80BD     		pop	{r7, pc}
 367              	.L14:
 368              		.align	2
 369              	.L13:
 370 0054 00380240 		.word	1073887232
 371 0058 000C0240 		.word	1073875968
 372              		.cfi_endproc
 373              	.LFE136:
 375              		.section	.text.Error_Handler,"ax",%progbits
 376              		.align	1
 377              		.global	Error_Handler
 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv4-sp-d16
 383              	Error_Handler:
 384              	.LFB137:
 193:Src/main.c    **** 
 194:Src/main.c    **** /* USER CODE END 4 */
 195:Src/main.c    **** 
ARM GAS  /tmp/ccPSn8Hl.s 			page 11


 196:Src/main.c    **** /**
 197:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 198:Src/main.c    ****   * @retval None
 199:Src/main.c    ****   */
 200:Src/main.c    **** void Error_Handler(void)
 201:Src/main.c    **** {
 385              		.loc 1 201 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390 0000 80B4     		push	{r7}
 391              	.LCFI18:
 392              		.cfi_def_cfa_offset 4
 393              		.cfi_offset 7, -4
 394 0002 00AF     		add	r7, sp, #0
 395              	.LCFI19:
 396              		.cfi_def_cfa_register 7
 202:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 203:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 204:Src/main.c    **** 
 205:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 206:Src/main.c    **** }
 397              		.loc 1 206 0
 398 0004 00BF     		nop
 399 0006 BD46     		mov	sp, r7
 400              	.LCFI20:
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0008 5DF8047B 		ldr	r7, [sp], #4
 404              	.LCFI21:
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 000c 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE137:
 411              		.text
 412              	.Letext0:
 413              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 414              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 415              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 416              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 417              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 418              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 419              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 420              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 421              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 422              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 423              		.file 12 "la/sampling.h"
 424              		.file 13 "/usr/arm-none-eabi/include/sys/lock.h"
 425              		.file 14 "/usr/arm-none-eabi/include/sys/_types.h"
 426              		.file 15 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 427              		.file 16 "/usr/arm-none-eabi/include/sys/reent.h"
 428              		.file 17 "/usr/arm-none-eabi/include/stdlib.h"
ARM GAS  /tmp/ccPSn8Hl.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
                            *COM*:0000000000000004 triggerMask
                            *COM*:0000000000000004 triggerValue
                            *COM*:0000000000000002 flags
                            *COM*:0000000000000002 period
                            *COM*:0000000000000004 transferSize
     /tmp/ccPSn8Hl.s:23     .text.main:0000000000000000 $t
     /tmp/ccPSn8Hl.s:30     .text.main:0000000000000000 main
     /tmp/ccPSn8Hl.s:78     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccPSn8Hl.s:300    .text.Init:0000000000000000 Init
     /tmp/ccPSn8Hl.s:224    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccPSn8Hl.s:71     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccPSn8Hl.s:383    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccPSn8Hl.s:212    .text.SystemClock_Config:00000000000000cc $d
     /tmp/ccPSn8Hl.s:218    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccPSn8Hl.s:288    .text.MX_GPIO_Init:000000000000004c $d
     /tmp/ccPSn8Hl.s:293    .text.Init:0000000000000000 $t
     /tmp/ccPSn8Hl.s:370    .text.Init:0000000000000054 $d
     /tmp/ccPSn8Hl.s:376    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
HAL_Delay
MX_USB_DEVICE_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
