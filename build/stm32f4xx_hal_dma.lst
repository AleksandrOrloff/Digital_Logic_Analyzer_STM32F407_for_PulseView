ARM GAS  /tmp/ccPveV6K.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_dma.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_DMA_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_DMA_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_DMA_Init:
  26              	.LFB130:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @file    stm32f4xx_hal_dma.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *    
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + IO operation functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *           + Peripheral State and errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @verbatim     
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        and DMA requests.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Polling mode IO operation ***
ARM GAS  /tmp/ccPveV6K.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =================================
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** Interrupt mode IO operation ***
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      ===================================
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               case the DMA interrupt is configured 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure).
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****          detection.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            a single access to a Word in the Memory).
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****            and Destination.
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      =============================================
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****        
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      [..]
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   @endverbatim
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @attention
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * All rights reserved.</center></h2>
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
ARM GAS  /tmp/ccPveV6K.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * the "License"; You may not use this file except in compliance with the
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * License. You may obtain a copy of the License at:
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                        opensource.org/licenses/BSD-3-Clause
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   ******************************************************************************
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */ 
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #include "stm32f4xx_hal.h"
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup STM32F4xx_HAL_Driver
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @defgroup DMA DMA
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief DMA HAL module driver
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** typedef struct
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t Reserved0;
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** } DMA_Base_Registers;
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  * @{
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  */
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    5U  /* 5 ms */
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */  
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
ARM GAS  /tmp/ccPveV6K.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     reference manual.
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
  28              		.loc 1 172 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = 0U;
  44              		.loc 1 173 0
  45 0008 0023     		movs	r3, #0
  46 000a 7B61     		str	r3, [r7, #20]
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
  47              		.loc 1 174 0
  48 000c FFF7FEFF 		bl	HAL_GetTick
  49 0010 3861     		str	r0, [r7, #16]
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
  50              		.loc 1 178 0
  51 0012 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccPveV6K.s 			page 5


  52 0014 002B     		cmp	r3, #0
  53 0016 01D1     		bne	.L2
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
  54              		.loc 1 180 0
  55 0018 0123     		movs	r3, #1
  56 001a 99E0     		b	.L3
  57              	.L2:
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      when FIFO mode is enabled */
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Allocate lock resource */
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
  58              		.loc 1 204 0
  59 001c 7B68     		ldr	r3, [r7, #4]
  60 001e 0022     		movs	r2, #0
  61 0020 83F83420 		strb	r2, [r3, #52]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Change DMA peripheral state */
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
  62              		.loc 1 207 0
  63 0024 7B68     		ldr	r3, [r7, #4]
  64 0026 0222     		movs	r2, #2
  65 0028 83F83520 		strb	r2, [r3, #53]
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the peripheral */
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
  66              		.loc 1 210 0
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 1B68     		ldr	r3, [r3]
  69 0030 1A68     		ldr	r2, [r3]
  70 0032 7B68     		ldr	r3, [r7, #4]
  71 0034 1B68     		ldr	r3, [r3]
  72 0036 22F00102 		bic	r2, r2, #1
  73 003a 1A60     		str	r2, [r3]
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
ARM GAS  /tmp/ccPveV6K.s 			page 6


  74              		.loc 1 213 0
  75 003c 0FE0     		b	.L4
  76              	.L5:
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout */
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
  77              		.loc 1 216 0
  78 003e FFF7FEFF 		bl	HAL_GetTick
  79 0042 0246     		mov	r2, r0
  80 0044 3B69     		ldr	r3, [r7, #16]
  81 0046 D31A     		subs	r3, r2, r3
  82 0048 052B     		cmp	r3, #5
  83 004a 08D9     		bls	.L4
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
  84              		.loc 1 219 0
  85 004c 7B68     		ldr	r3, [r7, #4]
  86 004e 2022     		movs	r2, #32
  87 0050 5A65     		str	r2, [r3, #84]
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
  88              		.loc 1 222 0
  89 0052 7B68     		ldr	r3, [r7, #4]
  90 0054 0322     		movs	r2, #3
  91 0056 83F83520 		strb	r2, [r3, #53]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_TIMEOUT;
  92              		.loc 1 224 0
  93 005a 0323     		movs	r3, #3
  94 005c 78E0     		b	.L3
  95              	.L4:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
  96              		.loc 1 213 0
  97 005e 7B68     		ldr	r3, [r7, #4]
  98 0060 1B68     		ldr	r3, [r3]
  99 0062 1B68     		ldr	r3, [r3]
 100 0064 03F00103 		and	r3, r3, #1
 101 0068 002B     		cmp	r3, #0
 102 006a E8D1     		bne	.L5
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the CR register value */
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 103              		.loc 1 229 0
 104 006c 7B68     		ldr	r3, [r7, #4]
 105 006e 1B68     		ldr	r3, [r3]
 106 0070 1B68     		ldr	r3, [r3]
 107 0072 7B61     		str	r3, [r7, #20]
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 108              		.loc 1 232 0
 109 0074 7A69     		ldr	r2, [r7, #20]
 110 0076 384B     		ldr	r3, .L8
ARM GAS  /tmp/ccPveV6K.s 			page 7


 111 0078 1340     		ands	r3, r3, r2
 112 007a 7B61     		str	r3, [r7, #20]
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 113              		.loc 1 238 0
 114 007c 7B68     		ldr	r3, [r7, #4]
 115 007e 5A68     		ldr	r2, [r3, #4]
 116 0080 7B68     		ldr	r3, [r7, #4]
 117 0082 9B68     		ldr	r3, [r3, #8]
 118 0084 1A43     		orrs	r2, r2, r3
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 119              		.loc 1 239 0
 120 0086 7B68     		ldr	r3, [r7, #4]
 121 0088 DB68     		ldr	r3, [r3, #12]
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 122              		.loc 1 238 0
 123 008a 1A43     		orrs	r2, r2, r3
 124              		.loc 1 239 0
 125 008c 7B68     		ldr	r3, [r7, #4]
 126 008e 1B69     		ldr	r3, [r3, #16]
 127 0090 1A43     		orrs	r2, r2, r3
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 128              		.loc 1 240 0
 129 0092 7B68     		ldr	r3, [r7, #4]
 130 0094 5B69     		ldr	r3, [r3, #20]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 131              		.loc 1 239 0
 132 0096 1A43     		orrs	r2, r2, r3
 133              		.loc 1 240 0
 134 0098 7B68     		ldr	r3, [r7, #4]
 135 009a 9B69     		ldr	r3, [r3, #24]
 136 009c 1A43     		orrs	r2, r2, r3
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 137              		.loc 1 241 0
 138 009e 7B68     		ldr	r3, [r7, #4]
 139 00a0 DB69     		ldr	r3, [r3, #28]
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 140              		.loc 1 240 0
 141 00a2 1A43     		orrs	r2, r2, r3
 142              		.loc 1 241 0
 143 00a4 7B68     		ldr	r3, [r7, #4]
 144 00a6 1B6A     		ldr	r3, [r3, #32]
 145 00a8 1343     		orrs	r3, r3, r2
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 146              		.loc 1 238 0
 147 00aa 7A69     		ldr	r2, [r7, #20]
 148 00ac 1343     		orrs	r3, r3, r2
 149 00ae 7B61     		str	r3, [r7, #20]
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 150              		.loc 1 244 0
 151 00b0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccPveV6K.s 			page 8


 152 00b2 5B6A     		ldr	r3, [r3, #36]
 153 00b4 042B     		cmp	r3, #4
 154 00b6 07D1     		bne	.L6
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 155              		.loc 1 247 0
 156 00b8 7B68     		ldr	r3, [r7, #4]
 157 00ba DA6A     		ldr	r2, [r3, #44]
 158 00bc 7B68     		ldr	r3, [r7, #4]
 159 00be 1B6B     		ldr	r3, [r3, #48]
 160 00c0 1343     		orrs	r3, r3, r2
 161 00c2 7A69     		ldr	r2, [r7, #20]
 162 00c4 1343     		orrs	r3, r3, r2
 163 00c6 7B61     		str	r3, [r7, #20]
 164              	.L6:
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 165              		.loc 1 251 0
 166 00c8 7B68     		ldr	r3, [r7, #4]
 167 00ca 1B68     		ldr	r3, [r3]
 168 00cc 7A69     		ldr	r2, [r7, #20]
 169 00ce 1A60     		str	r2, [r3]
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the FCR register value */
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 170              		.loc 1 254 0
 171 00d0 7B68     		ldr	r3, [r7, #4]
 172 00d2 1B68     		ldr	r3, [r3]
 173 00d4 5B69     		ldr	r3, [r3, #20]
 174 00d6 7B61     		str	r3, [r7, #20]
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 175              		.loc 1 257 0
 176 00d8 7B69     		ldr	r3, [r7, #20]
 177 00da 23F00703 		bic	r3, r3, #7
 178 00de 7B61     		str	r3, [r7, #20]
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 179              		.loc 1 260 0
 180 00e0 7B68     		ldr	r3, [r7, #4]
 181 00e2 5B6A     		ldr	r3, [r3, #36]
 182 00e4 7A69     		ldr	r2, [r7, #20]
 183 00e6 1343     		orrs	r3, r3, r2
 184 00e8 7B61     		str	r3, [r7, #20]
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* The FIFO threshold is not used when the FIFO mode is disabled */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 185              		.loc 1 263 0
 186 00ea 7B68     		ldr	r3, [r7, #4]
 187 00ec 5B6A     		ldr	r3, [r3, #36]
 188 00ee 042B     		cmp	r3, #4
 189 00f0 17D1     		bne	.L7
ARM GAS  /tmp/ccPveV6K.s 			page 9


 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the FIFO threshold */
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 190              		.loc 1 266 0
 191 00f2 7B68     		ldr	r3, [r7, #4]
 192 00f4 9B6A     		ldr	r3, [r3, #40]
 193 00f6 7A69     		ldr	r2, [r7, #20]
 194 00f8 1343     		orrs	r3, r3, r2
 195 00fa 7B61     		str	r3, [r7, #20]
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check compatibility between FIFO threshold level and size of the memory burst */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* for INCR4, INCR8, INCR16 bursts */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 196              		.loc 1 270 0
 197 00fc 7B68     		ldr	r3, [r7, #4]
 198 00fe DB6A     		ldr	r3, [r3, #44]
 199 0100 002B     		cmp	r3, #0
 200 0102 0ED0     		beq	.L7
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (DMA_CheckFifoParam(hdma) != HAL_OK)
 201              		.loc 1 272 0
 202 0104 7868     		ldr	r0, [r7, #4]
 203 0106 FFF7FEFF 		bl	DMA_CheckFifoParam
 204 010a 0346     		mov	r3, r0
 205 010c 002B     		cmp	r3, #0
 206 010e 08D0     		beq	.L7
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 207              		.loc 1 275 0
 208 0110 7B68     		ldr	r3, [r7, #4]
 209 0112 4022     		movs	r2, #64
 210 0114 5A65     		str	r2, [r3, #84]
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 211              		.loc 1 278 0
 212 0116 7B68     		ldr	r3, [r7, #4]
 213 0118 0122     		movs	r2, #1
 214 011a 83F83520 		strb	r2, [r3, #53]
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_ERROR; 
 215              		.loc 1 280 0
 216 011e 0123     		movs	r3, #1
 217 0120 16E0     		b	.L3
 218              	.L7:
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 219              		.loc 1 286 0
 220 0122 7B68     		ldr	r3, [r7, #4]
 221 0124 1B68     		ldr	r3, [r3]
 222 0126 7A69     		ldr	r2, [r7, #20]
 223 0128 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccPveV6K.s 			page 10


 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 224              		.loc 1 290 0
 225 012a 7868     		ldr	r0, [r7, #4]
 226 012c FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 227 0130 0346     		mov	r3, r0
 228 0132 FB60     		str	r3, [r7, #12]
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags */
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 229              		.loc 1 293 0
 230 0134 7B68     		ldr	r3, [r7, #4]
 231 0136 DB6D     		ldr	r3, [r3, #92]
 232 0138 3F22     		movs	r2, #63
 233 013a 9A40     		lsls	r2, r2, r3
 234 013c FB68     		ldr	r3, [r7, #12]
 235 013e 9A60     		str	r2, [r3, #8]
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the error code */
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 236              		.loc 1 296 0
 237 0140 7B68     		ldr	r3, [r7, #4]
 238 0142 0022     		movs	r2, #0
 239 0144 5A65     		str	r2, [r3, #84]
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                                                                                      
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Initialize the DMA state */
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 240              		.loc 1 299 0
 241 0146 7B68     		ldr	r3, [r7, #4]
 242 0148 0122     		movs	r2, #1
 243 014a 83F83520 		strb	r2, [r3, #53]
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 244              		.loc 1 301 0
 245 014e 0023     		movs	r3, #0
 246              	.L3:
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 247              		.loc 1 302 0
 248 0150 1846     		mov	r0, r3
 249 0152 1837     		adds	r7, r7, #24
 250              	.LCFI3:
 251              		.cfi_def_cfa_offset 8
 252 0154 BD46     		mov	sp, r7
 253              	.LCFI4:
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 0156 80BD     		pop	{r7, pc}
 257              	.L9:
 258              		.align	2
 259              	.L8:
 260 0158 3F8010F0 		.word	-267354049
 261              		.cfi_endproc
 262              	.LFE130:
 264              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 265              		.align	1
ARM GAS  /tmp/ccPveV6K.s 			page 11


 266              		.global	HAL_DMA_DeInit
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	HAL_DMA_DeInit:
 273              	.LFB131:
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 274              		.loc 1 311 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 16
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              	.LCFI5:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 84B0     		sub	sp, sp, #16
 284              	.LCFI6:
 285              		.cfi_def_cfa_offset 24
 286 0004 00AF     		add	r7, sp, #0
 287              	.LCFI7:
 288              		.cfi_def_cfa_register 7
 289 0006 7860     		str	r0, [r7, #4]
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma == NULL)
 290              		.loc 1 315 0
 291 0008 7B68     		ldr	r3, [r7, #4]
 292 000a 002B     		cmp	r3, #0
 293 000c 01D1     		bne	.L11
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 294              		.loc 1 317 0
 295 000e 0123     		movs	r3, #1
 296 0010 50E0     		b	.L12
 297              	.L11:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the DMA peripheral state */
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 298              		.loc 1 321 0
 299 0012 7B68     		ldr	r3, [r7, #4]
 300 0014 93F83530 		ldrb	r3, [r3, #53]
 301 0018 DBB2     		uxtb	r3, r3
 302 001a 022B     		cmp	r3, #2
 303 001c 01D1     		bne	.L13
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
ARM GAS  /tmp/ccPveV6K.s 			page 12


 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_BUSY;
 304              		.loc 1 324 0
 305 001e 0223     		movs	r3, #2
 306 0020 48E0     		b	.L12
 307              	.L13:
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 308              		.loc 1 331 0
 309 0022 7B68     		ldr	r3, [r7, #4]
 310 0024 1B68     		ldr	r3, [r3]
 311 0026 1A68     		ldr	r2, [r3]
 312 0028 7B68     		ldr	r3, [r7, #4]
 313 002a 1B68     		ldr	r3, [r3]
 314 002c 22F00102 		bic	r2, r2, #1
 315 0030 1A60     		str	r2, [r3]
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 316              		.loc 1 334 0
 317 0032 7B68     		ldr	r3, [r7, #4]
 318 0034 1B68     		ldr	r3, [r3]
 319 0036 0022     		movs	r2, #0
 320 0038 1A60     		str	r2, [r3]
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 321              		.loc 1 337 0
 322 003a 7B68     		ldr	r3, [r7, #4]
 323 003c 1B68     		ldr	r3, [r3]
 324 003e 0022     		movs	r2, #0
 325 0040 5A60     		str	r2, [r3, #4]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 326              		.loc 1 340 0
 327 0042 7B68     		ldr	r3, [r7, #4]
 328 0044 1B68     		ldr	r3, [r3]
 329 0046 0022     		movs	r2, #0
 330 0048 9A60     		str	r2, [r3, #8]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 331              		.loc 1 343 0
 332 004a 7B68     		ldr	r3, [r7, #4]
 333 004c 1B68     		ldr	r3, [r3]
 334 004e 0022     		movs	r2, #0
 335 0050 DA60     		str	r2, [r3, #12]
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 336              		.loc 1 346 0
ARM GAS  /tmp/ccPveV6K.s 			page 13


 337 0052 7B68     		ldr	r3, [r7, #4]
 338 0054 1B68     		ldr	r3, [r3]
 339 0056 0022     		movs	r2, #0
 340 0058 1A61     		str	r2, [r3, #16]
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->FCR  = 0x00000021U;
 341              		.loc 1 349 0
 342 005a 7B68     		ldr	r3, [r7, #4]
 343 005c 1B68     		ldr	r3, [r3]
 344 005e 2122     		movs	r2, #33
 345 0060 5A61     		str	r2, [r3, #20]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 346              		.loc 1 352 0
 347 0062 7868     		ldr	r0, [r7, #4]
 348 0064 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 349 0068 0346     		mov	r3, r0
 350 006a FB60     		str	r3, [r7, #12]
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clean all callbacks */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->XferCpltCallback = NULL;
 351              		.loc 1 355 0
 352 006c 7B68     		ldr	r3, [r7, #4]
 353 006e 0022     		movs	r2, #0
 354 0070 DA63     		str	r2, [r3, #60]
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->XferHalfCpltCallback = NULL;
 355              		.loc 1 356 0
 356 0072 7B68     		ldr	r3, [r7, #4]
 357 0074 0022     		movs	r2, #0
 358 0076 1A64     		str	r2, [r3, #64]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->XferM1CpltCallback = NULL;
 359              		.loc 1 357 0
 360 0078 7B68     		ldr	r3, [r7, #4]
 361 007a 0022     		movs	r2, #0
 362 007c 5A64     		str	r2, [r3, #68]
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->XferM1HalfCpltCallback = NULL;
 363              		.loc 1 358 0
 364 007e 7B68     		ldr	r3, [r7, #4]
 365 0080 0022     		movs	r2, #0
 366 0082 9A64     		str	r2, [r3, #72]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->XferErrorCallback = NULL;
 367              		.loc 1 359 0
 368 0084 7B68     		ldr	r3, [r7, #4]
 369 0086 0022     		movs	r2, #0
 370 0088 DA64     		str	r2, [r3, #76]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->XferAbortCallback = NULL;
 371              		.loc 1 360 0
 372 008a 7B68     		ldr	r3, [r7, #4]
 373 008c 0022     		movs	r2, #0
 374 008e 1A65     		str	r2, [r3, #80]
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 375              		.loc 1 363 0
 376 0090 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccPveV6K.s 			page 14


 377 0092 DB6D     		ldr	r3, [r3, #92]
 378 0094 3F22     		movs	r2, #63
 379 0096 9A40     		lsls	r2, r2, r3
 380 0098 FB68     		ldr	r3, [r7, #12]
 381 009a 9A60     		str	r2, [r3, #8]
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset the error code */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 382              		.loc 1 366 0
 383 009c 7B68     		ldr	r3, [r7, #4]
 384 009e 0022     		movs	r2, #0
 385 00a0 5A65     		str	r2, [r3, #84]
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Reset the DMA state */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 386              		.loc 1 369 0
 387 00a2 7B68     		ldr	r3, [r7, #4]
 388 00a4 0022     		movs	r2, #0
 389 00a6 83F83520 		strb	r2, [r3, #53]
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 390              		.loc 1 372 0
 391 00aa 7B68     		ldr	r3, [r7, #4]
 392 00ac 0022     		movs	r2, #0
 393 00ae 83F83420 		strb	r2, [r3, #52]
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 394              		.loc 1 374 0
 395 00b2 0023     		movs	r3, #0
 396              	.L12:
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 397              		.loc 1 375 0
 398 00b4 1846     		mov	r0, r3
 399 00b6 1037     		adds	r7, r7, #16
 400              	.LCFI8:
 401              		.cfi_def_cfa_offset 8
 402 00b8 BD46     		mov	sp, r7
 403              	.LCFI9:
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 00ba 80BD     		pop	{r7, pc}
 407              		.cfi_endproc
 408              	.LFE131:
 410              		.section	.text.HAL_DMA_Start,"ax",%progbits
 411              		.align	1
 412              		.global	HAL_DMA_Start
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu fpv4-sp-d16
 418              	HAL_DMA_Start:
 419              	.LFB132:
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
ARM GAS  /tmp/ccPveV6K.s 			page 15


 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim   
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                       #####  IO operation functions  #####
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           Start DMA transfer with interrupt
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Abort DMA transfer
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Poll for transfer complete
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 420              		.loc 1 409 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 24
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              	.LCFI10:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 86B0     		sub	sp, sp, #24
 430              	.LCFI11:
 431              		.cfi_def_cfa_offset 32
 432 0004 00AF     		add	r7, sp, #0
 433              	.LCFI12:
 434              		.cfi_def_cfa_register 7
 435 0006 F860     		str	r0, [r7, #12]
 436 0008 B960     		str	r1, [r7, #8]
 437 000a 7A60     		str	r2, [r7, #4]
 438 000c 3B60     		str	r3, [r7]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 439              		.loc 1 410 0
 440 000e 0023     		movs	r3, #0
 441 0010 FB75     		strb	r3, [r7, #23]
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
ARM GAS  /tmp/ccPveV6K.s 			page 16


 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 442              		.loc 1 416 0
 443 0012 FB68     		ldr	r3, [r7, #12]
 444 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 445 0018 012B     		cmp	r3, #1
 446 001a 01D1     		bne	.L15
 447              		.loc 1 416 0 is_stmt 0 discriminator 1
 448 001c 0223     		movs	r3, #2
 449 001e 26E0     		b	.L16
 450              	.L15:
 451              		.loc 1 416 0 discriminator 2
 452 0020 FB68     		ldr	r3, [r7, #12]
 453 0022 0122     		movs	r2, #1
 454 0024 83F83420 		strb	r2, [r3, #52]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 455              		.loc 1 418 0 is_stmt 1 discriminator 2
 456 0028 FB68     		ldr	r3, [r7, #12]
 457 002a 93F83530 		ldrb	r3, [r3, #53]
 458 002e DBB2     		uxtb	r3, r3
 459 0030 012B     		cmp	r3, #1
 460 0032 15D1     		bne	.L17
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 461              		.loc 1 421 0
 462 0034 FB68     		ldr	r3, [r7, #12]
 463 0036 0222     		movs	r2, #2
 464 0038 83F83520 		strb	r2, [r3, #53]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 465              		.loc 1 424 0
 466 003c FB68     		ldr	r3, [r7, #12]
 467 003e 0022     		movs	r2, #0
 468 0040 5A65     		str	r2, [r3, #84]
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 469              		.loc 1 427 0
 470 0042 3B68     		ldr	r3, [r7]
 471 0044 7A68     		ldr	r2, [r7, #4]
 472 0046 B968     		ldr	r1, [r7, #8]
 473 0048 F868     		ldr	r0, [r7, #12]
 474 004a FFF7FEFF 		bl	DMA_SetConfig
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 475              		.loc 1 430 0
 476 004e FB68     		ldr	r3, [r7, #12]
 477 0050 1B68     		ldr	r3, [r3]
 478 0052 1A68     		ldr	r2, [r3]
 479 0054 FB68     		ldr	r3, [r7, #12]
 480 0056 1B68     		ldr	r3, [r3]
 481 0058 42F00102 		orr	r2, r2, #1
 482 005c 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccPveV6K.s 			page 17


 483 005e 05E0     		b	.L18
 484              	.L17:
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 485              		.loc 1 435 0
 486 0060 FB68     		ldr	r3, [r7, #12]
 487 0062 0022     		movs	r2, #0
 488 0064 83F83420 		strb	r2, [r3, #52]
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 489              		.loc 1 438 0
 490 0068 0223     		movs	r3, #2
 491 006a FB75     		strb	r3, [r7, #23]
 492              	.L18:
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 493              		.loc 1 440 0
 494 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 495              	.L16:
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 496              		.loc 1 441 0
 497 006e 1846     		mov	r0, r3
 498 0070 1837     		adds	r7, r7, #24
 499              	.LCFI13:
 500              		.cfi_def_cfa_offset 8
 501 0072 BD46     		mov	sp, r7
 502              	.LCFI14:
 503              		.cfi_def_cfa_register 13
 504              		@ sp needed
 505 0074 80BD     		pop	{r7, pc}
 506              		.cfi_endproc
 507              	.LFE132:
 509              		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_DMA_Start_IT
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 515              		.fpu fpv4-sp-d16
 517              	HAL_DMA_Start_IT:
 518              	.LFB133:
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
ARM GAS  /tmp/ccPveV6K.s 			page 18


 519              		.loc 1 453 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 24
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              	.LCFI15:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 86B0     		sub	sp, sp, #24
 529              	.LCFI16:
 530              		.cfi_def_cfa_offset 32
 531 0004 00AF     		add	r7, sp, #0
 532              	.LCFI17:
 533              		.cfi_def_cfa_register 7
 534 0006 F860     		str	r0, [r7, #12]
 535 0008 B960     		str	r1, [r7, #8]
 536 000a 7A60     		str	r2, [r7, #4]
 537 000c 3B60     		str	r3, [r7]
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 538              		.loc 1 454 0
 539 000e 0023     		movs	r3, #0
 540 0010 FB75     		strb	r3, [r7, #23]
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 541              		.loc 1 457 0
 542 0012 FB68     		ldr	r3, [r7, #12]
 543 0014 9B6D     		ldr	r3, [r3, #88]
 544 0016 3B61     		str	r3, [r7, #16]
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Check the parameters */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 545              		.loc 1 463 0
 546 0018 FB68     		ldr	r3, [r7, #12]
 547 001a 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 548 001e 012B     		cmp	r3, #1
 549 0020 01D1     		bne	.L20
 550              		.loc 1 463 0 is_stmt 0 discriminator 1
 551 0022 0223     		movs	r3, #2
 552 0024 40E0     		b	.L21
 553              	.L20:
 554              		.loc 1 463 0 discriminator 2
 555 0026 FB68     		ldr	r3, [r7, #12]
 556 0028 0122     		movs	r2, #1
 557 002a 83F83420 		strb	r2, [r3, #52]
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 558              		.loc 1 465 0 is_stmt 1 discriminator 2
 559 002e FB68     		ldr	r3, [r7, #12]
 560 0030 93F83530 		ldrb	r3, [r3, #53]
 561 0034 DBB2     		uxtb	r3, r3
 562 0036 012B     		cmp	r3, #1
 563 0038 2FD1     		bne	.L22
ARM GAS  /tmp/ccPveV6K.s 			page 19


 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change DMA peripheral state */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 564              		.loc 1 468 0
 565 003a FB68     		ldr	r3, [r7, #12]
 566 003c 0222     		movs	r2, #2
 567 003e 83F83520 		strb	r2, [r3, #53]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Initialize the error code */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 568              		.loc 1 471 0
 569 0042 FB68     		ldr	r3, [r7, #12]
 570 0044 0022     		movs	r2, #0
 571 0046 5A65     		str	r2, [r3, #84]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 572              		.loc 1 474 0
 573 0048 3B68     		ldr	r3, [r7]
 574 004a 7A68     		ldr	r2, [r7, #4]
 575 004c B968     		ldr	r1, [r7, #8]
 576 004e F868     		ldr	r0, [r7, #12]
 577 0050 FFF7FEFF 		bl	DMA_SetConfig
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 578              		.loc 1 477 0
 579 0054 FB68     		ldr	r3, [r7, #12]
 580 0056 DB6D     		ldr	r3, [r3, #92]
 581 0058 3F22     		movs	r2, #63
 582 005a 9A40     		lsls	r2, r2, r3
 583 005c 3B69     		ldr	r3, [r7, #16]
 584 005e 9A60     		str	r2, [r3, #8]
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable Common interrupts*/
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 585              		.loc 1 480 0
 586 0060 FB68     		ldr	r3, [r7, #12]
 587 0062 1B68     		ldr	r3, [r3]
 588 0064 1A68     		ldr	r2, [r3]
 589 0066 FB68     		ldr	r3, [r7, #12]
 590 0068 1B68     		ldr	r3, [r3]
 591 006a 42F01602 		orr	r2, r2, #22
 592 006e 1A60     		str	r2, [r3]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 593              		.loc 1 482 0
 594 0070 FB68     		ldr	r3, [r7, #12]
 595 0072 1B6C     		ldr	r3, [r3, #64]
 596 0074 002B     		cmp	r3, #0
 597 0076 07D0     		beq	.L23
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 598              		.loc 1 484 0
 599 0078 FB68     		ldr	r3, [r7, #12]
 600 007a 1B68     		ldr	r3, [r3]
 601 007c 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccPveV6K.s 			page 20


 602 007e FB68     		ldr	r3, [r7, #12]
 603 0080 1B68     		ldr	r3, [r3]
 604 0082 42F00802 		orr	r2, r2, #8
 605 0086 1A60     		str	r2, [r3]
 606              	.L23:
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Enable the Peripheral */
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 607              		.loc 1 488 0
 608 0088 FB68     		ldr	r3, [r7, #12]
 609 008a 1B68     		ldr	r3, [r3]
 610 008c 1A68     		ldr	r2, [r3]
 611 008e FB68     		ldr	r3, [r7, #12]
 612 0090 1B68     		ldr	r3, [r3]
 613 0092 42F00102 		orr	r2, r2, #1
 614 0096 1A60     		str	r2, [r3]
 615 0098 05E0     		b	.L24
 616              	.L22:
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process unlocked */
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 617              		.loc 1 493 0
 618 009a FB68     		ldr	r3, [r7, #12]
 619 009c 0022     		movs	r2, #0
 620 009e 83F83420 		strb	r2, [r3, #52]
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_BUSY;
 621              		.loc 1 496 0
 622 00a2 0223     		movs	r3, #2
 623 00a4 FB75     		strb	r3, [r7, #23]
 624              	.L24:
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 625              		.loc 1 499 0
 626 00a6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 627              	.L21:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 628              		.loc 1 500 0
 629 00a8 1846     		mov	r0, r3
 630 00aa 1837     		adds	r7, r7, #24
 631              	.LCFI18:
 632              		.cfi_def_cfa_offset 8
 633 00ac BD46     		mov	sp, r7
 634              	.LCFI19:
 635              		.cfi_def_cfa_register 13
 636              		@ sp needed
 637 00ae 80BD     		pop	{r7, pc}
 638              		.cfi_endproc
 639              	.LFE133:
 641              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 642              		.align	1
 643              		.global	HAL_DMA_Abort
ARM GAS  /tmp/ccPveV6K.s 			page 21


 644              		.syntax unified
 645              		.thumb
 646              		.thumb_func
 647              		.fpu fpv4-sp-d16
 649              	HAL_DMA_Abort:
 650              	.LFB134:
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                   
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *        this single data is finished.  
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 651              		.loc 1 515 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 16
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              	.LCFI20:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 7, -8
 659              		.cfi_offset 14, -4
 660 0002 84B0     		sub	sp, sp, #16
 661              	.LCFI21:
 662              		.cfi_def_cfa_offset 24
 663 0004 00AF     		add	r7, sp, #0
 664              	.LCFI22:
 665              		.cfi_def_cfa_register 7
 666 0006 7860     		str	r0, [r7, #4]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 667              		.loc 1 517 0
 668 0008 7B68     		ldr	r3, [r7, #4]
 669 000a 9B6D     		ldr	r3, [r3, #88]
 670 000c FB60     		str	r3, [r7, #12]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 671              		.loc 1 519 0
 672 000e FFF7FEFF 		bl	HAL_GetTick
 673 0012 B860     		str	r0, [r7, #8]
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 674              		.loc 1 521 0
 675 0014 7B68     		ldr	r3, [r7, #4]
 676 0016 93F83530 		ldrb	r3, [r3, #53]
 677 001a DBB2     		uxtb	r3, r3
 678 001c 022B     		cmp	r3, #2
 679 001e 08D0     		beq	.L26
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
ARM GAS  /tmp/ccPveV6K.s 			page 22


 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 680              		.loc 1 523 0
 681 0020 7B68     		ldr	r3, [r7, #4]
 682 0022 8022     		movs	r2, #128
 683 0024 5A65     		str	r2, [r3, #84]
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 684              		.loc 1 526 0
 685 0026 7B68     		ldr	r3, [r7, #4]
 686 0028 0022     		movs	r2, #0
 687 002a 83F83420 		strb	r2, [r3, #52]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 688              		.loc 1 528 0
 689 002e 0123     		movs	r3, #1
 690 0030 52E0     		b	.L27
 691              	.L26:
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 692              		.loc 1 533 0
 693 0032 7B68     		ldr	r3, [r7, #4]
 694 0034 1B68     		ldr	r3, [r3]
 695 0036 1A68     		ldr	r2, [r3]
 696 0038 7B68     		ldr	r3, [r7, #4]
 697 003a 1B68     		ldr	r3, [r3]
 698 003c 22F01602 		bic	r2, r2, #22
 699 0040 1A60     		str	r2, [r3]
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 700              		.loc 1 534 0
 701 0042 7B68     		ldr	r3, [r7, #4]
 702 0044 1B68     		ldr	r3, [r3]
 703 0046 5A69     		ldr	r2, [r3, #20]
 704 0048 7B68     		ldr	r3, [r7, #4]
 705 004a 1B68     		ldr	r3, [r3]
 706 004c 22F08002 		bic	r2, r2, #128
 707 0050 5A61     		str	r2, [r3, #20]
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 708              		.loc 1 536 0
 709 0052 7B68     		ldr	r3, [r7, #4]
 710 0054 1B6C     		ldr	r3, [r3, #64]
 711 0056 002B     		cmp	r3, #0
 712 0058 03D1     		bne	.L28
 713              		.loc 1 536 0 is_stmt 0 discriminator 1
 714 005a 7B68     		ldr	r3, [r7, #4]
 715 005c 9B6C     		ldr	r3, [r3, #72]
 716 005e 002B     		cmp	r3, #0
 717 0060 07D0     		beq	.L29
 718              	.L28:
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 719              		.loc 1 538 0 is_stmt 1
 720 0062 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccPveV6K.s 			page 23


 721 0064 1B68     		ldr	r3, [r3]
 722 0066 1A68     		ldr	r2, [r3]
 723 0068 7B68     		ldr	r3, [r7, #4]
 724 006a 1B68     		ldr	r3, [r3]
 725 006c 22F00802 		bic	r2, r2, #8
 726 0070 1A60     		str	r2, [r3]
 727              	.L29:
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 728              		.loc 1 542 0
 729 0072 7B68     		ldr	r3, [r7, #4]
 730 0074 1B68     		ldr	r3, [r3]
 731 0076 1A68     		ldr	r2, [r3]
 732 0078 7B68     		ldr	r3, [r7, #4]
 733 007a 1B68     		ldr	r3, [r3]
 734 007c 22F00102 		bic	r2, r2, #1
 735 0080 1A60     		str	r2, [r3]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 736              		.loc 1 545 0
 737 0082 13E0     		b	.L30
 738              	.L31:
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Check for the Timeout */
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 739              		.loc 1 548 0
 740 0084 FFF7FEFF 		bl	HAL_GetTick
 741 0088 0246     		mov	r2, r0
 742 008a BB68     		ldr	r3, [r7, #8]
 743 008c D31A     		subs	r3, r2, r3
 744 008e 052B     		cmp	r3, #5
 745 0090 0CD9     		bls	.L30
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 746              		.loc 1 551 0
 747 0092 7B68     		ldr	r3, [r7, #4]
 748 0094 2022     		movs	r2, #32
 749 0096 5A65     		str	r2, [r3, #84]
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 750              		.loc 1 554 0
 751 0098 7B68     		ldr	r3, [r7, #4]
 752 009a 0022     		movs	r2, #0
 753 009c 83F83420 		strb	r2, [r3, #52]
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 754              		.loc 1 557 0
 755 00a0 7B68     		ldr	r3, [r7, #4]
 756 00a2 0322     		movs	r2, #3
 757 00a4 83F83520 		strb	r2, [r3, #53]
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
ARM GAS  /tmp/ccPveV6K.s 			page 24


 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 758              		.loc 1 559 0
 759 00a8 0323     		movs	r3, #3
 760 00aa 15E0     		b	.L27
 761              	.L30:
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 762              		.loc 1 545 0
 763 00ac 7B68     		ldr	r3, [r7, #4]
 764 00ae 1B68     		ldr	r3, [r3]
 765 00b0 1B68     		ldr	r3, [r3]
 766 00b2 03F00103 		and	r3, r3, #1
 767 00b6 002B     		cmp	r3, #0
 768 00b8 E4D1     		bne	.L31
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 769              		.loc 1 564 0
 770 00ba 7B68     		ldr	r3, [r7, #4]
 771 00bc DB6D     		ldr	r3, [r3, #92]
 772 00be 3F22     		movs	r2, #63
 773 00c0 9A40     		lsls	r2, r2, r3
 774 00c2 FB68     		ldr	r3, [r7, #12]
 775 00c4 9A60     		str	r2, [r3, #8]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 776              		.loc 1 567 0
 777 00c6 7B68     		ldr	r3, [r7, #4]
 778 00c8 0022     		movs	r2, #0
 779 00ca 83F83420 		strb	r2, [r3, #52]
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Change the DMA state*/
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 780              		.loc 1 570 0
 781 00ce 7B68     		ldr	r3, [r7, #4]
 782 00d0 0122     		movs	r2, #1
 783 00d2 83F83520 		strb	r2, [r3, #53]
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 784              		.loc 1 572 0
 785 00d6 0023     		movs	r3, #0
 786              	.L27:
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 787              		.loc 1 573 0
 788 00d8 1846     		mov	r0, r3
 789 00da 1037     		adds	r7, r7, #16
 790              	.LCFI23:
 791              		.cfi_def_cfa_offset 8
 792 00dc BD46     		mov	sp, r7
 793              	.LCFI24:
 794              		.cfi_def_cfa_register 13
 795              		@ sp needed
 796 00de 80BD     		pop	{r7, pc}
 797              		.cfi_endproc
 798              	.LFE134:
ARM GAS  /tmp/ccPveV6K.s 			page 25


 800              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 801              		.align	1
 802              		.global	HAL_DMA_Abort_IT
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 806              		.fpu fpv4-sp-d16
 808              	HAL_DMA_Abort_IT:
 809              	.LFB135:
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 810              		.loc 1 582 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0000 80B4     		push	{r7}
 816              	.LCFI25:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 7, -4
 819 0002 83B0     		sub	sp, sp, #12
 820              	.LCFI26:
 821              		.cfi_def_cfa_offset 16
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI27:
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 826              		.loc 1 583 0
 827 0008 7B68     		ldr	r3, [r7, #4]
 828 000a 93F83530 		ldrb	r3, [r3, #53]
 829 000e DBB2     		uxtb	r3, r3
 830 0010 022B     		cmp	r3, #2
 831 0012 04D0     		beq	.L33
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 832              		.loc 1 585 0
 833 0014 7B68     		ldr	r3, [r7, #4]
 834 0016 8022     		movs	r2, #128
 835 0018 5A65     		str	r2, [r3, #84]
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 836              		.loc 1 586 0
 837 001a 0123     		movs	r3, #1
 838 001c 0CE0     		b	.L34
 839              	.L33:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Set Abort State  */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
ARM GAS  /tmp/ccPveV6K.s 			page 26


 840              		.loc 1 591 0
 841 001e 7B68     		ldr	r3, [r7, #4]
 842 0020 0522     		movs	r2, #5
 843 0022 83F83520 		strb	r2, [r3, #53]
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Disable the stream */
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 844              		.loc 1 594 0
 845 0026 7B68     		ldr	r3, [r7, #4]
 846 0028 1B68     		ldr	r3, [r3]
 847 002a 1A68     		ldr	r2, [r3]
 848 002c 7B68     		ldr	r3, [r7, #4]
 849 002e 1B68     		ldr	r3, [r3]
 850 0030 22F00102 		bic	r2, r2, #1
 851 0034 1A60     		str	r2, [r3]
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return HAL_OK;
 852              		.loc 1 597 0
 853 0036 0023     		movs	r3, #0
 854              	.L34:
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 855              		.loc 1 598 0
 856 0038 1846     		mov	r0, r3
 857 003a 0C37     		adds	r7, r7, #12
 858              	.LCFI28:
 859              		.cfi_def_cfa_offset 4
 860 003c BD46     		mov	sp, r7
 861              	.LCFI29:
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 003e 5DF8047B 		ldr	r7, [sp], #4
 865              	.LCFI30:
 866              		.cfi_restore 7
 867              		.cfi_def_cfa_offset 0
 868 0042 7047     		bx	lr
 869              		.cfi_endproc
 870              	.LFE135:
 872              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 873              		.align	1
 874              		.global	HAL_DMA_PollForTransfer
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 878              		.fpu fpv4-sp-d16
 880              	HAL_DMA_PollForTransfer:
 881              	.LFB136:
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma          pointer to a DMA_HandleTypeDef structure that contains
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CompleteLevel Specifies the DMA level complete.
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *         This model could be used for debug purpose.
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  Timeout       Timeout duration.
ARM GAS  /tmp/ccPveV6K.s 			page 27


 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 882              		.loc 1 612 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 40
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              	.LCFI31:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 8AB0     		sub	sp, sp, #40
 892              	.LCFI32:
 893              		.cfi_def_cfa_offset 48
 894 0004 00AF     		add	r7, sp, #0
 895              	.LCFI33:
 896              		.cfi_def_cfa_register 7
 897 0006 F860     		str	r0, [r7, #12]
 898 0008 0B46     		mov	r3, r1
 899 000a 7A60     		str	r2, [r7, #4]
 900 000c FB72     		strb	r3, [r7, #11]
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 901              		.loc 1 613 0
 902 000e 0023     		movs	r3, #0
 903 0010 FB77     		strb	r3, [r7, #31]
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 904              		.loc 1 615 0
 905 0012 FFF7FEFF 		bl	HAL_GetTick
 906 0016 B861     		str	r0, [r7, #24]
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs;
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 907              		.loc 1 621 0
 908 0018 FB68     		ldr	r3, [r7, #12]
 909 001a 93F83530 		ldrb	r3, [r3, #53]
 910 001e DBB2     		uxtb	r3, r3
 911 0020 022B     		cmp	r3, #2
 912 0022 08D0     		beq	.L36
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* No transfer ongoing */
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 913              		.loc 1 624 0
 914 0024 FB68     		ldr	r3, [r7, #12]
 915 0026 8022     		movs	r2, #128
 916 0028 5A65     		str	r2, [r3, #84]
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 917              		.loc 1 625 0
 918 002a FB68     		ldr	r3, [r7, #12]
 919 002c 0022     		movs	r2, #0
 920 002e 83F83420 		strb	r2, [r3, #52]
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccPveV6K.s 			page 28


 921              		.loc 1 626 0
 922 0032 0123     		movs	r3, #1
 923 0034 BFE0     		b	.L37
 924              	.L36:
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 925              		.loc 1 630 0
 926 0036 FB68     		ldr	r3, [r7, #12]
 927 0038 1B68     		ldr	r3, [r3]
 928 003a 1B68     		ldr	r3, [r3]
 929 003c 03F48073 		and	r3, r3, #256
 930 0040 002B     		cmp	r3, #0
 931 0042 05D0     		beq	.L38
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 932              		.loc 1 632 0
 933 0044 FB68     		ldr	r3, [r7, #12]
 934 0046 4FF48072 		mov	r2, #256
 935 004a 5A65     		str	r2, [r3, #84]
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     return HAL_ERROR;
 936              		.loc 1 633 0
 937 004c 0123     		movs	r3, #1
 938 004e B2E0     		b	.L37
 939              	.L38:
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 940              		.loc 1 637 0
 941 0050 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 942 0052 002B     		cmp	r3, #0
 943 0054 06D1     		bne	.L39
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Transfer Complete flag */
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 944              		.loc 1 640 0
 945 0056 FB68     		ldr	r3, [r7, #12]
 946 0058 DB6D     		ldr	r3, [r3, #92]
 947 005a 2022     		movs	r2, #32
 948 005c 02FA03F3 		lsl	r3, r2, r3
 949 0060 7B62     		str	r3, [r7, #36]
 950 0062 05E0     		b	.L40
 951              	.L39:
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Half Transfer Complete flag */
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 952              		.loc 1 645 0
 953 0064 FB68     		ldr	r3, [r7, #12]
 954 0066 DB6D     		ldr	r3, [r3, #92]
 955 0068 1022     		movs	r2, #16
 956 006a 02FA03F3 		lsl	r3, r2, r3
 957 006e 7B62     		str	r3, [r7, #36]
 958              	.L40:
ARM GAS  /tmp/ccPveV6K.s 			page 29


 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 959              		.loc 1 648 0
 960 0070 FB68     		ldr	r3, [r7, #12]
 961 0072 9B6D     		ldr	r3, [r3, #88]
 962 0074 7B61     		str	r3, [r7, #20]
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 963              		.loc 1 649 0
 964 0076 7B69     		ldr	r3, [r7, #20]
 965 0078 1B68     		ldr	r3, [r3]
 966 007a 3B62     		str	r3, [r7, #32]
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 967              		.loc 1 651 0
 968 007c 5AE0     		b	.L41
 969              	.L47:
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
 970              		.loc 1 654 0
 971 007e 7B68     		ldr	r3, [r7, #4]
 972 0080 B3F1FF3F 		cmp	r3, #-1
 973 0084 17D0     		beq	.L42
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 974              		.loc 1 656 0
 975 0086 7B68     		ldr	r3, [r7, #4]
 976 0088 002B     		cmp	r3, #0
 977 008a 07D0     		beq	.L43
 978              		.loc 1 656 0 is_stmt 0 discriminator 1
 979 008c FFF7FEFF 		bl	HAL_GetTick
 980 0090 0246     		mov	r2, r0
 981 0092 BB69     		ldr	r3, [r7, #24]
 982 0094 D31A     		subs	r3, r2, r3
 983 0096 7A68     		ldr	r2, [r7, #4]
 984 0098 9A42     		cmp	r2, r3
 985 009a 0CD2     		bcs	.L42
 986              	.L43:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Update error code */
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 987              		.loc 1 659 0 is_stmt 1
 988 009c FB68     		ldr	r3, [r7, #12]
 989 009e 2022     		movs	r2, #32
 990 00a0 5A65     		str	r2, [r3, #84]
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 991              		.loc 1 662 0
 992 00a2 FB68     		ldr	r3, [r7, #12]
 993 00a4 0022     		movs	r2, #0
 994 00a6 83F83420 		strb	r2, [r3, #52]
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 995              		.loc 1 665 0
ARM GAS  /tmp/ccPveV6K.s 			page 30


 996 00aa FB68     		ldr	r3, [r7, #12]
 997 00ac 0122     		movs	r2, #1
 998 00ae 83F83520 		strb	r2, [r3, #53]
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return HAL_TIMEOUT;
 999              		.loc 1 667 0
 1000 00b2 0323     		movs	r3, #3
 1001 00b4 7FE0     		b	.L37
 1002              	.L42:
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Get the ISR register value */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     tmpisr = regs->ISR;
 1003              		.loc 1 672 0
 1004 00b6 7B69     		ldr	r3, [r7, #20]
 1005 00b8 1B68     		ldr	r3, [r3]
 1006 00ba 3B62     		str	r3, [r7, #32]
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1007              		.loc 1 674 0
 1008 00bc FB68     		ldr	r3, [r7, #12]
 1009 00be DB6D     		ldr	r3, [r3, #92]
 1010 00c0 0822     		movs	r2, #8
 1011 00c2 9A40     		lsls	r2, r2, r3
 1012 00c4 3B6A     		ldr	r3, [r7, #32]
 1013 00c6 1340     		ands	r3, r3, r2
 1014 00c8 002B     		cmp	r3, #0
 1015 00ca 0BD0     		beq	.L44
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1016              		.loc 1 677 0
 1017 00cc FB68     		ldr	r3, [r7, #12]
 1018 00ce 5B6D     		ldr	r3, [r3, #84]
 1019 00d0 43F00102 		orr	r2, r3, #1
 1020 00d4 FB68     		ldr	r3, [r7, #12]
 1021 00d6 5A65     		str	r2, [r3, #84]
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1022              		.loc 1 680 0
 1023 00d8 FB68     		ldr	r3, [r7, #12]
 1024 00da DB6D     		ldr	r3, [r3, #92]
 1025 00dc 0822     		movs	r2, #8
 1026 00de 9A40     		lsls	r2, r2, r3
 1027 00e0 7B69     		ldr	r3, [r7, #20]
 1028 00e2 9A60     		str	r2, [r3, #8]
 1029              	.L44:
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1030              		.loc 1 683 0
 1031 00e4 FB68     		ldr	r3, [r7, #12]
 1032 00e6 DB6D     		ldr	r3, [r3, #92]
 1033 00e8 0122     		movs	r2, #1
 1034 00ea 9A40     		lsls	r2, r2, r3
ARM GAS  /tmp/ccPveV6K.s 			page 31


 1035 00ec 3B6A     		ldr	r3, [r7, #32]
 1036 00ee 1340     		ands	r3, r3, r2
 1037 00f0 002B     		cmp	r3, #0
 1038 00f2 0BD0     		beq	.L45
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1039              		.loc 1 686 0
 1040 00f4 FB68     		ldr	r3, [r7, #12]
 1041 00f6 5B6D     		ldr	r3, [r3, #84]
 1042 00f8 43F00202 		orr	r2, r3, #2
 1043 00fc FB68     		ldr	r3, [r7, #12]
 1044 00fe 5A65     		str	r2, [r3, #84]
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1045              		.loc 1 689 0
 1046 0100 FB68     		ldr	r3, [r7, #12]
 1047 0102 DB6D     		ldr	r3, [r3, #92]
 1048 0104 0122     		movs	r2, #1
 1049 0106 9A40     		lsls	r2, r2, r3
 1050 0108 7B69     		ldr	r3, [r7, #20]
 1051 010a 9A60     		str	r2, [r3, #8]
 1052              	.L45:
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1053              		.loc 1 692 0
 1054 010c FB68     		ldr	r3, [r7, #12]
 1055 010e DB6D     		ldr	r3, [r3, #92]
 1056 0110 0422     		movs	r2, #4
 1057 0112 9A40     		lsls	r2, r2, r3
 1058 0114 3B6A     		ldr	r3, [r7, #32]
 1059 0116 1340     		ands	r3, r3, r2
 1060 0118 002B     		cmp	r3, #0
 1061 011a 0BD0     		beq	.L41
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1062              		.loc 1 695 0
 1063 011c FB68     		ldr	r3, [r7, #12]
 1064 011e 5B6D     		ldr	r3, [r3, #84]
 1065 0120 43F00402 		orr	r2, r3, #4
 1066 0124 FB68     		ldr	r3, [r7, #12]
 1067 0126 5A65     		str	r2, [r3, #84]
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1068              		.loc 1 698 0
 1069 0128 FB68     		ldr	r3, [r7, #12]
 1070 012a DB6D     		ldr	r3, [r3, #92]
 1071 012c 0422     		movs	r2, #4
 1072 012e 9A40     		lsls	r2, r2, r3
 1073 0130 7B69     		ldr	r3, [r7, #20]
 1074 0132 9A60     		str	r2, [r3, #8]
 1075              	.L41:
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
ARM GAS  /tmp/ccPveV6K.s 			page 32


 1076              		.loc 1 651 0
 1077 0134 3A6A     		ldr	r2, [r7, #32]
 1078 0136 7B6A     		ldr	r3, [r7, #36]
 1079 0138 1340     		ands	r3, r3, r2
 1080 013a 002B     		cmp	r3, #0
 1081 013c 05D1     		bne	.L46
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 1082              		.loc 1 651 0 is_stmt 0 discriminator 1
 1083 013e FB68     		ldr	r3, [r7, #12]
 1084 0140 5B6D     		ldr	r3, [r3, #84]
 1085 0142 03F00103 		and	r3, r3, #1
 1086 0146 002B     		cmp	r3, #0
 1087 0148 99D0     		beq	.L47
 1088              	.L46:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1089              		.loc 1 702 0 is_stmt 1
 1090 014a FB68     		ldr	r3, [r7, #12]
 1091 014c 5B6D     		ldr	r3, [r3, #84]
 1092 014e 002B     		cmp	r3, #0
 1093 0150 18D0     		beq	.L48
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1094              		.loc 1 704 0
 1095 0152 FB68     		ldr	r3, [r7, #12]
 1096 0154 5B6D     		ldr	r3, [r3, #84]
 1097 0156 03F00103 		and	r3, r3, #1
 1098 015a 002B     		cmp	r3, #0
 1099 015c 12D0     		beq	.L48
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 1100              		.loc 1 706 0
 1101 015e F868     		ldr	r0, [r7, #12]
 1102 0160 FFF7FEFF 		bl	HAL_DMA_Abort
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1103              		.loc 1 709 0
 1104 0164 FB68     		ldr	r3, [r7, #12]
 1105 0166 DB6D     		ldr	r3, [r3, #92]
 1106 0168 3022     		movs	r2, #48
 1107 016a 9A40     		lsls	r2, r2, r3
 1108 016c 7B69     		ldr	r3, [r7, #20]
 1109 016e 9A60     		str	r2, [r3, #8]
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1110              		.loc 1 712 0
 1111 0170 FB68     		ldr	r3, [r7, #12]
 1112 0172 0022     		movs	r2, #0
 1113 0174 83F83420 		strb	r2, [r3, #52]
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1114              		.loc 1 715 0
ARM GAS  /tmp/ccPveV6K.s 			page 33


 1115 0178 FB68     		ldr	r3, [r7, #12]
 1116 017a 0122     		movs	r2, #1
 1117 017c 83F83520 		strb	r2, [r3, #53]
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       return HAL_ERROR;
 1118              		.loc 1 717 0
 1119 0180 0123     		movs	r3, #1
 1120 0182 18E0     		b	.L37
 1121              	.L48:
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****    }
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Get the level transfer complete flag */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1122              		.loc 1 722 0
 1123 0184 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1124 0186 002B     		cmp	r3, #0
 1125 0188 0ED1     		bne	.L49
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1126              		.loc 1 725 0
 1127 018a FB68     		ldr	r3, [r7, #12]
 1128 018c DB6D     		ldr	r3, [r3, #92]
 1129 018e 3022     		movs	r2, #48
 1130 0190 9A40     		lsls	r2, r2, r3
 1131 0192 7B69     		ldr	r3, [r7, #20]
 1132 0194 9A60     		str	r2, [r3, #8]
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Process Unlocked */
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1133              		.loc 1 728 0
 1134 0196 FB68     		ldr	r3, [r7, #12]
 1135 0198 0022     		movs	r2, #0
 1136 019a 83F83420 		strb	r2, [r3, #52]
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1137              		.loc 1 730 0
 1138 019e FB68     		ldr	r3, [r7, #12]
 1139 01a0 0122     		movs	r2, #1
 1140 01a2 83F83520 		strb	r2, [r3, #53]
 1141 01a6 05E0     		b	.L50
 1142              	.L49:
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 1143              		.loc 1 735 0
 1144 01a8 FB68     		ldr	r3, [r7, #12]
 1145 01aa DB6D     		ldr	r3, [r3, #92]
 1146 01ac 1022     		movs	r2, #16
 1147 01ae 9A40     		lsls	r2, r2, r3
 1148 01b0 7B69     		ldr	r3, [r7, #20]
 1149 01b2 9A60     		str	r2, [r3, #8]
 1150              	.L50:
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
ARM GAS  /tmp/ccPveV6K.s 			page 34


 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1151              		.loc 1 738 0
 1152 01b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1153              	.L37:
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1154              		.loc 1 739 0
 1155 01b6 1846     		mov	r0, r3
 1156 01b8 2837     		adds	r7, r7, #40
 1157              	.LCFI34:
 1158              		.cfi_def_cfa_offset 8
 1159 01ba BD46     		mov	sp, r7
 1160              	.LCFI35:
 1161              		.cfi_def_cfa_register 13
 1162              		@ sp needed
 1163 01bc 80BD     		pop	{r7, pc}
 1164              		.cfi_endproc
 1165              	.LFE136:
 1167              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1168              		.align	1
 1169              		.global	HAL_DMA_IRQHandler
 1170              		.syntax unified
 1171              		.thumb
 1172              		.thumb_func
 1173              		.fpu fpv4-sp-d16
 1175              	HAL_DMA_IRQHandler:
 1176              	.LFB137:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval None
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1177              		.loc 1 748 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 24
 1180              		@ frame_needed = 1, uses_anonymous_args = 0
 1181 0000 80B5     		push	{r7, lr}
 1182              	.LCFI36:
 1183              		.cfi_def_cfa_offset 8
 1184              		.cfi_offset 7, -8
 1185              		.cfi_offset 14, -4
 1186 0002 86B0     		sub	sp, sp, #24
 1187              	.LCFI37:
 1188              		.cfi_def_cfa_offset 32
 1189 0004 00AF     		add	r7, sp, #0
 1190              	.LCFI38:
 1191              		.cfi_def_cfa_register 7
 1192 0006 7860     		str	r0, [r7, #4]
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmpisr;
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __IO uint32_t count = 0U;
 1193              		.loc 1 750 0
 1194 0008 0023     		movs	r3, #0
 1195 000a BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccPveV6K.s 			page 35


 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600U;
 1196              		.loc 1 751 0
 1197 000c 924B     		ldr	r3, .L78
 1198 000e 1B68     		ldr	r3, [r3]
 1199 0010 924A     		ldr	r2, .L78+4
 1200 0012 A2FB0323 		umull	r2, r3, r2, r3
 1201 0016 9B0A     		lsrs	r3, r3, #10
 1202 0018 7B61     		str	r3, [r7, #20]
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* calculate DMA base and stream number */
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1203              		.loc 1 754 0
 1204 001a 7B68     		ldr	r3, [r7, #4]
 1205 001c 9B6D     		ldr	r3, [r3, #88]
 1206 001e 3B61     		str	r3, [r7, #16]
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   tmpisr = regs->ISR;
 1207              		.loc 1 756 0
 1208 0020 3B69     		ldr	r3, [r7, #16]
 1209 0022 1B68     		ldr	r3, [r3]
 1210 0024 FB60     		str	r3, [r7, #12]
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1211              		.loc 1 759 0
 1212 0026 7B68     		ldr	r3, [r7, #4]
 1213 0028 DB6D     		ldr	r3, [r3, #92]
 1214 002a 0822     		movs	r2, #8
 1215 002c 9A40     		lsls	r2, r2, r3
 1216 002e FB68     		ldr	r3, [r7, #12]
 1217 0030 1340     		ands	r3, r3, r2
 1218 0032 002B     		cmp	r3, #0
 1219 0034 1AD0     		beq	.L52
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 1220              		.loc 1 761 0
 1221 0036 7B68     		ldr	r3, [r7, #4]
 1222 0038 1B68     		ldr	r3, [r3]
 1223 003a 1B68     		ldr	r3, [r3]
 1224 003c 03F00403 		and	r3, r3, #4
 1225 0040 002B     		cmp	r3, #0
 1226 0042 13D0     		beq	.L52
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 1227              		.loc 1 764 0
 1228 0044 7B68     		ldr	r3, [r7, #4]
 1229 0046 1B68     		ldr	r3, [r3]
 1230 0048 1A68     		ldr	r2, [r3]
 1231 004a 7B68     		ldr	r3, [r7, #4]
 1232 004c 1B68     		ldr	r3, [r3]
 1233 004e 22F00402 		bic	r2, r2, #4
 1234 0052 1A60     		str	r2, [r3]
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer error flag */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1235              		.loc 1 767 0
ARM GAS  /tmp/ccPveV6K.s 			page 36


 1236 0054 7B68     		ldr	r3, [r7, #4]
 1237 0056 DB6D     		ldr	r3, [r3, #92]
 1238 0058 0822     		movs	r2, #8
 1239 005a 9A40     		lsls	r2, r2, r3
 1240 005c 3B69     		ldr	r3, [r7, #16]
 1241 005e 9A60     		str	r2, [r3, #8]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1242              		.loc 1 770 0
 1243 0060 7B68     		ldr	r3, [r7, #4]
 1244 0062 5B6D     		ldr	r3, [r3, #84]
 1245 0064 43F00102 		orr	r2, r3, #1
 1246 0068 7B68     		ldr	r3, [r7, #4]
 1247 006a 5A65     		str	r2, [r3, #84]
 1248              	.L52:
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1249              		.loc 1 774 0
 1250 006c 7B68     		ldr	r3, [r7, #4]
 1251 006e DB6D     		ldr	r3, [r3, #92]
 1252 0070 0122     		movs	r2, #1
 1253 0072 9A40     		lsls	r2, r2, r3
 1254 0074 FB68     		ldr	r3, [r7, #12]
 1255 0076 1340     		ands	r3, r3, r2
 1256 0078 002B     		cmp	r3, #0
 1257 007a 12D0     		beq	.L53
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 1258              		.loc 1 776 0
 1259 007c 7B68     		ldr	r3, [r7, #4]
 1260 007e 1B68     		ldr	r3, [r3]
 1261 0080 5B69     		ldr	r3, [r3, #20]
 1262 0082 03F08003 		and	r3, r3, #128
 1263 0086 002B     		cmp	r3, #0
 1264 0088 0BD0     		beq	.L53
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the FIFO error flag */
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1265              		.loc 1 779 0
 1266 008a 7B68     		ldr	r3, [r7, #4]
 1267 008c DB6D     		ldr	r3, [r3, #92]
 1268 008e 0122     		movs	r2, #1
 1269 0090 9A40     		lsls	r2, r2, r3
 1270 0092 3B69     		ldr	r3, [r7, #16]
 1271 0094 9A60     		str	r2, [r3, #8]
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1272              		.loc 1 782 0
 1273 0096 7B68     		ldr	r3, [r7, #4]
 1274 0098 5B6D     		ldr	r3, [r3, #84]
 1275 009a 43F00202 		orr	r2, r3, #2
 1276 009e 7B68     		ldr	r3, [r7, #4]
 1277 00a0 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/ccPveV6K.s 			page 37


 1278              	.L53:
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1279              		.loc 1 786 0
 1280 00a2 7B68     		ldr	r3, [r7, #4]
 1281 00a4 DB6D     		ldr	r3, [r3, #92]
 1282 00a6 0422     		movs	r2, #4
 1283 00a8 9A40     		lsls	r2, r2, r3
 1284 00aa FB68     		ldr	r3, [r7, #12]
 1285 00ac 1340     		ands	r3, r3, r2
 1286 00ae 002B     		cmp	r3, #0
 1287 00b0 12D0     		beq	.L54
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 1288              		.loc 1 788 0
 1289 00b2 7B68     		ldr	r3, [r7, #4]
 1290 00b4 1B68     		ldr	r3, [r3]
 1291 00b6 1B68     		ldr	r3, [r3]
 1292 00b8 03F00203 		and	r3, r3, #2
 1293 00bc 002B     		cmp	r3, #0
 1294 00be 0BD0     		beq	.L54
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the direct mode error flag */
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1295              		.loc 1 791 0
 1296 00c0 7B68     		ldr	r3, [r7, #4]
 1297 00c2 DB6D     		ldr	r3, [r3, #92]
 1298 00c4 0422     		movs	r2, #4
 1299 00c6 9A40     		lsls	r2, r2, r3
 1300 00c8 3B69     		ldr	r3, [r7, #16]
 1301 00ca 9A60     		str	r2, [r3, #8]
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Update error code */
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1302              		.loc 1 794 0
 1303 00cc 7B68     		ldr	r3, [r7, #4]
 1304 00ce 5B6D     		ldr	r3, [r3, #84]
 1305 00d0 43F00402 		orr	r2, r3, #4
 1306 00d4 7B68     		ldr	r3, [r7, #4]
 1307 00d6 5A65     		str	r2, [r3, #84]
 1308              	.L54:
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 1309              		.loc 1 798 0
 1310 00d8 7B68     		ldr	r3, [r7, #4]
 1311 00da DB6D     		ldr	r3, [r3, #92]
 1312 00dc 1022     		movs	r2, #16
 1313 00de 9A40     		lsls	r2, r2, r3
 1314 00e0 FB68     		ldr	r3, [r7, #12]
 1315 00e2 1340     		ands	r3, r3, r2
 1316 00e4 002B     		cmp	r3, #0
 1317 00e6 43D0     		beq	.L55
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
ARM GAS  /tmp/ccPveV6K.s 			page 38


 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 1318              		.loc 1 800 0
 1319 00e8 7B68     		ldr	r3, [r7, #4]
 1320 00ea 1B68     		ldr	r3, [r3]
 1321 00ec 1B68     		ldr	r3, [r3]
 1322 00ee 03F00803 		and	r3, r3, #8
 1323 00f2 002B     		cmp	r3, #0
 1324 00f4 3CD0     		beq	.L55
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1325              		.loc 1 803 0
 1326 00f6 7B68     		ldr	r3, [r7, #4]
 1327 00f8 DB6D     		ldr	r3, [r3, #92]
 1328 00fa 1022     		movs	r2, #16
 1329 00fc 9A40     		lsls	r2, r2, r3
 1330 00fe 3B69     		ldr	r3, [r7, #16]
 1331 0100 9A60     		str	r2, [r3, #8]
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1332              		.loc 1 806 0
 1333 0102 7B68     		ldr	r3, [r7, #4]
 1334 0104 1B68     		ldr	r3, [r3]
 1335 0106 1B68     		ldr	r3, [r3]
 1336 0108 03F48023 		and	r3, r3, #262144
 1337 010c 002B     		cmp	r3, #0
 1338 010e 18D0     		beq	.L56
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1339              		.loc 1 809 0
 1340 0110 7B68     		ldr	r3, [r7, #4]
 1341 0112 1B68     		ldr	r3, [r3]
 1342 0114 1B68     		ldr	r3, [r3]
 1343 0116 03F40023 		and	r3, r3, #524288
 1344 011a 002B     		cmp	r3, #0
 1345 011c 08D1     		bne	.L57
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 1346              		.loc 1 811 0
 1347 011e 7B68     		ldr	r3, [r7, #4]
 1348 0120 1B6C     		ldr	r3, [r3, #64]
 1349 0122 002B     		cmp	r3, #0
 1350 0124 24D0     		beq	.L55
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 1351              		.loc 1 814 0
 1352 0126 7B68     		ldr	r3, [r7, #4]
 1353 0128 1B6C     		ldr	r3, [r3, #64]
 1354 012a 7868     		ldr	r0, [r7, #4]
 1355 012c 9847     		blx	r3
 1356              	.LVL0:
 1357 012e 1FE0     		b	.L55
 1358              	.L57:
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
ARM GAS  /tmp/ccPveV6K.s 			page 39


 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 1359              		.loc 1 820 0
 1360 0130 7B68     		ldr	r3, [r7, #4]
 1361 0132 9B6C     		ldr	r3, [r3, #72]
 1362 0134 002B     		cmp	r3, #0
 1363 0136 1BD0     		beq	.L55
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Half transfer callback */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 1364              		.loc 1 823 0
 1365 0138 7B68     		ldr	r3, [r7, #4]
 1366 013a 9B6C     		ldr	r3, [r3, #72]
 1367 013c 7868     		ldr	r0, [r7, #4]
 1368 013e 9847     		blx	r3
 1369              	.LVL1:
 1370 0140 16E0     		b	.L55
 1371              	.L56:
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1372              		.loc 1 830 0
 1373 0142 7B68     		ldr	r3, [r7, #4]
 1374 0144 1B68     		ldr	r3, [r3]
 1375 0146 1B68     		ldr	r3, [r3]
 1376 0148 03F48073 		and	r3, r3, #256
 1377 014c 002B     		cmp	r3, #0
 1378 014e 07D1     		bne	.L60
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1379              		.loc 1 833 0
 1380 0150 7B68     		ldr	r3, [r7, #4]
 1381 0152 1B68     		ldr	r3, [r3]
 1382 0154 1A68     		ldr	r2, [r3]
 1383 0156 7B68     		ldr	r3, [r7, #4]
 1384 0158 1B68     		ldr	r3, [r3]
 1385 015a 22F00802 		bic	r2, r2, #8
 1386 015e 1A60     		str	r2, [r3]
 1387              	.L60:
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 1388              		.loc 1 836 0
 1389 0160 7B68     		ldr	r3, [r7, #4]
 1390 0162 1B6C     		ldr	r3, [r3, #64]
 1391 0164 002B     		cmp	r3, #0
 1392 0166 03D0     		beq	.L55
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Half transfer callback */
ARM GAS  /tmp/ccPveV6K.s 			page 40


 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 1393              		.loc 1 839 0
 1394 0168 7B68     		ldr	r3, [r7, #4]
 1395 016a 1B6C     		ldr	r3, [r3, #64]
 1396 016c 7868     		ldr	r0, [r7, #4]
 1397 016e 9847     		blx	r3
 1398              	.LVL2:
 1399              	.L55:
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 1400              		.loc 1 845 0
 1401 0170 7B68     		ldr	r3, [r7, #4]
 1402 0172 DB6D     		ldr	r3, [r3, #92]
 1403 0174 2022     		movs	r2, #32
 1404 0176 9A40     		lsls	r2, r2, r3
 1405 0178 FB68     		ldr	r3, [r7, #12]
 1406 017a 1340     		ands	r3, r3, r2
 1407 017c 002B     		cmp	r3, #0
 1408 017e 00F08E80 		beq	.L61
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 1409              		.loc 1 847 0
 1410 0182 7B68     		ldr	r3, [r7, #4]
 1411 0184 1B68     		ldr	r3, [r3]
 1412 0186 1B68     		ldr	r3, [r3]
 1413 0188 03F01003 		and	r3, r3, #16
 1414 018c 002B     		cmp	r3, #0
 1415 018e 00F08680 		beq	.L61
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Clear the transfer complete flag */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1416              		.loc 1 850 0
 1417 0192 7B68     		ldr	r3, [r7, #4]
 1418 0194 DB6D     		ldr	r3, [r3, #92]
 1419 0196 2022     		movs	r2, #32
 1420 0198 9A40     		lsls	r2, r2, r3
 1421 019a 3B69     		ldr	r3, [r7, #16]
 1422 019c 9A60     		str	r2, [r3, #8]
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 1423              		.loc 1 852 0
 1424 019e 7B68     		ldr	r3, [r7, #4]
 1425 01a0 93F83530 		ldrb	r3, [r3, #53]
 1426 01a4 DBB2     		uxtb	r3, r3
 1427 01a6 052B     		cmp	r3, #5
 1428 01a8 36D1     		bne	.L62
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 1429              		.loc 1 855 0
 1430 01aa 7B68     		ldr	r3, [r7, #4]
 1431 01ac 1B68     		ldr	r3, [r3]
 1432 01ae 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccPveV6K.s 			page 41


 1433 01b0 7B68     		ldr	r3, [r7, #4]
 1434 01b2 1B68     		ldr	r3, [r3]
 1435 01b4 22F01602 		bic	r2, r2, #22
 1436 01b8 1A60     		str	r2, [r3]
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1437              		.loc 1 856 0
 1438 01ba 7B68     		ldr	r3, [r7, #4]
 1439 01bc 1B68     		ldr	r3, [r3]
 1440 01be 5A69     		ldr	r2, [r3, #20]
 1441 01c0 7B68     		ldr	r3, [r7, #4]
 1442 01c2 1B68     		ldr	r3, [r3]
 1443 01c4 22F08002 		bic	r2, r2, #128
 1444 01c8 5A61     		str	r2, [r3, #20]
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1445              		.loc 1 858 0
 1446 01ca 7B68     		ldr	r3, [r7, #4]
 1447 01cc 1B6C     		ldr	r3, [r3, #64]
 1448 01ce 002B     		cmp	r3, #0
 1449 01d0 03D1     		bne	.L63
 1450              		.loc 1 858 0 is_stmt 0 discriminator 1
 1451 01d2 7B68     		ldr	r3, [r7, #4]
 1452 01d4 9B6C     		ldr	r3, [r3, #72]
 1453 01d6 002B     		cmp	r3, #0
 1454 01d8 07D0     		beq	.L64
 1455              	.L63:
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1456              		.loc 1 860 0 is_stmt 1
 1457 01da 7B68     		ldr	r3, [r7, #4]
 1458 01dc 1B68     		ldr	r3, [r3]
 1459 01de 1A68     		ldr	r2, [r3]
 1460 01e0 7B68     		ldr	r3, [r7, #4]
 1461 01e2 1B68     		ldr	r3, [r3]
 1462 01e4 22F00802 		bic	r2, r2, #8
 1463 01e8 1A60     		str	r2, [r3]
 1464              	.L64:
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 1465              		.loc 1 864 0
 1466 01ea 7B68     		ldr	r3, [r7, #4]
 1467 01ec DB6D     		ldr	r3, [r3, #92]
 1468 01ee 3F22     		movs	r2, #63
 1469 01f0 9A40     		lsls	r2, r2, r3
 1470 01f2 3B69     		ldr	r3, [r7, #16]
 1471 01f4 9A60     		str	r2, [r3, #8]
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Process Unlocked */
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1472              		.loc 1 867 0
 1473 01f6 7B68     		ldr	r3, [r7, #4]
 1474 01f8 0022     		movs	r2, #0
 1475 01fa 83F83420 		strb	r2, [r3, #52]
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Change the DMA state */
ARM GAS  /tmp/ccPveV6K.s 			page 42


 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1476              		.loc 1 870 0
 1477 01fe 7B68     		ldr	r3, [r7, #4]
 1478 0200 0122     		movs	r2, #1
 1479 0202 83F83520 		strb	r2, [r3, #53]
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 1480              		.loc 1 872 0
 1481 0206 7B68     		ldr	r3, [r7, #4]
 1482 0208 1B6D     		ldr	r3, [r3, #80]
 1483 020a 002B     		cmp	r3, #0
 1484 020c 7DD0     		beq	.L76
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 1485              		.loc 1 874 0
 1486 020e 7B68     		ldr	r3, [r7, #4]
 1487 0210 1B6D     		ldr	r3, [r3, #80]
 1488 0212 7868     		ldr	r0, [r7, #4]
 1489 0214 9847     		blx	r3
 1490              	.LVL3:
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         return;
 1491              		.loc 1 876 0
 1492 0216 78E0     		b	.L76
 1493              	.L62:
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1494              		.loc 1 879 0
 1495 0218 7B68     		ldr	r3, [r7, #4]
 1496 021a 1B68     		ldr	r3, [r3]
 1497 021c 1B68     		ldr	r3, [r3]
 1498 021e 03F48023 		and	r3, r3, #262144
 1499 0222 002B     		cmp	r3, #0
 1500 0224 1CD0     		beq	.L67
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1501              		.loc 1 882 0
 1502 0226 7B68     		ldr	r3, [r7, #4]
 1503 0228 1B68     		ldr	r3, [r3]
 1504 022a 1B68     		ldr	r3, [r3]
 1505 022c 03F40023 		and	r3, r3, #524288
 1506 0230 002B     		cmp	r3, #0
 1507 0232 08D1     		bne	.L68
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 1508              		.loc 1 884 0
 1509 0234 7B68     		ldr	r3, [r7, #4]
 1510 0236 5B6C     		ldr	r3, [r3, #68]
 1511 0238 002B     		cmp	r3, #0
 1512 023a 30D0     		beq	.L61
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 1513              		.loc 1 887 0
 1514 023c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccPveV6K.s 			page 43


 1515 023e 5B6C     		ldr	r3, [r3, #68]
 1516 0240 7868     		ldr	r0, [r7, #4]
 1517 0242 9847     		blx	r3
 1518              	.LVL4:
 1519 0244 2BE0     		b	.L61
 1520              	.L68:
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         else
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 1521              		.loc 1 893 0
 1522 0246 7B68     		ldr	r3, [r7, #4]
 1523 0248 DB6B     		ldr	r3, [r3, #60]
 1524 024a 002B     		cmp	r3, #0
 1525 024c 27D0     		beq	.L61
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           {
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 1526              		.loc 1 896 0
 1527 024e 7B68     		ldr	r3, [r7, #4]
 1528 0250 DB6B     		ldr	r3, [r3, #60]
 1529 0252 7868     		ldr	r0, [r7, #4]
 1530 0254 9847     		blx	r3
 1531              	.LVL5:
 1532 0256 22E0     		b	.L61
 1533              	.L79:
 1534              		.align	2
 1535              	.L78:
 1536 0258 00000000 		.word	SystemCoreClock
 1537 025c B5814E1B 		.word	458129845
 1538              	.L67:
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           }
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       else
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1539              		.loc 1 903 0
 1540 0260 7B68     		ldr	r3, [r7, #4]
 1541 0262 1B68     		ldr	r3, [r3]
 1542 0264 1B68     		ldr	r3, [r3]
 1543 0266 03F48073 		and	r3, r3, #256
 1544 026a 002B     		cmp	r3, #0
 1545 026c 0FD1     		bne	.L71
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 1546              		.loc 1 906 0
 1547 026e 7B68     		ldr	r3, [r7, #4]
 1548 0270 1B68     		ldr	r3, [r3]
 1549 0272 1A68     		ldr	r2, [r3]
 1550 0274 7B68     		ldr	r3, [r7, #4]
 1551 0276 1B68     		ldr	r3, [r3]
 1552 0278 22F01002 		bic	r2, r2, #16
ARM GAS  /tmp/ccPveV6K.s 			page 44


 1553 027c 1A60     		str	r2, [r3]
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Process Unlocked */
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 1554              		.loc 1 909 0
 1555 027e 7B68     		ldr	r3, [r7, #4]
 1556 0280 0022     		movs	r2, #0
 1557 0282 83F83420 		strb	r2, [r3, #52]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Change the DMA state */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 1558              		.loc 1 912 0
 1559 0286 7B68     		ldr	r3, [r7, #4]
 1560 0288 0122     		movs	r2, #1
 1561 028a 83F83520 		strb	r2, [r3, #53]
 1562              	.L71:
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 1563              		.loc 1 915 0
 1564 028e 7B68     		ldr	r3, [r7, #4]
 1565 0290 DB6B     		ldr	r3, [r3, #60]
 1566 0292 002B     		cmp	r3, #0
 1567 0294 03D0     		beq	.L61
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           /* Transfer complete callback */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 1568              		.loc 1 918 0
 1569 0296 7B68     		ldr	r3, [r7, #4]
 1570 0298 DB6B     		ldr	r3, [r3, #60]
 1571 029a 7868     		ldr	r0, [r7, #4]
 1572 029c 9847     		blx	r3
 1573              	.LVL6:
 1574              	.L61:
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* manage error case */
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1575              		.loc 1 925 0
 1576 029e 7B68     		ldr	r3, [r7, #4]
 1577 02a0 5B6D     		ldr	r3, [r3, #84]
 1578 02a2 002B     		cmp	r3, #0
 1579 02a4 32D0     		beq	.L51
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1580              		.loc 1 927 0
 1581 02a6 7B68     		ldr	r3, [r7, #4]
 1582 02a8 5B6D     		ldr	r3, [r3, #84]
 1583 02aa 03F00103 		and	r3, r3, #1
 1584 02ae 002B     		cmp	r3, #0
 1585 02b0 22D0     		beq	.L72
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 1586              		.loc 1 929 0
ARM GAS  /tmp/ccPveV6K.s 			page 45


 1587 02b2 7B68     		ldr	r3, [r7, #4]
 1588 02b4 0522     		movs	r2, #5
 1589 02b6 83F83520 		strb	r2, [r3, #53]
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Disable the stream */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 1590              		.loc 1 932 0
 1591 02ba 7B68     		ldr	r3, [r7, #4]
 1592 02bc 1B68     		ldr	r3, [r3]
 1593 02be 1A68     		ldr	r2, [r3]
 1594 02c0 7B68     		ldr	r3, [r7, #4]
 1595 02c2 1B68     		ldr	r3, [r3]
 1596 02c4 22F00102 		bic	r2, r2, #1
 1597 02c8 1A60     		str	r2, [r3]
 1598              	.L75:
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       do
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         if (++count > timeout)
 1599              		.loc 1 936 0
 1600 02ca BB68     		ldr	r3, [r7, #8]
 1601 02cc 0133     		adds	r3, r3, #1
 1602 02ce BB60     		str	r3, [r7, #8]
 1603 02d0 7A69     		ldr	r2, [r7, #20]
 1604 02d2 9A42     		cmp	r2, r3
 1605 02d4 07D3     		bcc	.L77
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****           break;
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 1606              		.loc 1 941 0
 1607 02d6 7B68     		ldr	r3, [r7, #4]
 1608 02d8 1B68     		ldr	r3, [r3]
 1609 02da 1B68     		ldr	r3, [r3]
 1610 02dc 03F00103 		and	r3, r3, #1
 1611 02e0 002B     		cmp	r3, #0
 1612 02e2 F2D1     		bne	.L75
 1613 02e4 00E0     		b	.L74
 1614              	.L77:
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         }
 1615              		.loc 1 938 0
 1616 02e6 00BF     		nop
 1617              	.L74:
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Process Unlocked */
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1618              		.loc 1 944 0
 1619 02e8 7B68     		ldr	r3, [r7, #4]
 1620 02ea 0022     		movs	r2, #0
 1621 02ec 83F83420 		strb	r2, [r3, #52]
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Change the DMA state */
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1622              		.loc 1 947 0
 1623 02f0 7B68     		ldr	r3, [r7, #4]
 1624 02f2 0122     		movs	r2, #1
ARM GAS  /tmp/ccPveV6K.s 			page 46


 1625 02f4 83F83520 		strb	r2, [r3, #53]
 1626              	.L72:
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 1627              		.loc 1 950 0
 1628 02f8 7B68     		ldr	r3, [r7, #4]
 1629 02fa DB6C     		ldr	r3, [r3, #76]
 1630 02fc 002B     		cmp	r3, #0
 1631 02fe 05D0     		beq	.L51
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       /* Transfer error callback */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1632              		.loc 1 953 0
 1633 0300 7B68     		ldr	r3, [r7, #4]
 1634 0302 DB6C     		ldr	r3, [r3, #76]
 1635 0304 7868     		ldr	r0, [r7, #4]
 1636 0306 9847     		blx	r3
 1637              	.LVL7:
 1638 0308 00E0     		b	.L51
 1639              	.L76:
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 1640              		.loc 1 876 0
 1641 030a 00BF     		nop
 1642              	.L51:
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1643              		.loc 1 956 0
 1644 030c 1837     		adds	r7, r7, #24
 1645              	.LCFI39:
 1646              		.cfi_def_cfa_offset 8
 1647 030e BD46     		mov	sp, r7
 1648              	.LCFI40:
 1649              		.cfi_def_cfa_register 13
 1650              		@ sp needed
 1651 0310 80BD     		pop	{r7, pc}
 1652              		.cfi_endproc
 1653              	.LFE137:
 1655 0312 00BF     		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1656              		.align	1
 1657              		.global	HAL_DMA_RegisterCallback
 1658              		.syntax unified
 1659              		.thumb
 1660              		.thumb_func
 1661              		.fpu fpv4-sp-d16
 1663              	HAL_DMA_RegisterCallback:
 1664              	.LFB138:
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Register callbacks
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  pCallback            pointer to private callbacsk function which has pointer to 
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
ARM GAS  /tmp/ccPveV6K.s 			page 47


 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */                      
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1665              		.loc 1 969 0
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 24
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669              		@ link register save eliminated.
 1670 0000 80B4     		push	{r7}
 1671              	.LCFI41:
 1672              		.cfi_def_cfa_offset 4
 1673              		.cfi_offset 7, -4
 1674 0002 87B0     		sub	sp, sp, #28
 1675              	.LCFI42:
 1676              		.cfi_def_cfa_offset 32
 1677 0004 00AF     		add	r7, sp, #0
 1678              	.LCFI43:
 1679              		.cfi_def_cfa_register 7
 1680 0006 F860     		str	r0, [r7, #12]
 1681 0008 0B46     		mov	r3, r1
 1682 000a 7A60     		str	r2, [r7, #4]
 1683 000c FB72     		strb	r3, [r7, #11]
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1684              		.loc 1 971 0
 1685 000e 0023     		movs	r3, #0
 1686 0010 FB75     		strb	r3, [r7, #23]
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1687              		.loc 1 974 0
 1688 0012 FB68     		ldr	r3, [r7, #12]
 1689 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1690 0018 012B     		cmp	r3, #1
 1691 001a 01D1     		bne	.L81
 1692              		.loc 1 974 0 is_stmt 0 discriminator 1
 1693 001c 0223     		movs	r3, #2
 1694 001e 3CE0     		b	.L82
 1695              	.L81:
 1696              		.loc 1 974 0 discriminator 2
 1697 0020 FB68     		ldr	r3, [r7, #12]
 1698 0022 0122     		movs	r2, #1
 1699 0024 83F83420 		strb	r2, [r3, #52]
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1700              		.loc 1 976 0 is_stmt 1 discriminator 2
 1701 0028 FB68     		ldr	r3, [r7, #12]
 1702 002a 93F83530 		ldrb	r3, [r3, #53]
 1703 002e DBB2     		uxtb	r3, r3
 1704 0030 012B     		cmp	r3, #1
 1705 0032 29D1     		bne	.L83
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1706              		.loc 1 978 0
 1707 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1708 0036 052B     		cmp	r3, #5
ARM GAS  /tmp/ccPveV6K.s 			page 48


 1709 0038 29D8     		bhi	.L94
 1710 003a 01A2     		adr	r2, .L86
 1711 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1712              		.p2align 2
 1713              	.L86:
 1714 0040 59000000 		.word	.L85+1
 1715 0044 61000000 		.word	.L87+1
 1716 0048 69000000 		.word	.L88+1
 1717 004c 71000000 		.word	.L89+1
 1718 0050 79000000 		.word	.L90+1
 1719 0054 81000000 		.word	.L91+1
 1720              		.p2align 1
 1721              	.L85:
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 1722              		.loc 1 981 0
 1723 0058 FB68     		ldr	r3, [r7, #12]
 1724 005a 7A68     		ldr	r2, [r7, #4]
 1725 005c DA63     		str	r2, [r3, #60]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1726              		.loc 1 982 0
 1727 005e 17E0     		b	.L93
 1728              	.L87:
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 1729              		.loc 1 985 0
 1730 0060 FB68     		ldr	r3, [r7, #12]
 1731 0062 7A68     		ldr	r2, [r7, #4]
 1732 0064 1A64     		str	r2, [r3, #64]
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1733              		.loc 1 986 0
 1734 0066 13E0     		b	.L93
 1735              	.L88:
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 1736              		.loc 1 989 0
 1737 0068 FB68     		ldr	r3, [r7, #12]
 1738 006a 7A68     		ldr	r2, [r7, #4]
 1739 006c 5A64     		str	r2, [r3, #68]
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1740              		.loc 1 990 0
 1741 006e 0FE0     		b	.L93
 1742              	.L89:
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 1743              		.loc 1 993 0
 1744 0070 FB68     		ldr	r3, [r7, #12]
 1745 0072 7A68     		ldr	r2, [r7, #4]
 1746 0074 9A64     		str	r2, [r3, #72]
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1747              		.loc 1 994 0
 1748 0076 0BE0     		b	.L93
 1749              	.L90:
ARM GAS  /tmp/ccPveV6K.s 			page 49


 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 1750              		.loc 1 997 0
 1751 0078 FB68     		ldr	r3, [r7, #12]
 1752 007a 7A68     		ldr	r2, [r7, #4]
 1753 007c DA64     		str	r2, [r3, #76]
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1754              		.loc 1 998 0
 1755 007e 07E0     		b	.L93
 1756              	.L91:
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 1757              		.loc 1 1001 0
 1758 0080 FB68     		ldr	r3, [r7, #12]
 1759 0082 7A68     		ldr	r2, [r7, #4]
 1760 0084 1A65     		str	r2, [r3, #80]
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1761              		.loc 1 1002 0
 1762 0086 03E0     		b	.L93
 1763              	.L83:
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Return error status */
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status =  HAL_ERROR;
 1764              		.loc 1 1011 0
 1765 0088 0123     		movs	r3, #1
 1766 008a FB75     		strb	r3, [r7, #23]
 1767 008c 00E0     		b	.L93
 1768              	.L94:
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 1769              		.loc 1 1005 0
 1770 008e 00BF     		nop
 1771              	.L93:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1772              		.loc 1 1015 0
 1773 0090 FB68     		ldr	r3, [r7, #12]
 1774 0092 0022     		movs	r2, #0
 1775 0094 83F83420 		strb	r2, [r3, #52]
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1776              		.loc 1 1017 0
 1777 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1778              	.L82:
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1779              		.loc 1 1018 0
 1780 009a 1846     		mov	r0, r3
 1781 009c 1C37     		adds	r7, r7, #28
ARM GAS  /tmp/ccPveV6K.s 			page 50


 1782              	.LCFI44:
 1783              		.cfi_def_cfa_offset 4
 1784 009e BD46     		mov	sp, r7
 1785              	.LCFI45:
 1786              		.cfi_def_cfa_register 13
 1787              		@ sp needed
 1788 00a0 5DF8047B 		ldr	r7, [sp], #4
 1789              	.LCFI46:
 1790              		.cfi_restore 7
 1791              		.cfi_def_cfa_offset 0
 1792 00a4 7047     		bx	lr
 1793              		.cfi_endproc
 1794              	.LFE138:
 1796 00a6 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1797              		.align	1
 1798              		.global	HAL_DMA_UnRegisterCallback
 1799              		.syntax unified
 1800              		.thumb
 1801              		.thumb_func
 1802              		.fpu fpv4-sp-d16
 1804              	HAL_DMA_UnRegisterCallback:
 1805              	.LFB139:
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  UnRegister callbacks
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma                 pointer to a DMA_HandleTypeDef structure that contains
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  CallbackID           User Callback identifer
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */              
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1806              		.loc 1 1029 0
 1807              		.cfi_startproc
 1808              		@ args = 0, pretend = 0, frame = 16
 1809              		@ frame_needed = 1, uses_anonymous_args = 0
 1810              		@ link register save eliminated.
 1811 0000 80B4     		push	{r7}
 1812              	.LCFI47:
 1813              		.cfi_def_cfa_offset 4
 1814              		.cfi_offset 7, -4
 1815 0002 85B0     		sub	sp, sp, #20
 1816              	.LCFI48:
 1817              		.cfi_def_cfa_offset 24
 1818 0004 00AF     		add	r7, sp, #0
 1819              	.LCFI49:
 1820              		.cfi_def_cfa_register 7
 1821 0006 7860     		str	r0, [r7, #4]
 1822 0008 0B46     		mov	r3, r1
 1823 000a FB70     		strb	r3, [r7, #3]
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1824              		.loc 1 1030 0
 1825 000c 0023     		movs	r3, #0
 1826 000e FB73     		strb	r3, [r7, #15]
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Process locked */
ARM GAS  /tmp/ccPveV6K.s 			page 51


1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1827              		.loc 1 1033 0
 1828 0010 7B68     		ldr	r3, [r7, #4]
 1829 0012 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1830 0016 012B     		cmp	r3, #1
 1831 0018 01D1     		bne	.L96
 1832              		.loc 1 1033 0 is_stmt 0 discriminator 1
 1833 001a 0223     		movs	r3, #2
 1834 001c 54E0     		b	.L97
 1835              	.L96:
 1836              		.loc 1 1033 0 discriminator 2
 1837 001e 7B68     		ldr	r3, [r7, #4]
 1838 0020 0122     		movs	r2, #1
 1839 0022 83F83420 		strb	r2, [r3, #52]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1840              		.loc 1 1035 0 is_stmt 1 discriminator 2
 1841 0026 7B68     		ldr	r3, [r7, #4]
 1842 0028 93F83530 		ldrb	r3, [r3, #53]
 1843 002c DBB2     		uxtb	r3, r3
 1844 002e 012B     		cmp	r3, #1
 1845 0030 43D1     		bne	.L98
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (CallbackID)
 1846              		.loc 1 1037 0
 1847 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1848 0034 062B     		cmp	r3, #6
 1849 0036 3CD8     		bhi	.L99
 1850 0038 01A2     		adr	r2, .L101
 1851 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1852 003e 00BF     		.p2align 2
 1853              	.L101:
 1854 0040 5D000000 		.word	.L100+1
 1855 0044 65000000 		.word	.L102+1
 1856 0048 6D000000 		.word	.L103+1
 1857 004c 75000000 		.word	.L104+1
 1858 0050 7D000000 		.word	.L105+1
 1859 0054 85000000 		.word	.L106+1
 1860 0058 8D000000 		.word	.L107+1
 1861              		.p2align 1
 1862              	.L100:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1863              		.loc 1 1040 0
 1864 005c 7B68     		ldr	r3, [r7, #4]
 1865 005e 0022     		movs	r2, #0
 1866 0060 DA63     		str	r2, [r3, #60]
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1867              		.loc 1 1041 0
 1868 0062 2CE0     		b	.L109
 1869              	.L102:
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1870              		.loc 1 1044 0
 1871 0064 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccPveV6K.s 			page 52


 1872 0066 0022     		movs	r2, #0
 1873 0068 1A64     		str	r2, [r3, #64]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1874              		.loc 1 1045 0
 1875 006a 28E0     		b	.L109
 1876              	.L103:
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1877              		.loc 1 1048 0
 1878 006c 7B68     		ldr	r3, [r7, #4]
 1879 006e 0022     		movs	r2, #0
 1880 0070 5A64     		str	r2, [r3, #68]
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1881              		.loc 1 1049 0
 1882 0072 24E0     		b	.L109
 1883              	.L104:
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1884              		.loc 1 1052 0
 1885 0074 7B68     		ldr	r3, [r7, #4]
 1886 0076 0022     		movs	r2, #0
 1887 0078 9A64     		str	r2, [r3, #72]
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1888              		.loc 1 1053 0
 1889 007a 20E0     		b	.L109
 1890              	.L105:
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1891              		.loc 1 1056 0
 1892 007c 7B68     		ldr	r3, [r7, #4]
 1893 007e 0022     		movs	r2, #0
 1894 0080 DA64     		str	r2, [r3, #76]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1895              		.loc 1 1057 0
 1896 0082 1CE0     		b	.L109
 1897              	.L106:
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1898              		.loc 1 1060 0
 1899 0084 7B68     		ldr	r3, [r7, #4]
 1900 0086 0022     		movs	r2, #0
 1901 0088 1A65     		str	r2, [r3, #80]
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1902              		.loc 1 1061 0
 1903 008a 18E0     		b	.L109
 1904              	.L107:
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1905              		.loc 1 1064 0
 1906 008c 7B68     		ldr	r3, [r7, #4]
 1907 008e 0022     		movs	r2, #0
 1908 0090 DA63     		str	r2, [r3, #60]
ARM GAS  /tmp/ccPveV6K.s 			page 53


1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1909              		.loc 1 1065 0
 1910 0092 7B68     		ldr	r3, [r7, #4]
 1911 0094 0022     		movs	r2, #0
 1912 0096 1A64     		str	r2, [r3, #64]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1913              		.loc 1 1066 0
 1914 0098 7B68     		ldr	r3, [r7, #4]
 1915 009a 0022     		movs	r2, #0
 1916 009c 5A64     		str	r2, [r3, #68]
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1917              		.loc 1 1067 0
 1918 009e 7B68     		ldr	r3, [r7, #4]
 1919 00a0 0022     		movs	r2, #0
 1920 00a2 9A64     		str	r2, [r3, #72]
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1921              		.loc 1 1068 0
 1922 00a4 7B68     		ldr	r3, [r7, #4]
 1923 00a6 0022     		movs	r2, #0
 1924 00a8 DA64     		str	r2, [r3, #76]
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1925              		.loc 1 1069 0
 1926 00aa 7B68     		ldr	r3, [r7, #4]
 1927 00ac 0022     		movs	r2, #0
 1928 00ae 1A65     		str	r2, [r3, #80]
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break; 
 1929              		.loc 1 1070 0
 1930 00b0 05E0     		b	.L109
 1931              	.L99:
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 1932              		.loc 1 1073 0
 1933 00b2 0123     		movs	r3, #1
 1934 00b4 FB73     		strb	r3, [r7, #15]
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 1935              		.loc 1 1074 0
 1936 00b6 00BF     		nop
 1937 00b8 01E0     		b	.L109
 1938              	.L98:
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     status = HAL_ERROR;
 1939              		.loc 1 1079 0
 1940 00ba 0123     		movs	r3, #1
 1941 00bc FB73     		strb	r3, [r7, #15]
 1942              	.L109:
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Release Lock */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1943              		.loc 1 1083 0
 1944 00be 7B68     		ldr	r3, [r7, #4]
 1945 00c0 0022     		movs	r2, #0
 1946 00c2 83F83420 		strb	r2, [r3, #52]
ARM GAS  /tmp/ccPveV6K.s 			page 54


1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status;
 1947              		.loc 1 1085 0
 1948 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1949              	.L97:
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1950              		.loc 1 1086 0
 1951 00c8 1846     		mov	r0, r3
 1952 00ca 1437     		adds	r7, r7, #20
 1953              	.LCFI50:
 1954              		.cfi_def_cfa_offset 4
 1955 00cc BD46     		mov	sp, r7
 1956              	.LCFI51:
 1957              		.cfi_def_cfa_register 13
 1958              		@ sp needed
 1959 00ce 5DF8047B 		ldr	r7, [sp], #4
 1960              	.LCFI52:
 1961              		.cfi_restore 7
 1962              		.cfi_def_cfa_offset 0
 1963 00d2 7047     		bx	lr
 1964              		.cfi_endproc
 1965              	.LFE139:
 1967              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1968              		.align	1
 1969              		.global	HAL_DMA_GetState
 1970              		.syntax unified
 1971              		.thumb
 1972              		.thumb_func
 1973              		.fpu fpv4-sp-d16
 1975              	HAL_DMA_GetState:
 1976              	.LFB140:
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @verbatim
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****                     ##### State and Errors functions #####
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****  ===============================================================================
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     [..]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     This subsection provides functions allowing to
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Check the DMA state
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       (+) Get error code
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** @endverbatim
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA state.
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL state
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
ARM GAS  /tmp/ccPveV6K.s 			page 55


1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 1977              		.loc 1 1114 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 8
 1980              		@ frame_needed = 1, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
 1982 0000 80B4     		push	{r7}
 1983              	.LCFI53:
 1984              		.cfi_def_cfa_offset 4
 1985              		.cfi_offset 7, -4
 1986 0002 83B0     		sub	sp, sp, #12
 1987              	.LCFI54:
 1988              		.cfi_def_cfa_offset 16
 1989 0004 00AF     		add	r7, sp, #0
 1990              	.LCFI55:
 1991              		.cfi_def_cfa_register 7
 1992 0006 7860     		str	r0, [r7, #4]
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->State;
 1993              		.loc 1 1115 0
 1994 0008 7B68     		ldr	r3, [r7, #4]
 1995 000a 93F83530 		ldrb	r3, [r3, #53]
 1996 000e DBB2     		uxtb	r3, r3
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 1997              		.loc 1 1116 0
 1998 0010 1846     		mov	r0, r3
 1999 0012 0C37     		adds	r7, r7, #12
 2000              	.LCFI56:
 2001              		.cfi_def_cfa_offset 4
 2002 0014 BD46     		mov	sp, r7
 2003              	.LCFI57:
 2004              		.cfi_def_cfa_register 13
 2005              		@ sp needed
 2006 0016 5DF8047B 		ldr	r7, [sp], #4
 2007              	.LCFI58:
 2008              		.cfi_restore 7
 2009              		.cfi_def_cfa_offset 0
 2010 001a 7047     		bx	lr
 2011              		.cfi_endproc
 2012              	.LFE140:
 2014              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 2015              		.align	1
 2016              		.global	HAL_DMA_GetError
 2017              		.syntax unified
 2018              		.thumb
 2019              		.thumb_func
 2020              		.fpu fpv4-sp-d16
 2022              	HAL_DMA_GetError:
 2023              	.LFB141:
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Return the DMA error code
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma  pointer to a DMA_HandleTypeDef structure that contains
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval DMA Error Code
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccPveV6K.s 			page 56


1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2024              		.loc 1 1125 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 8
 2027              		@ frame_needed = 1, uses_anonymous_args = 0
 2028              		@ link register save eliminated.
 2029 0000 80B4     		push	{r7}
 2030              	.LCFI59:
 2031              		.cfi_def_cfa_offset 4
 2032              		.cfi_offset 7, -4
 2033 0002 83B0     		sub	sp, sp, #12
 2034              	.LCFI60:
 2035              		.cfi_def_cfa_offset 16
 2036 0004 00AF     		add	r7, sp, #0
 2037              	.LCFI61:
 2038              		.cfi_def_cfa_register 7
 2039 0006 7860     		str	r0, [r7, #4]
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->ErrorCode;
 2040              		.loc 1 1126 0
 2041 0008 7B68     		ldr	r3, [r7, #4]
 2042 000a 5B6D     		ldr	r3, [r3, #84]
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2043              		.loc 1 1127 0
 2044 000c 1846     		mov	r0, r3
 2045 000e 0C37     		adds	r7, r7, #12
 2046              	.LCFI62:
 2047              		.cfi_def_cfa_offset 4
 2048 0010 BD46     		mov	sp, r7
 2049              	.LCFI63:
 2050              		.cfi_def_cfa_register 13
 2051              		@ sp needed
 2052 0012 5DF8047B 		ldr	r7, [sp], #4
 2053              	.LCFI64:
 2054              		.cfi_restore 7
 2055              		.cfi_def_cfa_offset 0
 2056 0016 7047     		bx	lr
 2057              		.cfi_endproc
 2058              	.LFE141:
 2060              		.section	.text.DMA_SetConfig,"ax",%progbits
 2061              		.align	1
 2062              		.syntax unified
 2063              		.thumb
 2064              		.thumb_func
 2065              		.fpu fpv4-sp-d16
 2067              	DMA_SetConfig:
 2068              	.LFB142:
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @}
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @{
ARM GAS  /tmp/ccPveV6K.s 			page 57


1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  SrcAddress The source memory Buffer address
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DstAddress The destination memory Buffer address
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  DataLength The length of data to be transferred from source to destination
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2069              		.loc 1 1151 0
 2070              		.cfi_startproc
 2071              		@ args = 0, pretend = 0, frame = 16
 2072              		@ frame_needed = 1, uses_anonymous_args = 0
 2073              		@ link register save eliminated.
 2074 0000 80B4     		push	{r7}
 2075              	.LCFI65:
 2076              		.cfi_def_cfa_offset 4
 2077              		.cfi_offset 7, -4
 2078 0002 85B0     		sub	sp, sp, #20
 2079              	.LCFI66:
 2080              		.cfi_def_cfa_offset 24
 2081 0004 00AF     		add	r7, sp, #0
 2082              	.LCFI67:
 2083              		.cfi_def_cfa_register 7
 2084 0006 F860     		str	r0, [r7, #12]
 2085 0008 B960     		str	r1, [r7, #8]
 2086 000a 7A60     		str	r2, [r7, #4]
 2087 000c 3B60     		str	r3, [r7]
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Clear DBM bit */
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 2088              		.loc 1 1153 0
 2089 000e FB68     		ldr	r3, [r7, #12]
 2090 0010 1B68     		ldr	r3, [r3]
 2091 0012 1A68     		ldr	r2, [r3]
 2092 0014 FB68     		ldr	r3, [r7, #12]
 2093 0016 1B68     		ldr	r3, [r3]
 2094 0018 22F48022 		bic	r2, r2, #262144
 2095 001c 1A60     		str	r2, [r3]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Configure DMA Stream data length */
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
 2096              		.loc 1 1156 0
 2097 001e FB68     		ldr	r3, [r7, #12]
 2098 0020 1B68     		ldr	r3, [r3]
 2099 0022 3A68     		ldr	r2, [r7]
 2100 0024 5A60     		str	r2, [r3, #4]
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory to Peripheral */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 2101              		.loc 1 1159 0
 2102 0026 FB68     		ldr	r3, [r7, #12]
 2103 0028 9B68     		ldr	r3, [r3, #8]
 2104 002a 402B     		cmp	r3, #64
ARM GAS  /tmp/ccPveV6K.s 			page 58


 2105 002c 08D1     		bne	.L115
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
 2106              		.loc 1 1162 0
 2107 002e FB68     		ldr	r3, [r7, #12]
 2108 0030 1B68     		ldr	r3, [r3]
 2109 0032 7A68     		ldr	r2, [r7, #4]
 2110 0034 9A60     		str	r2, [r3, #8]
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
 2111              		.loc 1 1165 0
 2112 0036 FB68     		ldr	r3, [r7, #12]
 2113 0038 1B68     		ldr	r3, [r3]
 2114 003a BA68     		ldr	r2, [r7, #8]
 2115 003c DA60     		str	r2, [r3, #12]
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Peripheral to Memory */
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream source address */
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2116              		.loc 1 1176 0
 2117 003e 07E0     		b	.L117
 2118              	.L115:
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
 2119              		.loc 1 1171 0
 2120 0040 FB68     		ldr	r3, [r7, #12]
 2121 0042 1B68     		ldr	r3, [r3]
 2122 0044 BA68     		ldr	r2, [r7, #8]
 2123 0046 9A60     		str	r2, [r3, #8]
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
 2124              		.loc 1 1174 0
 2125 0048 FB68     		ldr	r3, [r7, #12]
 2126 004a 1B68     		ldr	r3, [r3]
 2127 004c 7A68     		ldr	r2, [r7, #4]
 2128 004e DA60     		str	r2, [r3, #12]
 2129              	.L117:
 2130              		.loc 1 1176 0
 2131 0050 00BF     		nop
 2132 0052 1437     		adds	r7, r7, #20
 2133              	.LCFI68:
 2134              		.cfi_def_cfa_offset 4
 2135 0054 BD46     		mov	sp, r7
 2136              	.LCFI69:
 2137              		.cfi_def_cfa_register 13
 2138              		@ sp needed
 2139 0056 5DF8047B 		ldr	r7, [sp], #4
 2140              	.LCFI70:
 2141              		.cfi_restore 7
 2142              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccPveV6K.s 			page 59


 2143 005a 7047     		bx	lr
 2144              		.cfi_endproc
 2145              	.LFE142:
 2147              		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
 2148              		.align	1
 2149              		.syntax unified
 2150              		.thumb
 2151              		.thumb_func
 2152              		.fpu fpv4-sp-d16
 2154              	DMA_CalcBaseAndBitshift:
 2155              	.LFB143:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval Stream base address
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2156              		.loc 1 1185 0
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 16
 2159              		@ frame_needed = 1, uses_anonymous_args = 0
 2160              		@ link register save eliminated.
 2161 0000 80B4     		push	{r7}
 2162              	.LCFI71:
 2163              		.cfi_def_cfa_offset 4
 2164              		.cfi_offset 7, -4
 2165 0002 85B0     		sub	sp, sp, #20
 2166              	.LCFI72:
 2167              		.cfi_def_cfa_offset 24
 2168 0004 00AF     		add	r7, sp, #0
 2169              	.LCFI73:
 2170              		.cfi_def_cfa_register 7
 2171 0006 7860     		str	r0, [r7, #4]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 2172              		.loc 1 1186 0
 2173 0008 7B68     		ldr	r3, [r7, #4]
 2174 000a 1B68     		ldr	r3, [r3]
 2175 000c DBB2     		uxtb	r3, r3
 2176 000e 103B     		subs	r3, r3, #16
 2177 0010 144A     		ldr	r2, .L122
 2178 0012 A2FB0323 		umull	r2, r3, r2, r3
 2179 0016 1B09     		lsrs	r3, r3, #4
 2180 0018 FB60     		str	r3, [r7, #12]
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 2181              		.loc 1 1190 0
 2182 001a 134A     		ldr	r2, .L122+4
 2183 001c FB68     		ldr	r3, [r7, #12]
 2184 001e 1344     		add	r3, r3, r2
 2185 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2186 0022 1A46     		mov	r2, r3
 2187 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccPveV6K.s 			page 60


 2188 0026 DA65     		str	r2, [r3, #92]
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if (stream_number > 3U)
 2189              		.loc 1 1192 0
 2190 0028 FB68     		ldr	r3, [r7, #12]
 2191 002a 032B     		cmp	r3, #3
 2192 002c 09D9     		bls	.L119
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 2193              		.loc 1 1195 0
 2194 002e 7B68     		ldr	r3, [r7, #4]
 2195 0030 1B68     		ldr	r3, [r3]
 2196 0032 23F47F73 		bic	r3, r3, #1020
 2197 0036 23F00303 		bic	r3, r3, #3
 2198 003a 1A1D     		adds	r2, r3, #4
 2199 003c 7B68     		ldr	r3, [r7, #4]
 2200 003e 9A65     		str	r2, [r3, #88]
 2201 0040 07E0     		b	.L120
 2202              	.L119:
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 2203              		.loc 1 1200 0
 2204 0042 7B68     		ldr	r3, [r7, #4]
 2205 0044 1B68     		ldr	r3, [r3]
 2206 0046 23F47F73 		bic	r3, r3, #1020
 2207 004a 23F00303 		bic	r3, r3, #3
 2208 004e 7A68     		ldr	r2, [r7, #4]
 2209 0050 9365     		str	r3, [r2, #88]
 2210              	.L120:
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return hdma->StreamBaseAddress;
 2211              		.loc 1 1203 0
 2212 0052 7B68     		ldr	r3, [r7, #4]
 2213 0054 9B6D     		ldr	r3, [r3, #88]
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2214              		.loc 1 1204 0
 2215 0056 1846     		mov	r0, r3
 2216 0058 1437     		adds	r7, r7, #20
 2217              	.LCFI74:
 2218              		.cfi_def_cfa_offset 4
 2219 005a BD46     		mov	sp, r7
 2220              	.LCFI75:
 2221              		.cfi_def_cfa_register 13
 2222              		@ sp needed
 2223 005c 5DF8047B 		ldr	r7, [sp], #4
 2224              	.LCFI76:
 2225              		.cfi_restore 7
 2226              		.cfi_def_cfa_offset 0
 2227 0060 7047     		bx	lr
 2228              	.L123:
 2229 0062 00BF     		.align	2
 2230              	.L122:
ARM GAS  /tmp/ccPveV6K.s 			page 61


 2231 0064 ABAAAAAA 		.word	-1431655765
 2232 0068 00000000 		.word	flagBitshiftOffset.7848
 2233              		.cfi_endproc
 2234              	.LFE143:
 2236              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 2237              		.align	1
 2238              		.syntax unified
 2239              		.thumb
 2240              		.thumb_func
 2241              		.fpu fpv4-sp-d16
 2243              	DMA_CheckFifoParam:
 2244              	.LFB144:
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** 
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** /**
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   * @retval HAL status
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   */
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** {
 2245              		.loc 1 1213 0
 2246              		.cfi_startproc
 2247              		@ args = 0, pretend = 0, frame = 16
 2248              		@ frame_needed = 1, uses_anonymous_args = 0
 2249              		@ link register save eliminated.
 2250 0000 80B4     		push	{r7}
 2251              	.LCFI77:
 2252              		.cfi_def_cfa_offset 4
 2253              		.cfi_offset 7, -4
 2254 0002 85B0     		sub	sp, sp, #20
 2255              	.LCFI78:
 2256              		.cfi_def_cfa_offset 24
 2257 0004 00AF     		add	r7, sp, #0
 2258              	.LCFI79:
 2259              		.cfi_def_cfa_register 7
 2260 0006 7860     		str	r0, [r7, #4]
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 2261              		.loc 1 1214 0
 2262 0008 0023     		movs	r3, #0
 2263 000a FB73     		strb	r3, [r7, #15]
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 2264              		.loc 1 1215 0
 2265 000c 7B68     		ldr	r3, [r7, #4]
 2266 000e 9B6A     		ldr	r3, [r3, #40]
 2267 0010 BB60     		str	r3, [r7, #8]
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 2268              		.loc 1 1218 0
 2269 0012 7B68     		ldr	r3, [r7, #4]
 2270 0014 9B69     		ldr	r3, [r3, #24]
 2271 0016 002B     		cmp	r3, #0
 2272 0018 1FD1     		bne	.L125
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2273              		.loc 1 1220 0
ARM GAS  /tmp/ccPveV6K.s 			page 62


 2274 001a BB68     		ldr	r3, [r7, #8]
 2275 001c 032B     		cmp	r3, #3
 2276 001e 55D8     		bhi	.L149
 2277 0020 01A2     		adr	r2, .L128
 2278 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2279 0026 00BF     		.p2align 2
 2280              	.L128:
 2281 0028 39000000 		.word	.L127+1
 2282 002c 4B000000 		.word	.L129+1
 2283 0030 39000000 		.word	.L127+1
 2284 0034 CD000000 		.word	.L149+1
 2285              		.p2align 1
 2286              	.L127:
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2287              		.loc 1 1224 0
 2288 0038 7B68     		ldr	r3, [r7, #4]
 2289 003a DB6A     		ldr	r3, [r3, #44]
 2290 003c 03F08073 		and	r3, r3, #16777216
 2291 0040 002B     		cmp	r3, #0
 2292 0042 45D0     		beq	.L150
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2293              		.loc 1 1226 0
 2294 0044 0123     		movs	r3, #1
 2295 0046 FB73     		strb	r3, [r7, #15]
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2296              		.loc 1 1228 0
 2297 0048 42E0     		b	.L150
 2298              	.L129:
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2299              		.loc 1 1230 0
 2300 004a 7B68     		ldr	r3, [r7, #4]
 2301 004c DB6A     		ldr	r3, [r3, #44]
 2302 004e B3F1C07F 		cmp	r3, #25165824
 2303 0052 3FD1     		bne	.L151
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2304              		.loc 1 1232 0
 2305 0054 0123     		movs	r3, #1
 2306 0056 FB73     		strb	r3, [r7, #15]
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2307              		.loc 1 1234 0
 2308 0058 3CE0     		b	.L151
 2309              	.L125:
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
ARM GAS  /tmp/ccPveV6K.s 			page 63


1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 2310              		.loc 1 1243 0
 2311 005a 7B68     		ldr	r3, [r7, #4]
 2312 005c 9B69     		ldr	r3, [r3, #24]
 2313 005e B3F5005F 		cmp	r3, #8192
 2314 0062 21D1     		bne	.L135
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2315              		.loc 1 1245 0
 2316 0064 BB68     		ldr	r3, [r7, #8]
 2317 0066 032B     		cmp	r3, #3
 2318 0068 36D8     		bhi	.L152
 2319 006a 01A2     		adr	r2, .L138
 2320 006c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2321              		.p2align 2
 2322              	.L138:
 2323 0070 81000000 		.word	.L137+1
 2324 0074 87000000 		.word	.L139+1
 2325 0078 81000000 		.word	.L137+1
 2326 007c 99000000 		.word	.L140+1
 2327              		.p2align 1
 2328              	.L137:
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
 2329              		.loc 1 1249 0
 2330 0080 0123     		movs	r3, #1
 2331 0082 FB73     		strb	r3, [r7, #15]
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2332              		.loc 1 1250 0
 2333 0084 2FE0     		b	.L134
 2334              	.L139:
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2335              		.loc 1 1252 0
 2336 0086 7B68     		ldr	r3, [r7, #4]
 2337 0088 DB6A     		ldr	r3, [r3, #44]
 2338 008a 03F08073 		and	r3, r3, #16777216
 2339 008e 002B     		cmp	r3, #0
 2340 0090 24D0     		beq	.L153
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2341              		.loc 1 1254 0
 2342 0092 0123     		movs	r3, #1
 2343 0094 FB73     		strb	r3, [r7, #15]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2344              		.loc 1 1256 0
 2345 0096 21E0     		b	.L153
 2346              	.L140:
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2347              		.loc 1 1258 0
 2348 0098 7B68     		ldr	r3, [r7, #4]
 2349 009a DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/ccPveV6K.s 			page 64


 2350 009c B3F1C07F 		cmp	r3, #25165824
 2351 00a0 1ED1     		bne	.L154
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
 2352              		.loc 1 1260 0
 2353 00a2 0123     		movs	r3, #1
 2354 00a4 FB73     		strb	r3, [r7, #15]
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;   
 2355              		.loc 1 1262 0
 2356 00a6 1BE0     		b	.L154
 2357              	.L135:
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   }
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   /* Memory Data size equal to Word */
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   else
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   {
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     switch (tmp)
 2358              		.loc 1 1271 0
 2359 00a8 BB68     		ldr	r3, [r7, #8]
 2360 00aa 022B     		cmp	r3, #2
 2361 00ac 02D9     		bls	.L145
 2362 00ae 032B     		cmp	r3, #3
 2363 00b0 03D0     		beq	.L146
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     {
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       status = HAL_ERROR;
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****         status = HAL_ERROR;
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2364              		.loc 1 1285 0
 2365 00b2 18E0     		b	.L134
 2366              	.L145:
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       break;
 2367              		.loc 1 1276 0
 2368 00b4 0123     		movs	r3, #1
 2369 00b6 FB73     		strb	r3, [r7, #15]
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2370              		.loc 1 1277 0
 2371 00b8 15E0     		b	.L134
 2372              	.L146:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       {
 2373              		.loc 1 1279 0
 2374 00ba 7B68     		ldr	r3, [r7, #4]
 2375 00bc DB6A     		ldr	r3, [r3, #44]
 2376 00be 03F08073 		and	r3, r3, #16777216
ARM GAS  /tmp/ccPveV6K.s 			page 65


 2377 00c2 002B     		cmp	r3, #0
 2378 00c4 0ED0     		beq	.L155
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****       }
 2379              		.loc 1 1281 0
 2380 00c6 0123     		movs	r3, #1
 2381 00c8 FB73     		strb	r3, [r7, #15]
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
 2382              		.loc 1 1283 0
 2383 00ca 0BE0     		b	.L155
 2384              	.L149:
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 2385              		.loc 1 1238 0
 2386 00cc 00BF     		nop
 2387 00ce 0AE0     		b	.L134
 2388              	.L150:
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_HALFFULL:
 2389              		.loc 1 1228 0
 2390 00d0 00BF     		nop
 2391 00d2 08E0     		b	.L134
 2392              	.L151:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2393              		.loc 1 1234 0
 2394 00d4 00BF     		nop
 2395 00d6 06E0     		b	.L134
 2396              	.L152:
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
 2397              		.loc 1 1264 0
 2398 00d8 00BF     		nop
 2399 00da 04E0     		b	.L134
 2400              	.L153:
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     case DMA_FIFO_THRESHOLD_FULL:
 2401              		.loc 1 1256 0
 2402 00dc 00BF     		nop
 2403 00de 02E0     		b	.L134
 2404              	.L154:
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
 2405              		.loc 1 1262 0
 2406 00e0 00BF     		nop
 2407 00e2 00E0     		b	.L134
 2408              	.L155:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     default:
 2409              		.loc 1 1283 0
 2410 00e4 00BF     		nop
 2411              	.L134:
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****     }
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   } 
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c ****   return status; 
 2412              		.loc 1 1289 0
 2413 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c **** }
 2414              		.loc 1 1290 0
 2415 00e8 1846     		mov	r0, r3
 2416 00ea 1437     		adds	r7, r7, #20
 2417              	.LCFI80:
 2418              		.cfi_def_cfa_offset 4
 2419 00ec BD46     		mov	sp, r7
ARM GAS  /tmp/ccPveV6K.s 			page 66


 2420              	.LCFI81:
 2421              		.cfi_def_cfa_register 13
 2422              		@ sp needed
 2423 00ee 5DF8047B 		ldr	r7, [sp], #4
 2424              	.LCFI82:
 2425              		.cfi_restore 7
 2426              		.cfi_def_cfa_offset 0
 2427 00f2 7047     		bx	lr
 2428              		.cfi_endproc
 2429              	.LFE144:
 2431              		.section	.rodata.flagBitshiftOffset.7848,"a",%progbits
 2432              		.align	2
 2435              	flagBitshiftOffset.7848:
 2436 0000 00       		.byte	0
 2437 0001 06       		.byte	6
 2438 0002 10       		.byte	16
 2439 0003 16       		.byte	22
 2440 0004 00       		.byte	0
 2441 0005 06       		.byte	6
 2442 0006 10       		.byte	16
 2443 0007 16       		.byte	22
 2444              		.text
 2445              	.Letext0:
 2446              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2447              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2448              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2449              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2450              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2451              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2452              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2453              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2454              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccPveV6K.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_dma.c
     /tmp/ccPveV6K.s:18     .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/ccPveV6K.s:25     .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/ccPveV6K.s:2243   .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/ccPveV6K.s:2154   .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/ccPveV6K.s:260    .text.HAL_DMA_Init:0000000000000158 $d
     /tmp/ccPveV6K.s:265    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/ccPveV6K.s:272    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/ccPveV6K.s:411    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/ccPveV6K.s:418    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/ccPveV6K.s:2067   .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/ccPveV6K.s:510    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/ccPveV6K.s:517    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/ccPveV6K.s:642    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/ccPveV6K.s:649    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/ccPveV6K.s:801    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/ccPveV6K.s:808    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/ccPveV6K.s:873    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/ccPveV6K.s:880    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/ccPveV6K.s:1168   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/ccPveV6K.s:1175   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/ccPveV6K.s:1536   .text.HAL_DMA_IRQHandler:0000000000000258 $d
     /tmp/ccPveV6K.s:1540   .text.HAL_DMA_IRQHandler:0000000000000260 $t
     /tmp/ccPveV6K.s:1656   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/ccPveV6K.s:1663   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/ccPveV6K.s:1714   .text.HAL_DMA_RegisterCallback:0000000000000040 $d
     /tmp/ccPveV6K.s:1720   .text.HAL_DMA_RegisterCallback:0000000000000058 $t
     /tmp/ccPveV6K.s:1797   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccPveV6K.s:1804   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/ccPveV6K.s:1854   .text.HAL_DMA_UnRegisterCallback:0000000000000040 $d
     /tmp/ccPveV6K.s:1861   .text.HAL_DMA_UnRegisterCallback:000000000000005c $t
     /tmp/ccPveV6K.s:1968   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/ccPveV6K.s:1975   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/ccPveV6K.s:2015   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/ccPveV6K.s:2022   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/ccPveV6K.s:2061   .text.DMA_SetConfig:0000000000000000 $t
     /tmp/ccPveV6K.s:2148   .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/ccPveV6K.s:2231   .text.DMA_CalcBaseAndBitshift:0000000000000064 $d
     /tmp/ccPveV6K.s:2435   .rodata.flagBitshiftOffset.7848:0000000000000000 flagBitshiftOffset.7848
     /tmp/ccPveV6K.s:2237   .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/ccPveV6K.s:2281   .text.DMA_CheckFifoParam:0000000000000028 $d
     /tmp/ccPveV6K.s:2285   .text.DMA_CheckFifoParam:0000000000000038 $t
     /tmp/ccPveV6K.s:2323   .text.DMA_CheckFifoParam:0000000000000070 $d
     /tmp/ccPveV6K.s:2327   .text.DMA_CheckFifoParam:0000000000000080 $t
     /tmp/ccPveV6K.s:2432   .rodata.flagBitshiftOffset.7848:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
