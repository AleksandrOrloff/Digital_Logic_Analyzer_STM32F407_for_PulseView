ARM GAS  /tmp/ccflCwj4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	triggerMask,4,4
  18              		.comm	triggerValue,4,4
  19              		.comm	flags,2,2
  20              		.comm	period,2,2
  21              		.comm	transferSize,4,4
  22              		.global	FS_Desc
  23              		.section	.data.FS_Desc,"aw",%progbits
  24              		.align	2
  27              	FS_Desc:
  28 0000 00000000 		.word	USBD_FS_DeviceDescriptor
  29 0004 00000000 		.word	USBD_FS_LangIDStrDescriptor
  30 0008 00000000 		.word	USBD_FS_ManufacturerStrDescriptor
  31 000c 00000000 		.word	USBD_FS_ProductStrDescriptor
  32 0010 00000000 		.word	USBD_FS_SerialStrDescriptor
  33 0014 00000000 		.word	USBD_FS_ConfigStrDescriptor
  34 0018 00000000 		.word	USBD_FS_InterfaceStrDescriptor
  35              		.global	USBD_FS_DeviceDesc
  36              		.section	.data.USBD_FS_DeviceDesc,"aw",%progbits
  37              		.align	2
  40              	USBD_FS_DeviceDesc:
  41 0000 12       		.byte	18
  42 0001 01       		.byte	1
  43 0002 00       		.byte	0
  44 0003 02       		.byte	2
  45 0004 02       		.byte	2
  46 0005 02       		.byte	2
  47 0006 00       		.byte	0
  48 0007 40       		.byte	64
  49 0008 83       		.byte	-125
  50 0009 04       		.byte	4
  51 000a 40       		.byte	64
  52 000b 57       		.byte	87
  53 000c 00       		.byte	0
  54 000d 02       		.byte	2
  55 000e 01       		.byte	1
  56 000f 02       		.byte	2
  57 0010 03       		.byte	3
  58 0011 01       		.byte	1
  59              		.global	USBD_LangIDDesc
  60              		.section	.data.USBD_LangIDDesc,"aw",%progbits
  61              		.align	2
ARM GAS  /tmp/ccflCwj4.s 			page 2


  64              	USBD_LangIDDesc:
  65 0000 04       		.byte	4
  66 0001 03       		.byte	3
  67 0002 09       		.byte	9
  68 0003 04       		.byte	4
  69              		.comm	USBD_StrDesc,512,4
  70              		.global	USBD_StringSerial
  71              		.section	.data.USBD_StringSerial,"aw",%progbits
  72              		.align	2
  75              	USBD_StringSerial:
  76 0000 1A       		.byte	26
  77 0001 03       		.byte	3
  78 0002 00000000 		.space	24
  78      00000000 
  78      00000000 
  78      00000000 
  78      00000000 
  79              		.section	.text.USBD_FS_DeviceDescriptor,"ax",%progbits
  80              		.align	1
  81              		.global	USBD_FS_DeviceDescriptor
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	USBD_FS_DeviceDescriptor:
  88              	.LFB133:
  89              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v1.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
  30:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccflCwj4.s 			page 3


  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  69:Src/usbd_desc.c **** #define USBD_PID_FS     22336
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING_FS     "STM32 Virtual ComPort"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING_FS     "CDC Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING_FS     "CDC Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** #define USB_SIZ_BOS_DESC            0x0C
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  79:Src/usbd_desc.c **** 
  80:Src/usbd_desc.c **** /**
  81:Src/usbd_desc.c ****   * @}
  82:Src/usbd_desc.c ****   */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  85:Src/usbd_desc.c **** 
  86:Src/usbd_desc.c **** /* USER CODE END 0 */
  87:Src/usbd_desc.c **** 
ARM GAS  /tmp/ccflCwj4.s 			page 4


  88:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
  89:Src/usbd_desc.c ****   * @brief Private macros.
  90:Src/usbd_desc.c ****   * @{
  91:Src/usbd_desc.c ****   */
  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  96:Src/usbd_desc.c **** 
  97:Src/usbd_desc.c **** /**
  98:Src/usbd_desc.c ****   * @}
  99:Src/usbd_desc.c ****   */
 100:Src/usbd_desc.c ****   
 101:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 102:Src/usbd_desc.c ****   * @brief Private functions declaration.
 103:Src/usbd_desc.c ****   * @{
 104:Src/usbd_desc.c ****   */
 105:Src/usbd_desc.c ****   
 106:Src/usbd_desc.c **** static void Get_SerialNum(void);
 107:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 108:Src/usbd_desc.c ****   
 109:Src/usbd_desc.c **** /**
 110:Src/usbd_desc.c ****   * @}
 111:Src/usbd_desc.c ****   */  
 112:Src/usbd_desc.c ****   
 113:Src/usbd_desc.c **** 
 114:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 115:Src/usbd_desc.c ****   * @brief Private functions declaration for FS.
 116:Src/usbd_desc.c ****   * @{
 117:Src/usbd_desc.c ****   */
 118:Src/usbd_desc.c **** 
 119:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 124:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 125:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 126:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 127:Src/usbd_desc.c **** uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 128:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 129:Src/usbd_desc.c **** 
 130:Src/usbd_desc.c **** /**
 131:Src/usbd_desc.c ****   * @}
 132:Src/usbd_desc.c ****   */
 133:Src/usbd_desc.c **** 
 134:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 135:Src/usbd_desc.c ****   * @brief Private variables.
 136:Src/usbd_desc.c ****   * @{
 137:Src/usbd_desc.c ****   */
 138:Src/usbd_desc.c **** 
 139:Src/usbd_desc.c **** USBD_DescriptorsTypeDef FS_Desc =
 140:Src/usbd_desc.c **** {
 141:Src/usbd_desc.c ****   USBD_FS_DeviceDescriptor
 142:Src/usbd_desc.c **** , USBD_FS_LangIDStrDescriptor
 143:Src/usbd_desc.c **** , USBD_FS_ManufacturerStrDescriptor
 144:Src/usbd_desc.c **** , USBD_FS_ProductStrDescriptor
ARM GAS  /tmp/ccflCwj4.s 			page 5


 145:Src/usbd_desc.c **** , USBD_FS_SerialStrDescriptor
 146:Src/usbd_desc.c **** , USBD_FS_ConfigStrDescriptor
 147:Src/usbd_desc.c **** , USBD_FS_InterfaceStrDescriptor
 148:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 149:Src/usbd_desc.c **** , USBD_FS_USR_BOSDescriptor
 150:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 151:Src/usbd_desc.c **** };
 152:Src/usbd_desc.c **** 
 153:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 154:Src/usbd_desc.c ****   #pragma data_alignment=4
 155:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 156:Src/usbd_desc.c **** /** USB standard device descriptor. */
 157:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 158:Src/usbd_desc.c **** {
 159:Src/usbd_desc.c ****   0x12,                       /*bLength */
 160:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 161:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 162:Src/usbd_desc.c ****   0x01,                       /*bcdUSB */ /* changed to USB version 2.01
 163:Src/usbd_desc.c ****                                              in order to support LPM L1 suspend
 164:Src/usbd_desc.c ****                                              resume test of USBCV3.0*/
 165:Src/usbd_desc.c **** #else
 166:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 167:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 168:Src/usbd_desc.c ****   0x02,
 169:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 170:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 171:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 172:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 173:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 174:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 175:Src/usbd_desc.c ****   LOBYTE(USBD_PID_FS),        /*idProduct*/
 176:Src/usbd_desc.c ****   HIBYTE(USBD_PID_FS),        /*idProduct*/
 177:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 178:Src/usbd_desc.c ****   0x02,
 179:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 180:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 181:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 182:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 183:Src/usbd_desc.c **** };
 184:Src/usbd_desc.c **** 
 185:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 186:Src/usbd_desc.c **** /** BOS descriptor. */
 187:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 188:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 189:Src/usbd_desc.c ****   #pragma data_alignment=4
 190:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 191:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_FS_BOSDesc[USB_SIZ_BOS_DESC] __ALIGN_END =
 192:Src/usbd_desc.c **** {
 193:Src/usbd_desc.c ****   0x5,
 194:Src/usbd_desc.c ****   USB_DESC_TYPE_BOS,
 195:Src/usbd_desc.c ****   0xC,
 196:Src/usbd_desc.c ****   0x0,
 197:Src/usbd_desc.c ****   0x1,  /* 1 device capability*/
 198:Src/usbd_desc.c ****         /* device capability*/
 199:Src/usbd_desc.c ****   0x7,
 200:Src/usbd_desc.c ****   USB_DEVICE_CAPABITY_TYPE,
 201:Src/usbd_desc.c ****   0x2,
ARM GAS  /tmp/ccflCwj4.s 			page 6


 202:Src/usbd_desc.c ****   0x2,  /* LPM capability bit set*/
 203:Src/usbd_desc.c ****   0x0,
 204:Src/usbd_desc.c ****   0x0,
 205:Src/usbd_desc.c ****   0x0
 206:Src/usbd_desc.c **** };
 207:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 208:Src/usbd_desc.c **** 
 209:Src/usbd_desc.c **** /**
 210:Src/usbd_desc.c ****   * @}
 211:Src/usbd_desc.c ****   */
 212:Src/usbd_desc.c **** 
 213:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 214:Src/usbd_desc.c ****   * @brief Private variables.
 215:Src/usbd_desc.c ****   * @{
 216:Src/usbd_desc.c ****   */
 217:Src/usbd_desc.c **** 
 218:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 219:Src/usbd_desc.c ****   #pragma data_alignment=4
 220:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 221:Src/usbd_desc.c **** 
 222:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 223:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 224:Src/usbd_desc.c **** {
 225:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 226:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 227:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 228:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 229:Src/usbd_desc.c **** };
 230:Src/usbd_desc.c **** 
 231:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 232:Src/usbd_desc.c ****   #pragma data_alignment=4
 233:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 234:Src/usbd_desc.c **** /* Internal string descriptor. */
 235:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 236:Src/usbd_desc.c **** 
 237:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 238:Src/usbd_desc.c ****   #pragma data_alignment=4   
 239:Src/usbd_desc.c **** #endif
 240:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 241:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 242:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 243:Src/usbd_desc.c **** };
 244:Src/usbd_desc.c **** 
 245:Src/usbd_desc.c **** /**
 246:Src/usbd_desc.c ****   * @}
 247:Src/usbd_desc.c ****   */
 248:Src/usbd_desc.c **** 
 249:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 250:Src/usbd_desc.c ****   * @brief Private functions.
 251:Src/usbd_desc.c ****   * @{
 252:Src/usbd_desc.c ****   */
 253:Src/usbd_desc.c **** 
 254:Src/usbd_desc.c **** /**
 255:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 256:Src/usbd_desc.c ****   * @param  speed : Current device speed
 257:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 258:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
ARM GAS  /tmp/ccflCwj4.s 			page 7


 259:Src/usbd_desc.c ****   */
 260:Src/usbd_desc.c **** uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 261:Src/usbd_desc.c **** {
  90              		.loc 1 261 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              	.LCFI0:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 7, -4
  99 0002 83B0     		sub	sp, sp, #12
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              	.LCFI2:
 104              		.cfi_def_cfa_register 7
 105 0006 0346     		mov	r3, r0
 106 0008 3960     		str	r1, [r7]
 107 000a FB71     		strb	r3, [r7, #7]
 262:Src/usbd_desc.c ****   UNUSED(speed);
 263:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_DeviceDesc);
 108              		.loc 1 263 0
 109 000c 3B68     		ldr	r3, [r7]
 110 000e 1222     		movs	r2, #18
 111 0010 1A80     		strh	r2, [r3]	@ movhi
 264:Src/usbd_desc.c ****   return USBD_FS_DeviceDesc;
 112              		.loc 1 264 0
 113 0012 034B     		ldr	r3, .L3
 265:Src/usbd_desc.c **** }
 114              		.loc 1 265 0
 115 0014 1846     		mov	r0, r3
 116 0016 0C37     		adds	r7, r7, #12
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 4
 119 0018 BD46     		mov	sp, r7
 120              	.LCFI4:
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 001a 5DF8047B 		ldr	r7, [sp], #4
 124              	.LCFI5:
 125              		.cfi_restore 7
 126              		.cfi_def_cfa_offset 0
 127 001e 7047     		bx	lr
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 0020 00000000 		.word	USBD_FS_DeviceDesc
 132              		.cfi_endproc
 133              	.LFE133:
 135              		.section	.text.USBD_FS_LangIDStrDescriptor,"ax",%progbits
 136              		.align	1
 137              		.global	USBD_FS_LangIDStrDescriptor
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
ARM GAS  /tmp/ccflCwj4.s 			page 8


 141              		.fpu fpv4-sp-d16
 143              	USBD_FS_LangIDStrDescriptor:
 144              	.LFB134:
 266:Src/usbd_desc.c **** 
 267:Src/usbd_desc.c **** /**
 268:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 269:Src/usbd_desc.c ****   * @param  speed : Current device speed
 270:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 271:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 272:Src/usbd_desc.c ****   */
 273:Src/usbd_desc.c **** uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 274:Src/usbd_desc.c **** {
 145              		.loc 1 274 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150 0000 80B4     		push	{r7}
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 4
 153              		.cfi_offset 7, -4
 154 0002 83B0     		sub	sp, sp, #12
 155              	.LCFI7:
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI8:
 159              		.cfi_def_cfa_register 7
 160 0006 0346     		mov	r3, r0
 161 0008 3960     		str	r1, [r7]
 162 000a FB71     		strb	r3, [r7, #7]
 275:Src/usbd_desc.c ****   UNUSED(speed);
 276:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
 163              		.loc 1 276 0
 164 000c 3B68     		ldr	r3, [r7]
 165 000e 0422     		movs	r2, #4
 166 0010 1A80     		strh	r2, [r3]	@ movhi
 277:Src/usbd_desc.c ****   return USBD_LangIDDesc;
 167              		.loc 1 277 0
 168 0012 034B     		ldr	r3, .L7
 278:Src/usbd_desc.c **** }
 169              		.loc 1 278 0
 170 0014 1846     		mov	r0, r3
 171 0016 0C37     		adds	r7, r7, #12
 172              	.LCFI9:
 173              		.cfi_def_cfa_offset 4
 174 0018 BD46     		mov	sp, r7
 175              	.LCFI10:
 176              		.cfi_def_cfa_register 13
 177              		@ sp needed
 178 001a 5DF8047B 		ldr	r7, [sp], #4
 179              	.LCFI11:
 180              		.cfi_restore 7
 181              		.cfi_def_cfa_offset 0
 182 001e 7047     		bx	lr
 183              	.L8:
 184              		.align	2
 185              	.L7:
ARM GAS  /tmp/ccflCwj4.s 			page 9


 186 0020 00000000 		.word	USBD_LangIDDesc
 187              		.cfi_endproc
 188              	.LFE134:
 190              		.section	.rodata
 191              		.align	2
 192              	.LC0:
 193 0000 53544D33 		.ascii	"STM32 Virtual ComPort\000"
 193      32205669 
 193      72747561 
 193      6C20436F 
 193      6D506F72 
 194              		.section	.text.USBD_FS_ProductStrDescriptor,"ax",%progbits
 195              		.align	1
 196              		.global	USBD_FS_ProductStrDescriptor
 197              		.syntax unified
 198              		.thumb
 199              		.thumb_func
 200              		.fpu fpv4-sp-d16
 202              	USBD_FS_ProductStrDescriptor:
 203              	.LFB135:
 279:Src/usbd_desc.c **** 
 280:Src/usbd_desc.c **** /**
 281:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 282:Src/usbd_desc.c ****   * @param  speed : Current device speed
 283:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 284:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 285:Src/usbd_desc.c ****   */
 286:Src/usbd_desc.c **** uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 287:Src/usbd_desc.c **** {
 204              		.loc 1 287 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              	.LCFI12:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              	.LCFI13:
 215              		.cfi_def_cfa_offset 16
 216 0004 00AF     		add	r7, sp, #0
 217              	.LCFI14:
 218              		.cfi_def_cfa_register 7
 219 0006 0346     		mov	r3, r0
 220 0008 3960     		str	r1, [r7]
 221 000a FB71     		strb	r3, [r7, #7]
 288:Src/usbd_desc.c ****   if(speed == 0)
 222              		.loc 1 288 0
 223 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 224 000e 002B     		cmp	r3, #0
 225 0010 05D1     		bne	.L10
 289:Src/usbd_desc.c ****   {
 290:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 226              		.loc 1 290 0
 227 0012 3A68     		ldr	r2, [r7]
 228 0014 0749     		ldr	r1, .L13
ARM GAS  /tmp/ccflCwj4.s 			page 10


 229 0016 0848     		ldr	r0, .L13+4
 230 0018 FFF7FEFF 		bl	USBD_GetString
 231 001c 04E0     		b	.L11
 232              	.L10:
 291:Src/usbd_desc.c ****   }
 292:Src/usbd_desc.c ****   else
 293:Src/usbd_desc.c ****   {
 294:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 233              		.loc 1 294 0
 234 001e 3A68     		ldr	r2, [r7]
 235 0020 0449     		ldr	r1, .L13
 236 0022 0548     		ldr	r0, .L13+4
 237 0024 FFF7FEFF 		bl	USBD_GetString
 238              	.L11:
 295:Src/usbd_desc.c ****   }
 296:Src/usbd_desc.c ****   return USBD_StrDesc;
 239              		.loc 1 296 0
 240 0028 024B     		ldr	r3, .L13
 297:Src/usbd_desc.c **** }
 241              		.loc 1 297 0
 242 002a 1846     		mov	r0, r3
 243 002c 0837     		adds	r7, r7, #8
 244              	.LCFI15:
 245              		.cfi_def_cfa_offset 8
 246 002e BD46     		mov	sp, r7
 247              	.LCFI16:
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 0030 80BD     		pop	{r7, pc}
 251              	.L14:
 252 0032 00BF     		.align	2
 253              	.L13:
 254 0034 00000000 		.word	USBD_StrDesc
 255 0038 00000000 		.word	.LC0
 256              		.cfi_endproc
 257              	.LFE135:
 259              		.section	.rodata
 260 0016 0000     		.align	2
 261              	.LC1:
 262 0018 53544D69 		.ascii	"STMicroelectronics\000"
 262      63726F65 
 262      6C656374 
 262      726F6E69 
 262      637300
 263              		.section	.text.USBD_FS_ManufacturerStrDescriptor,"ax",%progbits
 264              		.align	1
 265              		.global	USBD_FS_ManufacturerStrDescriptor
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	USBD_FS_ManufacturerStrDescriptor:
 272              	.LFB136:
 298:Src/usbd_desc.c **** 
 299:Src/usbd_desc.c **** /**
 300:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 301:Src/usbd_desc.c ****   * @param  speed : Current device speed
ARM GAS  /tmp/ccflCwj4.s 			page 11


 302:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 303:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 304:Src/usbd_desc.c ****   */
 305:Src/usbd_desc.c **** uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 306:Src/usbd_desc.c **** {
 273              		.loc 1 306 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277 0000 80B5     		push	{r7, lr}
 278              	.LCFI17:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 82B0     		sub	sp, sp, #8
 283              	.LCFI18:
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              	.LCFI19:
 287              		.cfi_def_cfa_register 7
 288 0006 0346     		mov	r3, r0
 289 0008 3960     		str	r1, [r7]
 290 000a FB71     		strb	r3, [r7, #7]
 307:Src/usbd_desc.c ****   UNUSED(speed);
 308:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 291              		.loc 1 308 0
 292 000c 3A68     		ldr	r2, [r7]
 293 000e 0449     		ldr	r1, .L17
 294 0010 0448     		ldr	r0, .L17+4
 295 0012 FFF7FEFF 		bl	USBD_GetString
 309:Src/usbd_desc.c ****   return USBD_StrDesc;
 296              		.loc 1 309 0
 297 0016 024B     		ldr	r3, .L17
 310:Src/usbd_desc.c **** }
 298              		.loc 1 310 0
 299 0018 1846     		mov	r0, r3
 300 001a 0837     		adds	r7, r7, #8
 301              	.LCFI20:
 302              		.cfi_def_cfa_offset 8
 303 001c BD46     		mov	sp, r7
 304              	.LCFI21:
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed
 307 001e 80BD     		pop	{r7, pc}
 308              	.L18:
 309              		.align	2
 310              	.L17:
 311 0020 00000000 		.word	USBD_StrDesc
 312 0024 18000000 		.word	.LC1
 313              		.cfi_endproc
 314              	.LFE136:
 316              		.section	.text.USBD_FS_SerialStrDescriptor,"ax",%progbits
 317              		.align	1
 318              		.global	USBD_FS_SerialStrDescriptor
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
ARM GAS  /tmp/ccflCwj4.s 			page 12


 322              		.fpu fpv4-sp-d16
 324              	USBD_FS_SerialStrDescriptor:
 325              	.LFB137:
 311:Src/usbd_desc.c **** 
 312:Src/usbd_desc.c **** /**
 313:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 314:Src/usbd_desc.c ****   * @param  speed : Current device speed
 315:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 316:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 317:Src/usbd_desc.c ****   */
 318:Src/usbd_desc.c **** uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 319:Src/usbd_desc.c **** {
 326              		.loc 1 319 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              	.LCFI22:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 82B0     		sub	sp, sp, #8
 336              	.LCFI23:
 337              		.cfi_def_cfa_offset 16
 338 0004 00AF     		add	r7, sp, #0
 339              	.LCFI24:
 340              		.cfi_def_cfa_register 7
 341 0006 0346     		mov	r3, r0
 342 0008 3960     		str	r1, [r7]
 343 000a FB71     		strb	r3, [r7, #7]
 320:Src/usbd_desc.c ****   UNUSED(speed);
 321:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 344              		.loc 1 321 0
 345 000c 3B68     		ldr	r3, [r7]
 346 000e 1A22     		movs	r2, #26
 347 0010 1A80     		strh	r2, [r3]	@ movhi
 322:Src/usbd_desc.c **** 
 323:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 324:Src/usbd_desc.c ****    * ID */
 325:Src/usbd_desc.c ****   Get_SerialNum();
 348              		.loc 1 325 0
 349 0012 FFF7FEFF 		bl	Get_SerialNum
 326:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */
 327:Src/usbd_desc.c ****   
 328:Src/usbd_desc.c ****   /* USER CODE END USBD_FS_SerialStrDescriptor */
 329:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 350              		.loc 1 329 0
 351 0016 024B     		ldr	r3, .L21
 330:Src/usbd_desc.c **** }
 352              		.loc 1 330 0
 353 0018 1846     		mov	r0, r3
 354 001a 0837     		adds	r7, r7, #8
 355              	.LCFI25:
 356              		.cfi_def_cfa_offset 8
 357 001c BD46     		mov	sp, r7
 358              	.LCFI26:
 359              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccflCwj4.s 			page 13


 360              		@ sp needed
 361 001e 80BD     		pop	{r7, pc}
 362              	.L22:
 363              		.align	2
 364              	.L21:
 365 0020 00000000 		.word	USBD_StringSerial
 366              		.cfi_endproc
 367              	.LFE137:
 369              		.section	.rodata
 370 002b 00       		.align	2
 371              	.LC2:
 372 002c 43444320 		.ascii	"CDC Config\000"
 372      436F6E66 
 372      696700
 373              		.section	.text.USBD_FS_ConfigStrDescriptor,"ax",%progbits
 374              		.align	1
 375              		.global	USBD_FS_ConfigStrDescriptor
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu fpv4-sp-d16
 381              	USBD_FS_ConfigStrDescriptor:
 382              	.LFB138:
 331:Src/usbd_desc.c **** 
 332:Src/usbd_desc.c **** /**
 333:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 334:Src/usbd_desc.c ****   * @param  speed : Current device speed
 335:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 336:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 337:Src/usbd_desc.c ****   */
 338:Src/usbd_desc.c **** uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 339:Src/usbd_desc.c **** {
 383              		.loc 1 339 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 80B5     		push	{r7, lr}
 388              	.LCFI27:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 82B0     		sub	sp, sp, #8
 393              	.LCFI28:
 394              		.cfi_def_cfa_offset 16
 395 0004 00AF     		add	r7, sp, #0
 396              	.LCFI29:
 397              		.cfi_def_cfa_register 7
 398 0006 0346     		mov	r3, r0
 399 0008 3960     		str	r1, [r7]
 400 000a FB71     		strb	r3, [r7, #7]
 340:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 401              		.loc 1 340 0
 402 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 403 000e 002B     		cmp	r3, #0
 404 0010 05D1     		bne	.L24
 341:Src/usbd_desc.c ****   {
 342:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
ARM GAS  /tmp/ccflCwj4.s 			page 14


 405              		.loc 1 342 0
 406 0012 3A68     		ldr	r2, [r7]
 407 0014 0749     		ldr	r1, .L27
 408 0016 0848     		ldr	r0, .L27+4
 409 0018 FFF7FEFF 		bl	USBD_GetString
 410 001c 04E0     		b	.L25
 411              	.L24:
 343:Src/usbd_desc.c ****   }
 344:Src/usbd_desc.c ****   else
 345:Src/usbd_desc.c ****   {
 346:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 412              		.loc 1 346 0
 413 001e 3A68     		ldr	r2, [r7]
 414 0020 0449     		ldr	r1, .L27
 415 0022 0548     		ldr	r0, .L27+4
 416 0024 FFF7FEFF 		bl	USBD_GetString
 417              	.L25:
 347:Src/usbd_desc.c ****   }
 348:Src/usbd_desc.c ****   return USBD_StrDesc;
 418              		.loc 1 348 0
 419 0028 024B     		ldr	r3, .L27
 349:Src/usbd_desc.c **** }
 420              		.loc 1 349 0
 421 002a 1846     		mov	r0, r3
 422 002c 0837     		adds	r7, r7, #8
 423              	.LCFI30:
 424              		.cfi_def_cfa_offset 8
 425 002e BD46     		mov	sp, r7
 426              	.LCFI31:
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 0030 80BD     		pop	{r7, pc}
 430              	.L28:
 431 0032 00BF     		.align	2
 432              	.L27:
 433 0034 00000000 		.word	USBD_StrDesc
 434 0038 2C000000 		.word	.LC2
 435              		.cfi_endproc
 436              	.LFE138:
 438              		.section	.rodata
 439 0037 00       		.align	2
 440              	.LC3:
 441 0038 43444320 		.ascii	"CDC Interface\000"
 441      496E7465 
 441      72666163 
 441      6500
 442              		.section	.text.USBD_FS_InterfaceStrDescriptor,"ax",%progbits
 443              		.align	1
 444              		.global	USBD_FS_InterfaceStrDescriptor
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	USBD_FS_InterfaceStrDescriptor:
 451              	.LFB139:
 350:Src/usbd_desc.c **** 
 351:Src/usbd_desc.c **** /**
ARM GAS  /tmp/ccflCwj4.s 			page 15


 352:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 353:Src/usbd_desc.c ****   * @param  speed : Current device speed
 354:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 355:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 356:Src/usbd_desc.c ****   */
 357:Src/usbd_desc.c **** uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 358:Src/usbd_desc.c **** {
 452              		.loc 1 358 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              	.LCFI32:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 82B0     		sub	sp, sp, #8
 462              	.LCFI33:
 463              		.cfi_def_cfa_offset 16
 464 0004 00AF     		add	r7, sp, #0
 465              	.LCFI34:
 466              		.cfi_def_cfa_register 7
 467 0006 0346     		mov	r3, r0
 468 0008 3960     		str	r1, [r7]
 469 000a FB71     		strb	r3, [r7, #7]
 359:Src/usbd_desc.c ****   if(speed == 0)
 470              		.loc 1 359 0
 471 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 472 000e 002B     		cmp	r3, #0
 473 0010 05D1     		bne	.L30
 360:Src/usbd_desc.c ****   {
 361:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 474              		.loc 1 361 0
 475 0012 3A68     		ldr	r2, [r7]
 476 0014 0749     		ldr	r1, .L33
 477 0016 0848     		ldr	r0, .L33+4
 478 0018 FFF7FEFF 		bl	USBD_GetString
 479 001c 04E0     		b	.L31
 480              	.L30:
 362:Src/usbd_desc.c ****   }
 363:Src/usbd_desc.c ****   else
 364:Src/usbd_desc.c ****   {
 365:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 481              		.loc 1 365 0
 482 001e 3A68     		ldr	r2, [r7]
 483 0020 0449     		ldr	r1, .L33
 484 0022 0548     		ldr	r0, .L33+4
 485 0024 FFF7FEFF 		bl	USBD_GetString
 486              	.L31:
 366:Src/usbd_desc.c ****   }
 367:Src/usbd_desc.c ****   return USBD_StrDesc;
 487              		.loc 1 367 0
 488 0028 024B     		ldr	r3, .L33
 368:Src/usbd_desc.c **** }
 489              		.loc 1 368 0
 490 002a 1846     		mov	r0, r3
 491 002c 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccflCwj4.s 			page 16


 492              	.LCFI35:
 493              		.cfi_def_cfa_offset 8
 494 002e BD46     		mov	sp, r7
 495              	.LCFI36:
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 0030 80BD     		pop	{r7, pc}
 499              	.L34:
 500 0032 00BF     		.align	2
 501              	.L33:
 502 0034 00000000 		.word	USBD_StrDesc
 503 0038 38000000 		.word	.LC3
 504              		.cfi_endproc
 505              	.LFE139:
 507              		.section	.text.Get_SerialNum,"ax",%progbits
 508              		.align	1
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	Get_SerialNum:
 515              	.LFB140:
 369:Src/usbd_desc.c **** 
 370:Src/usbd_desc.c **** #if (USBD_LPM_ENABLED == 1)
 371:Src/usbd_desc.c **** /**
 372:Src/usbd_desc.c ****   * @brief  Return the BOS descriptor
 373:Src/usbd_desc.c ****   * @param  speed : Current device speed
 374:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 375:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 376:Src/usbd_desc.c ****   */
 377:Src/usbd_desc.c **** uint8_t * USBD_FS_USR_BOSDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 378:Src/usbd_desc.c **** {
 379:Src/usbd_desc.c ****   UNUSED(speed);
 380:Src/usbd_desc.c ****   *length = sizeof(USBD_FS_BOSDesc);
 381:Src/usbd_desc.c ****   return (uint8_t*)USBD_FS_BOSDesc;
 382:Src/usbd_desc.c **** }
 383:Src/usbd_desc.c **** #endif /* (USBD_LPM_ENABLED == 1) */
 384:Src/usbd_desc.c **** 
 385:Src/usbd_desc.c **** /**
 386:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor 
 387:Src/usbd_desc.c ****   * @param  None 
 388:Src/usbd_desc.c ****   * @retval None
 389:Src/usbd_desc.c ****   */
 390:Src/usbd_desc.c **** static void Get_SerialNum(void)
 391:Src/usbd_desc.c **** {
 516              		.loc 1 391 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 16
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520 0000 80B5     		push	{r7, lr}
 521              	.LCFI37:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 84B0     		sub	sp, sp, #16
 526              	.LCFI38:
 527              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccflCwj4.s 			page 17


 528 0004 00AF     		add	r7, sp, #0
 529              	.LCFI39:
 530              		.cfi_def_cfa_register 7
 392:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 393:Src/usbd_desc.c **** 
 394:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 531              		.loc 1 394 0
 532 0006 0F4B     		ldr	r3, .L38
 533 0008 1B68     		ldr	r3, [r3]
 534 000a FB60     		str	r3, [r7, #12]
 395:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 535              		.loc 1 395 0
 536 000c 0E4B     		ldr	r3, .L38+4
 537 000e 1B68     		ldr	r3, [r3]
 538 0010 BB60     		str	r3, [r7, #8]
 396:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 539              		.loc 1 396 0
 540 0012 0E4B     		ldr	r3, .L38+8
 541 0014 1B68     		ldr	r3, [r3]
 542 0016 7B60     		str	r3, [r7, #4]
 397:Src/usbd_desc.c **** 
 398:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 543              		.loc 1 398 0
 544 0018 FA68     		ldr	r2, [r7, #12]
 545 001a 7B68     		ldr	r3, [r7, #4]
 546 001c 1344     		add	r3, r3, r2
 547 001e FB60     		str	r3, [r7, #12]
 399:Src/usbd_desc.c **** 
 400:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 548              		.loc 1 400 0
 549 0020 FB68     		ldr	r3, [r7, #12]
 550 0022 002B     		cmp	r3, #0
 551 0024 09D0     		beq	.L37
 401:Src/usbd_desc.c ****   {
 402:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 552              		.loc 1 402 0
 553 0026 0822     		movs	r2, #8
 554 0028 0949     		ldr	r1, .L38+12
 555 002a F868     		ldr	r0, [r7, #12]
 556 002c FFF7FEFF 		bl	IntToUnicode
 403:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 557              		.loc 1 403 0
 558 0030 0422     		movs	r2, #4
 559 0032 0849     		ldr	r1, .L38+16
 560 0034 B868     		ldr	r0, [r7, #8]
 561 0036 FFF7FEFF 		bl	IntToUnicode
 562              	.L37:
 404:Src/usbd_desc.c ****   }
 405:Src/usbd_desc.c **** }
 563              		.loc 1 405 0
 564 003a 00BF     		nop
 565 003c 1037     		adds	r7, r7, #16
 566              	.LCFI40:
 567              		.cfi_def_cfa_offset 8
 568 003e BD46     		mov	sp, r7
 569              	.LCFI41:
 570              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccflCwj4.s 			page 18


 571              		@ sp needed
 572 0040 80BD     		pop	{r7, pc}
 573              	.L39:
 574 0042 00BF     		.align	2
 575              	.L38:
 576 0044 107AFF1F 		.word	536836624
 577 0048 147AFF1F 		.word	536836628
 578 004c 187AFF1F 		.word	536836632
 579 0050 02000000 		.word	USBD_StringSerial+2
 580 0054 12000000 		.word	USBD_StringSerial+18
 581              		.cfi_endproc
 582              	.LFE140:
 584              		.section	.text.IntToUnicode,"ax",%progbits
 585              		.align	1
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 589              		.fpu fpv4-sp-d16
 591              	IntToUnicode:
 592              	.LFB141:
 406:Src/usbd_desc.c **** 
 407:Src/usbd_desc.c **** /**
 408:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char 
 409:Src/usbd_desc.c ****   * @param  value: value to convert
 410:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer 
 411:Src/usbd_desc.c ****   * @param  len: buffer length
 412:Src/usbd_desc.c ****   * @retval None
 413:Src/usbd_desc.c ****   */
 414:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
 415:Src/usbd_desc.c **** {
 593              		.loc 1 415 0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 24
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597              		@ link register save eliminated.
 598 0000 80B4     		push	{r7}
 599              	.LCFI42:
 600              		.cfi_def_cfa_offset 4
 601              		.cfi_offset 7, -4
 602 0002 87B0     		sub	sp, sp, #28
 603              	.LCFI43:
 604              		.cfi_def_cfa_offset 32
 605 0004 00AF     		add	r7, sp, #0
 606              	.LCFI44:
 607              		.cfi_def_cfa_register 7
 608 0006 F860     		str	r0, [r7, #12]
 609 0008 B960     		str	r1, [r7, #8]
 610 000a 1346     		mov	r3, r2
 611 000c FB71     		strb	r3, [r7, #7]
 416:Src/usbd_desc.c ****   uint8_t idx = 0;
 612              		.loc 1 416 0
 613 000e 0023     		movs	r3, #0
 614 0010 FB75     		strb	r3, [r7, #23]
 417:Src/usbd_desc.c **** 
 418:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 615              		.loc 1 418 0
 616 0012 0023     		movs	r3, #0
ARM GAS  /tmp/ccflCwj4.s 			page 19


 617 0014 FB75     		strb	r3, [r7, #23]
 618 0016 27E0     		b	.L41
 619              	.L44:
 419:Src/usbd_desc.c ****   {
 420:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 620              		.loc 1 420 0
 621 0018 FB68     		ldr	r3, [r7, #12]
 622 001a 1B0F     		lsrs	r3, r3, #28
 623 001c 092B     		cmp	r3, #9
 624 001e 0BD8     		bhi	.L42
 421:Src/usbd_desc.c ****     {
 422:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 625              		.loc 1 422 0
 626 0020 FB68     		ldr	r3, [r7, #12]
 627 0022 1B0F     		lsrs	r3, r3, #28
 628 0024 DAB2     		uxtb	r2, r3
 629 0026 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 630 0028 5B00     		lsls	r3, r3, #1
 631 002a 1946     		mov	r1, r3
 632 002c BB68     		ldr	r3, [r7, #8]
 633 002e 0B44     		add	r3, r3, r1
 634 0030 3032     		adds	r2, r2, #48
 635 0032 D2B2     		uxtb	r2, r2
 636 0034 1A70     		strb	r2, [r3]
 637 0036 0AE0     		b	.L43
 638              	.L42:
 423:Src/usbd_desc.c ****     }
 424:Src/usbd_desc.c ****     else
 425:Src/usbd_desc.c ****     {
 426:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 639              		.loc 1 426 0
 640 0038 FB68     		ldr	r3, [r7, #12]
 641 003a 1B0F     		lsrs	r3, r3, #28
 642 003c DAB2     		uxtb	r2, r3
 643 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 644 0040 5B00     		lsls	r3, r3, #1
 645 0042 1946     		mov	r1, r3
 646 0044 BB68     		ldr	r3, [r7, #8]
 647 0046 0B44     		add	r3, r3, r1
 648 0048 3732     		adds	r2, r2, #55
 649 004a D2B2     		uxtb	r2, r2
 650 004c 1A70     		strb	r2, [r3]
 651              	.L43:
 427:Src/usbd_desc.c ****     }
 428:Src/usbd_desc.c **** 
 429:Src/usbd_desc.c ****     value = value << 4;
 652              		.loc 1 429 0 discriminator 2
 653 004e FB68     		ldr	r3, [r7, #12]
 654 0050 1B01     		lsls	r3, r3, #4
 655 0052 FB60     		str	r3, [r7, #12]
 430:Src/usbd_desc.c **** 
 431:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 656              		.loc 1 431 0 discriminator 2
 657 0054 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 658 0056 5B00     		lsls	r3, r3, #1
 659 0058 0133     		adds	r3, r3, #1
 660 005a BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccflCwj4.s 			page 20


 661 005c 1344     		add	r3, r3, r2
 662 005e 0022     		movs	r2, #0
 663 0060 1A70     		strb	r2, [r3]
 418:Src/usbd_desc.c ****   {
 664              		.loc 1 418 0 discriminator 2
 665 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 666 0064 0133     		adds	r3, r3, #1
 667 0066 FB75     		strb	r3, [r7, #23]
 668              	.L41:
 418:Src/usbd_desc.c ****   {
 669              		.loc 1 418 0 is_stmt 0 discriminator 1
 670 0068 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 671 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 672 006c 9A42     		cmp	r2, r3
 673 006e D3D3     		bcc	.L44
 432:Src/usbd_desc.c ****   }
 433:Src/usbd_desc.c **** }
 674              		.loc 1 433 0 is_stmt 1
 675 0070 00BF     		nop
 676 0072 1C37     		adds	r7, r7, #28
 677              	.LCFI45:
 678              		.cfi_def_cfa_offset 4
 679 0074 BD46     		mov	sp, r7
 680              	.LCFI46:
 681              		.cfi_def_cfa_register 13
 682              		@ sp needed
 683 0076 5DF8047B 		ldr	r7, [sp], #4
 684              	.LCFI47:
 685              		.cfi_restore 7
 686              		.cfi_def_cfa_offset 0
 687 007a 7047     		bx	lr
 688              		.cfi_endproc
 689              	.LFE141:
 691              		.text
 692              	.Letext0:
 693              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 694              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 695              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 696              		.file 5 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 697              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 698              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 699              		.file 8 "/usr/arm-none-eabi/include/stdlib.h"
 700              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 701              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 702              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 703              		.file 12 "la/sampling.h"
 704              		.file 13 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 705              		.file 14 "Inc/usbd_desc.h"
ARM GAS  /tmp/ccflCwj4.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
                            *COM*:0000000000000004 triggerMask
                            *COM*:0000000000000004 triggerValue
                            *COM*:0000000000000002 flags
                            *COM*:0000000000000002 period
                            *COM*:0000000000000004 transferSize
     /tmp/ccflCwj4.s:27     .data.FS_Desc:0000000000000000 FS_Desc
     /tmp/ccflCwj4.s:24     .data.FS_Desc:0000000000000000 $d
     /tmp/ccflCwj4.s:87     .text.USBD_FS_DeviceDescriptor:0000000000000000 USBD_FS_DeviceDescriptor
     /tmp/ccflCwj4.s:143    .text.USBD_FS_LangIDStrDescriptor:0000000000000000 USBD_FS_LangIDStrDescriptor
     /tmp/ccflCwj4.s:271    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 USBD_FS_ManufacturerStrDescriptor
     /tmp/ccflCwj4.s:202    .text.USBD_FS_ProductStrDescriptor:0000000000000000 USBD_FS_ProductStrDescriptor
     /tmp/ccflCwj4.s:324    .text.USBD_FS_SerialStrDescriptor:0000000000000000 USBD_FS_SerialStrDescriptor
     /tmp/ccflCwj4.s:381    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 USBD_FS_ConfigStrDescriptor
     /tmp/ccflCwj4.s:450    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 USBD_FS_InterfaceStrDescriptor
     /tmp/ccflCwj4.s:40     .data.USBD_FS_DeviceDesc:0000000000000000 USBD_FS_DeviceDesc
     /tmp/ccflCwj4.s:37     .data.USBD_FS_DeviceDesc:0000000000000000 $d
     /tmp/ccflCwj4.s:64     .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/ccflCwj4.s:61     .data.USBD_LangIDDesc:0000000000000000 $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/ccflCwj4.s:75     .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/ccflCwj4.s:72     .data.USBD_StringSerial:0000000000000000 $d
     /tmp/ccflCwj4.s:80     .text.USBD_FS_DeviceDescriptor:0000000000000000 $t
     /tmp/ccflCwj4.s:131    .text.USBD_FS_DeviceDescriptor:0000000000000020 $d
     /tmp/ccflCwj4.s:136    .text.USBD_FS_LangIDStrDescriptor:0000000000000000 $t
     /tmp/ccflCwj4.s:186    .text.USBD_FS_LangIDStrDescriptor:0000000000000020 $d
     /tmp/ccflCwj4.s:191    .rodata:0000000000000000 $d
     /tmp/ccflCwj4.s:195    .text.USBD_FS_ProductStrDescriptor:0000000000000000 $t
     /tmp/ccflCwj4.s:254    .text.USBD_FS_ProductStrDescriptor:0000000000000034 $d
     /tmp/ccflCwj4.s:264    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/ccflCwj4.s:311    .text.USBD_FS_ManufacturerStrDescriptor:0000000000000020 $d
     /tmp/ccflCwj4.s:317    .text.USBD_FS_SerialStrDescriptor:0000000000000000 $t
     /tmp/ccflCwj4.s:514    .text.Get_SerialNum:0000000000000000 Get_SerialNum
     /tmp/ccflCwj4.s:365    .text.USBD_FS_SerialStrDescriptor:0000000000000020 $d
     /tmp/ccflCwj4.s:374    .text.USBD_FS_ConfigStrDescriptor:0000000000000000 $t
     /tmp/ccflCwj4.s:433    .text.USBD_FS_ConfigStrDescriptor:0000000000000034 $d
     /tmp/ccflCwj4.s:443    .text.USBD_FS_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/ccflCwj4.s:502    .text.USBD_FS_InterfaceStrDescriptor:0000000000000034 $d
     /tmp/ccflCwj4.s:508    .text.Get_SerialNum:0000000000000000 $t
     /tmp/ccflCwj4.s:591    .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/ccflCwj4.s:576    .text.Get_SerialNum:0000000000000044 $d
     /tmp/ccflCwj4.s:585    .text.IntToUnicode:0000000000000000 $t

UNDEFINED SYMBOLS
USBD_GetString
