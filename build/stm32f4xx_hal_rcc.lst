ARM GAS  /tmp/ccQgLWi2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_RCC_DeInit:
  26              	.LFB130:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @file    stm32f4xx_hal_rcc.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
ARM GAS  /tmp/ccQgLWi2.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #include "stm32f4xx_hal.h"
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup STM32F4xx_HAL_Driver
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccQgLWi2.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *  @{
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        and APB2).
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the PLL as System clock source.
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source.
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 168 MHz)
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
ARM GAS  /tmp/ccQgLWi2.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M4 NMI
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              HSE and PLL.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F405xx/07xx and STM32F415xx/17xx devices, the maximum
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 168 MHz, PCLK2 84 MHz and PCLK1 42 MHz.
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F42xxx, STM32F43xxx, STM32F446xx, STM32F469xx and STM32F479xx devices,
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              the maximum frequency of the SYSCLK and HCLK is 180 MHz, PCLK2 90 MHz and PCLK1 45 MHz
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F401xx, the maximum frequency of the SYSCLK and HCLK is 84 MHz,
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 84 MHz and PCLK1 42 MHz.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****          (#) For the STM32F41xxx, the maximum frequency of the SYSCLK and HCLK is 100 MHz,
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              PCLK2 100 MHz and PCLK1 50 MHz.
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****              be adapted accordingly (refer to the product datasheets for more details).
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - HSE and PLL OFF
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - All interrupts disabled
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - Peripheral clocks
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_DeInit(void)
ARM GAS  /tmp/ccQgLWi2.s 			page 5


 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  28              		.loc 1 203 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
  40              		.loc 1 204 0
  41 0004 0023     		movs	r3, #0
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
  42              		.loc 1 205 0
  43 0006 1846     		mov	r0, r3
  44 0008 BD46     		mov	sp, r7
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 13
  47              		@ sp needed
  48 000a 5DF8047B 		ldr	r7, [sp], #4
  49              	.LCFI3:
  50              		.cfi_restore 7
  51              		.cfi_def_cfa_offset 0
  52 000e 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE130:
  56              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  57              		.align	1
  58              		.weak	HAL_RCC_OscConfig
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	HAL_RCC_OscConfig:
  65              	.LFB131:
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HAL status
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
  66              		.loc 1 222 0
ARM GAS  /tmp/ccQgLWi2.s 			page 6


  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 24
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              	.LCFI4:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 86B0     		sub	sp, sp, #24
  76              	.LCFI5:
  77              		.cfi_def_cfa_offset 32
  78 0004 00AF     		add	r7, sp, #0
  79              	.LCFI6:
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart, pll_config;
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
  82              		.loc 1 226 0
  83 0008 7B68     		ldr	r3, [r7, #4]
  84 000a 002B     		cmp	r3, #0
  85 000c 01D1     		bne	.L4
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
  86              		.loc 1 228 0
  87 000e 0123     		movs	r3, #1
  88 0010 5BE2     		b	.L5
  89              	.L4:
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  90              		.loc 1 234 0
  91 0012 7B68     		ldr	r3, [r7, #4]
  92 0014 1B68     		ldr	r3, [r3]
  93 0016 03F00103 		and	r3, r3, #1
  94 001a 002B     		cmp	r3, #0
  95 001c 75D0     		beq	.L6
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
  96              		.loc 1 239 0
  97 001e A34B     		ldr	r3, .L59
  98 0020 9B68     		ldr	r3, [r3, #8]
  99 0022 03F00C03 		and	r3, r3, #12
 100 0026 042B     		cmp	r3, #4
 101 0028 0CD0     		beq	.L7
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 102              		.loc 1 240 0 discriminator 1
 103 002a A04B     		ldr	r3, .L59
 104 002c 9B68     		ldr	r3, [r3, #8]
 105 002e 03F00C03 		and	r3, r3, #12
ARM GAS  /tmp/ccQgLWi2.s 			page 7


 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 106              		.loc 1 239 0 discriminator 1
 107 0032 082B     		cmp	r3, #8
 108 0034 12D1     		bne	.L8
 109              		.loc 1 240 0
 110 0036 9D4B     		ldr	r3, .L59
 111 0038 5B68     		ldr	r3, [r3, #4]
 112 003a 03F48003 		and	r3, r3, #4194304
 113 003e B3F5800F 		cmp	r3, #4194304
 114 0042 0BD1     		bne	.L8
 115              	.L7:
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 116              		.loc 1 242 0
 117 0044 994B     		ldr	r3, .L59
 118 0046 1B68     		ldr	r3, [r3]
 119 0048 03F40033 		and	r3, r3, #131072
 120 004c 002B     		cmp	r3, #0
 121 004e 5BD0     		beq	.L58
 122              		.loc 1 242 0 is_stmt 0 discriminator 1
 123 0050 7B68     		ldr	r3, [r7, #4]
 124 0052 5B68     		ldr	r3, [r3, #4]
 125 0054 002B     		cmp	r3, #0
 126 0056 57D1     		bne	.L58
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 127              		.loc 1 244 0 is_stmt 1
 128 0058 0123     		movs	r3, #1
 129 005a 36E2     		b	.L5
 130              	.L8:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 131              		.loc 1 250 0
 132 005c 7B68     		ldr	r3, [r7, #4]
 133 005e 5B68     		ldr	r3, [r3, #4]
 134 0060 B3F5803F 		cmp	r3, #65536
 135 0064 06D1     		bne	.L10
 136              		.loc 1 250 0 is_stmt 0 discriminator 1
 137 0066 914B     		ldr	r3, .L59
 138 0068 1B68     		ldr	r3, [r3]
 139 006a 904A     		ldr	r2, .L59
 140 006c 43F48033 		orr	r3, r3, #65536
 141 0070 1360     		str	r3, [r2]
 142 0072 1DE0     		b	.L11
 143              	.L10:
 144              		.loc 1 250 0 discriminator 2
 145 0074 7B68     		ldr	r3, [r7, #4]
 146 0076 5B68     		ldr	r3, [r3, #4]
 147 0078 B3F5A02F 		cmp	r3, #327680
 148 007c 0CD1     		bne	.L12
 149              		.loc 1 250 0 discriminator 3
 150 007e 8B4B     		ldr	r3, .L59
 151 0080 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccQgLWi2.s 			page 8


 152 0082 8A4A     		ldr	r2, .L59
 153 0084 43F48023 		orr	r3, r3, #262144
 154 0088 1360     		str	r3, [r2]
 155 008a 884B     		ldr	r3, .L59
 156 008c 1B68     		ldr	r3, [r3]
 157 008e 874A     		ldr	r2, .L59
 158 0090 43F48033 		orr	r3, r3, #65536
 159 0094 1360     		str	r3, [r2]
 160 0096 0BE0     		b	.L11
 161              	.L12:
 162              		.loc 1 250 0 discriminator 4
 163 0098 844B     		ldr	r3, .L59
 164 009a 1B68     		ldr	r3, [r3]
 165 009c 834A     		ldr	r2, .L59
 166 009e 23F48033 		bic	r3, r3, #65536
 167 00a2 1360     		str	r3, [r2]
 168 00a4 814B     		ldr	r3, .L59
 169 00a6 1B68     		ldr	r3, [r3]
 170 00a8 804A     		ldr	r2, .L59
 171 00aa 23F48023 		bic	r3, r3, #262144
 172 00ae 1360     		str	r3, [r2]
 173              	.L11:
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE State */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 174              		.loc 1 253 0 is_stmt 1
 175 00b0 7B68     		ldr	r3, [r7, #4]
 176 00b2 5B68     		ldr	r3, [r3, #4]
 177 00b4 002B     		cmp	r3, #0
 178 00b6 13D0     		beq	.L13
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 179              		.loc 1 256 0
 180 00b8 FFF7FEFF 		bl	HAL_GetTick
 181 00bc 3861     		str	r0, [r7, #16]
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 182              		.loc 1 259 0
 183 00be 08E0     		b	.L14
 184              	.L15:
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 185              		.loc 1 261 0
 186 00c0 FFF7FEFF 		bl	HAL_GetTick
 187 00c4 0246     		mov	r2, r0
 188 00c6 3B69     		ldr	r3, [r7, #16]
 189 00c8 D31A     		subs	r3, r2, r3
 190 00ca 642B     		cmp	r3, #100
 191 00cc 01D9     		bls	.L14
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 192              		.loc 1 263 0
 193 00ce 0323     		movs	r3, #3
 194 00d0 FBE1     		b	.L5
 195              	.L14:
ARM GAS  /tmp/ccQgLWi2.s 			page 9


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 196              		.loc 1 259 0
 197 00d2 764B     		ldr	r3, .L59
 198 00d4 1B68     		ldr	r3, [r3]
 199 00d6 03F40033 		and	r3, r3, #131072
 200 00da 002B     		cmp	r3, #0
 201 00dc F0D0     		beq	.L15
 202 00de 14E0     		b	.L6
 203              	.L13:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 204              		.loc 1 270 0
 205 00e0 FFF7FEFF 		bl	HAL_GetTick
 206 00e4 3861     		str	r0, [r7, #16]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 207              		.loc 1 273 0
 208 00e6 08E0     		b	.L16
 209              	.L17:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 210              		.loc 1 275 0
 211 00e8 FFF7FEFF 		bl	HAL_GetTick
 212 00ec 0246     		mov	r2, r0
 213 00ee 3B69     		ldr	r3, [r7, #16]
 214 00f0 D31A     		subs	r3, r2, r3
 215 00f2 642B     		cmp	r3, #100
 216 00f4 01D9     		bls	.L16
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 217              		.loc 1 277 0
 218 00f6 0323     		movs	r3, #3
 219 00f8 E7E1     		b	.L5
 220              	.L16:
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 221              		.loc 1 273 0
 222 00fa 6C4B     		ldr	r3, .L59
 223 00fc 1B68     		ldr	r3, [r3]
 224 00fe 03F40033 		and	r3, r3, #131072
 225 0102 002B     		cmp	r3, #0
 226 0104 F0D1     		bne	.L17
 227 0106 00E0     		b	.L6
 228              	.L58:
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 229              		.loc 1 242 0
 230 0108 00BF     		nop
 231              	.L6:
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccQgLWi2.s 			page 10


 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 232              		.loc 1 284 0
 233 010a 7B68     		ldr	r3, [r7, #4]
 234 010c 1B68     		ldr	r3, [r3]
 235 010e 03F00203 		and	r3, r3, #2
 236 0112 002B     		cmp	r3, #0
 237 0114 63D0     		beq	.L18
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 238              		.loc 1 291 0
 239 0116 654B     		ldr	r3, .L59
 240 0118 9B68     		ldr	r3, [r3, #8]
 241 011a 03F00C03 		and	r3, r3, #12
 242 011e 002B     		cmp	r3, #0
 243 0120 0BD0     		beq	.L19
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 244              		.loc 1 292 0 discriminator 1
 245 0122 624B     		ldr	r3, .L59
 246 0124 9B68     		ldr	r3, [r3, #8]
 247 0126 03F00C03 		and	r3, r3, #12
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 248              		.loc 1 291 0 discriminator 1
 249 012a 082B     		cmp	r3, #8
 250 012c 1CD1     		bne	.L20
 251              		.loc 1 292 0
 252 012e 5F4B     		ldr	r3, .L59
 253 0130 5B68     		ldr	r3, [r3, #4]
 254 0132 03F48003 		and	r3, r3, #4194304
 255 0136 002B     		cmp	r3, #0
 256 0138 16D1     		bne	.L20
 257              	.L19:
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 258              		.loc 1 295 0
 259 013a 5C4B     		ldr	r3, .L59
 260 013c 1B68     		ldr	r3, [r3]
 261 013e 03F00203 		and	r3, r3, #2
 262 0142 002B     		cmp	r3, #0
 263 0144 05D0     		beq	.L21
 264              		.loc 1 295 0 is_stmt 0 discriminator 1
 265 0146 7B68     		ldr	r3, [r7, #4]
 266 0148 DB68     		ldr	r3, [r3, #12]
 267 014a 012B     		cmp	r3, #1
 268 014c 01D0     		beq	.L21
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 269              		.loc 1 297 0 is_stmt 1
 270 014e 0123     		movs	r3, #1
 271 0150 BBE1     		b	.L5
ARM GAS  /tmp/ccQgLWi2.s 			page 11


 272              	.L21:
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 273              		.loc 1 303 0
 274 0152 564B     		ldr	r3, .L59
 275 0154 1B68     		ldr	r3, [r3]
 276 0156 23F0F802 		bic	r2, r3, #248
 277 015a 7B68     		ldr	r3, [r7, #4]
 278 015c 1B69     		ldr	r3, [r3, #16]
 279 015e DB00     		lsls	r3, r3, #3
 280 0160 5249     		ldr	r1, .L59
 281 0162 1343     		orrs	r3, r3, r2
 282 0164 0B60     		str	r3, [r1]
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 283              		.loc 1 295 0
 284 0166 3AE0     		b	.L18
 285              	.L20:
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI State */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 286              		.loc 1 309 0
 287 0168 7B68     		ldr	r3, [r7, #4]
 288 016a DB68     		ldr	r3, [r3, #12]
 289 016c 002B     		cmp	r3, #0
 290 016e 20D0     		beq	.L22
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 291              		.loc 1 312 0
 292 0170 4F4B     		ldr	r3, .L59+4
 293 0172 0122     		movs	r2, #1
 294 0174 1A60     		str	r2, [r3]
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 295              		.loc 1 315 0
 296 0176 FFF7FEFF 		bl	HAL_GetTick
 297 017a 3861     		str	r0, [r7, #16]
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 298              		.loc 1 318 0
 299 017c 08E0     		b	.L23
 300              	.L24:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 301              		.loc 1 320 0
 302 017e FFF7FEFF 		bl	HAL_GetTick
 303 0182 0246     		mov	r2, r0
 304 0184 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/ccQgLWi2.s 			page 12


 305 0186 D31A     		subs	r3, r2, r3
 306 0188 022B     		cmp	r3, #2
 307 018a 01D9     		bls	.L23
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 308              		.loc 1 322 0
 309 018c 0323     		movs	r3, #3
 310 018e 9CE1     		b	.L5
 311              	.L23:
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 312              		.loc 1 318 0
 313 0190 464B     		ldr	r3, .L59
 314 0192 1B68     		ldr	r3, [r3]
 315 0194 03F00203 		and	r3, r3, #2
 316 0198 002B     		cmp	r3, #0
 317 019a F0D0     		beq	.L24
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 318              		.loc 1 327 0
 319 019c 434B     		ldr	r3, .L59
 320 019e 1B68     		ldr	r3, [r3]
 321 01a0 23F0F802 		bic	r2, r3, #248
 322 01a4 7B68     		ldr	r3, [r7, #4]
 323 01a6 1B69     		ldr	r3, [r3, #16]
 324 01a8 DB00     		lsls	r3, r3, #3
 325 01aa 4049     		ldr	r1, .L59
 326 01ac 1343     		orrs	r3, r3, r2
 327 01ae 0B60     		str	r3, [r1]
 328 01b0 15E0     		b	.L18
 329              	.L22:
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 330              		.loc 1 332 0
 331 01b2 3F4B     		ldr	r3, .L59+4
 332 01b4 0022     		movs	r2, #0
 333 01b6 1A60     		str	r2, [r3]
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick*/
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 334              		.loc 1 335 0
 335 01b8 FFF7FEFF 		bl	HAL_GetTick
 336 01bc 3861     		str	r0, [r7, #16]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 337              		.loc 1 338 0
 338 01be 08E0     		b	.L25
 339              	.L26:
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 340              		.loc 1 340 0
ARM GAS  /tmp/ccQgLWi2.s 			page 13


 341 01c0 FFF7FEFF 		bl	HAL_GetTick
 342 01c4 0246     		mov	r2, r0
 343 01c6 3B69     		ldr	r3, [r7, #16]
 344 01c8 D31A     		subs	r3, r2, r3
 345 01ca 022B     		cmp	r3, #2
 346 01cc 01D9     		bls	.L25
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 347              		.loc 1 342 0
 348 01ce 0323     		movs	r3, #3
 349 01d0 7BE1     		b	.L5
 350              	.L25:
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 351              		.loc 1 338 0
 352 01d2 364B     		ldr	r3, .L59
 353 01d4 1B68     		ldr	r3, [r3]
 354 01d6 03F00203 		and	r3, r3, #2
 355 01da 002B     		cmp	r3, #0
 356 01dc F0D1     		bne	.L26
 357              	.L18:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 358              		.loc 1 349 0
 359 01de 7B68     		ldr	r3, [r7, #4]
 360 01e0 1B68     		ldr	r3, [r3]
 361 01e2 03F00803 		and	r3, r3, #8
 362 01e6 002B     		cmp	r3, #0
 363 01e8 30D0     		beq	.L27
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSI State */
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 364              		.loc 1 355 0
 365 01ea 7B68     		ldr	r3, [r7, #4]
 366 01ec 5B69     		ldr	r3, [r3, #20]
 367 01ee 002B     		cmp	r3, #0
 368 01f0 16D0     		beq	.L28
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 369              		.loc 1 358 0
 370 01f2 304B     		ldr	r3, .L59+8
 371 01f4 0122     		movs	r2, #1
 372 01f6 1A60     		str	r2, [r3]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 373              		.loc 1 361 0
 374 01f8 FFF7FEFF 		bl	HAL_GetTick
 375 01fc 3861     		str	r0, [r7, #16]
ARM GAS  /tmp/ccQgLWi2.s 			page 14


 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 376              		.loc 1 364 0
 377 01fe 08E0     		b	.L29
 378              	.L30:
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 379              		.loc 1 366 0
 380 0200 FFF7FEFF 		bl	HAL_GetTick
 381 0204 0246     		mov	r2, r0
 382 0206 3B69     		ldr	r3, [r7, #16]
 383 0208 D31A     		subs	r3, r2, r3
 384 020a 022B     		cmp	r3, #2
 385 020c 01D9     		bls	.L29
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 386              		.loc 1 368 0
 387 020e 0323     		movs	r3, #3
 388 0210 5BE1     		b	.L5
 389              	.L29:
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 390              		.loc 1 364 0
 391 0212 264B     		ldr	r3, .L59
 392 0214 5B6F     		ldr	r3, [r3, #116]
 393 0216 03F00203 		and	r3, r3, #2
 394 021a 002B     		cmp	r3, #0
 395 021c F0D0     		beq	.L30
 396 021e 15E0     		b	.L27
 397              	.L28:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 398              		.loc 1 375 0
 399 0220 244B     		ldr	r3, .L59+8
 400 0222 0022     		movs	r2, #0
 401 0224 1A60     		str	r2, [r3]
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 402              		.loc 1 378 0
 403 0226 FFF7FEFF 		bl	HAL_GetTick
 404 022a 3861     		str	r0, [r7, #16]
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 405              		.loc 1 381 0
 406 022c 08E0     		b	.L31
 407              	.L32:
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 408              		.loc 1 383 0
 409 022e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccQgLWi2.s 			page 15


 410 0232 0246     		mov	r2, r0
 411 0234 3B69     		ldr	r3, [r7, #16]
 412 0236 D31A     		subs	r3, r2, r3
 413 0238 022B     		cmp	r3, #2
 414 023a 01D9     		bls	.L31
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 415              		.loc 1 385 0
 416 023c 0323     		movs	r3, #3
 417 023e 44E1     		b	.L5
 418              	.L31:
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 419              		.loc 1 381 0
 420 0240 1A4B     		ldr	r3, .L59
 421 0242 5B6F     		ldr	r3, [r3, #116]
 422 0244 03F00203 		and	r3, r3, #2
 423 0248 002B     		cmp	r3, #0
 424 024a F0D1     		bne	.L32
 425              	.L27:
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 426              		.loc 1 391 0
 427 024c 7B68     		ldr	r3, [r7, #4]
 428 024e 1B68     		ldr	r3, [r3]
 429 0250 03F00403 		and	r3, r3, #4
 430 0254 002B     		cmp	r3, #0
 431 0256 00F0A080 		beq	.L33
 432              	.LBB2:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 433              		.loc 1 393 0
 434 025a 0023     		movs	r3, #0
 435 025c FB75     		strb	r3, [r7, #23]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the parameters */
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 436              		.loc 1 400 0
 437 025e 134B     		ldr	r3, .L59
 438 0260 1B6C     		ldr	r3, [r3, #64]
 439 0262 03F08053 		and	r3, r3, #268435456
 440 0266 002B     		cmp	r3, #0
 441 0268 0FD1     		bne	.L34
 442              	.LBB3:
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 443              		.loc 1 402 0
 444 026a 0023     		movs	r3, #0
 445 026c BB60     		str	r3, [r7, #8]
 446 026e 0F4B     		ldr	r3, .L59
ARM GAS  /tmp/ccQgLWi2.s 			page 16


 447 0270 1B6C     		ldr	r3, [r3, #64]
 448 0272 0E4A     		ldr	r2, .L59
 449 0274 43F08053 		orr	r3, r3, #268435456
 450 0278 1364     		str	r3, [r2, #64]
 451 027a 0C4B     		ldr	r3, .L59
 452 027c 1B6C     		ldr	r3, [r3, #64]
 453 027e 03F08053 		and	r3, r3, #268435456
 454 0282 BB60     		str	r3, [r7, #8]
 455 0284 BB68     		ldr	r3, [r7, #8]
 456              	.LBE3:
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pwrclkchanged = SET;
 457              		.loc 1 403 0
 458 0286 0123     		movs	r3, #1
 459 0288 FB75     		strb	r3, [r7, #23]
 460              	.L34:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 461              		.loc 1 406 0
 462 028a 0B4B     		ldr	r3, .L59+12
 463 028c 1B68     		ldr	r3, [r3]
 464 028e 03F48073 		and	r3, r3, #256
 465 0292 002B     		cmp	r3, #0
 466 0294 21D1     		bne	.L35
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 467              		.loc 1 409 0
 468 0296 084B     		ldr	r3, .L59+12
 469 0298 1B68     		ldr	r3, [r3]
 470 029a 074A     		ldr	r2, .L59+12
 471 029c 43F48073 		orr	r3, r3, #256
 472 02a0 1360     		str	r3, [r2]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 473              		.loc 1 412 0
 474 02a2 FFF7FEFF 		bl	HAL_GetTick
 475 02a6 3861     		str	r0, [r7, #16]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 476              		.loc 1 414 0
 477 02a8 11E0     		b	.L36
 478              	.L60:
 479 02aa 00BF     		.align	2
 480              	.L59:
 481 02ac 00380240 		.word	1073887232
 482 02b0 00004742 		.word	1111949312
 483 02b4 800E4742 		.word	1111953024
 484 02b8 00700040 		.word	1073770496
 485              	.L37:
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 486              		.loc 1 416 0
 487 02bc FFF7FEFF 		bl	HAL_GetTick
 488 02c0 0246     		mov	r2, r0
 489 02c2 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/ccQgLWi2.s 			page 17


 490 02c4 D31A     		subs	r3, r2, r3
 491 02c6 022B     		cmp	r3, #2
 492 02c8 01D9     		bls	.L36
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 493              		.loc 1 418 0
 494 02ca 0323     		movs	r3, #3
 495 02cc FDE0     		b	.L5
 496              	.L36:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 497              		.loc 1 414 0
 498 02ce 814B     		ldr	r3, .L61
 499 02d0 1B68     		ldr	r3, [r3]
 500 02d2 03F48073 		and	r3, r3, #256
 501 02d6 002B     		cmp	r3, #0
 502 02d8 F0D0     		beq	.L37
 503              	.L35:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 504              		.loc 1 424 0
 505 02da 7B68     		ldr	r3, [r7, #4]
 506 02dc 9B68     		ldr	r3, [r3, #8]
 507 02de 012B     		cmp	r3, #1
 508 02e0 06D1     		bne	.L38
 509              		.loc 1 424 0 is_stmt 0 discriminator 1
 510 02e2 7D4B     		ldr	r3, .L61+4
 511 02e4 1B6F     		ldr	r3, [r3, #112]
 512 02e6 7C4A     		ldr	r2, .L61+4
 513 02e8 43F00103 		orr	r3, r3, #1
 514 02ec 1367     		str	r3, [r2, #112]
 515 02ee 1CE0     		b	.L39
 516              	.L38:
 517              		.loc 1 424 0 discriminator 2
 518 02f0 7B68     		ldr	r3, [r7, #4]
 519 02f2 9B68     		ldr	r3, [r3, #8]
 520 02f4 052B     		cmp	r3, #5
 521 02f6 0CD1     		bne	.L40
 522              		.loc 1 424 0 discriminator 3
 523 02f8 774B     		ldr	r3, .L61+4
 524 02fa 1B6F     		ldr	r3, [r3, #112]
 525 02fc 764A     		ldr	r2, .L61+4
 526 02fe 43F00403 		orr	r3, r3, #4
 527 0302 1367     		str	r3, [r2, #112]
 528 0304 744B     		ldr	r3, .L61+4
 529 0306 1B6F     		ldr	r3, [r3, #112]
 530 0308 734A     		ldr	r2, .L61+4
 531 030a 43F00103 		orr	r3, r3, #1
 532 030e 1367     		str	r3, [r2, #112]
 533 0310 0BE0     		b	.L39
 534              	.L40:
 535              		.loc 1 424 0 discriminator 4
 536 0312 714B     		ldr	r3, .L61+4
 537 0314 1B6F     		ldr	r3, [r3, #112]
ARM GAS  /tmp/ccQgLWi2.s 			page 18


 538 0316 704A     		ldr	r2, .L61+4
 539 0318 23F00103 		bic	r3, r3, #1
 540 031c 1367     		str	r3, [r2, #112]
 541 031e 6E4B     		ldr	r3, .L61+4
 542 0320 1B6F     		ldr	r3, [r3, #112]
 543 0322 6D4A     		ldr	r2, .L61+4
 544 0324 23F00403 		bic	r3, r3, #4
 545 0328 1367     		str	r3, [r2, #112]
 546              	.L39:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check the LSE State */
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 547              		.loc 1 426 0 is_stmt 1
 548 032a 7B68     		ldr	r3, [r7, #4]
 549 032c 9B68     		ldr	r3, [r3, #8]
 550 032e 002B     		cmp	r3, #0
 551 0330 15D0     		beq	.L41
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick*/
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 552              		.loc 1 429 0
 553 0332 FFF7FEFF 		bl	HAL_GetTick
 554 0336 3861     		str	r0, [r7, #16]
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 555              		.loc 1 432 0
 556 0338 0AE0     		b	.L42
 557              	.L43:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 558              		.loc 1 434 0
 559 033a FFF7FEFF 		bl	HAL_GetTick
 560 033e 0246     		mov	r2, r0
 561 0340 3B69     		ldr	r3, [r7, #16]
 562 0342 D31A     		subs	r3, r2, r3
 563 0344 41F28832 		movw	r2, #5000
 564 0348 9342     		cmp	r3, r2
 565 034a 01D9     		bls	.L42
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 566              		.loc 1 436 0
 567 034c 0323     		movs	r3, #3
 568 034e BCE0     		b	.L5
 569              	.L42:
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 570              		.loc 1 432 0
 571 0350 614B     		ldr	r3, .L61+4
 572 0352 1B6F     		ldr	r3, [r3, #112]
 573 0354 03F00203 		and	r3, r3, #2
 574 0358 002B     		cmp	r3, #0
 575 035a EED0     		beq	.L43
 576 035c 14E0     		b	.L44
 577              	.L41:
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
ARM GAS  /tmp/ccQgLWi2.s 			page 19


 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Get Start Tick */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 578              		.loc 1 443 0
 579 035e FFF7FEFF 		bl	HAL_GetTick
 580 0362 3861     		str	r0, [r7, #16]
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 581              		.loc 1 446 0
 582 0364 0AE0     		b	.L45
 583              	.L46:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 584              		.loc 1 448 0
 585 0366 FFF7FEFF 		bl	HAL_GetTick
 586 036a 0246     		mov	r2, r0
 587 036c 3B69     		ldr	r3, [r7, #16]
 588 036e D31A     		subs	r3, r2, r3
 589 0370 41F28832 		movw	r2, #5000
 590 0374 9342     		cmp	r3, r2
 591 0376 01D9     		bls	.L45
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 592              		.loc 1 450 0
 593 0378 0323     		movs	r3, #3
 594 037a A6E0     		b	.L5
 595              	.L45:
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 596              		.loc 1 446 0
 597 037c 564B     		ldr	r3, .L61+4
 598 037e 1B6F     		ldr	r3, [r3, #112]
 599 0380 03F00203 		and	r3, r3, #2
 600 0384 002B     		cmp	r3, #0
 601 0386 EED1     		bne	.L46
 602              	.L44:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 603              		.loc 1 456 0
 604 0388 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 605 038a 012B     		cmp	r3, #1
 606 038c 05D1     		bne	.L33
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 607              		.loc 1 458 0
 608 038e 524B     		ldr	r3, .L61+4
 609 0390 1B6C     		ldr	r3, [r3, #64]
 610 0392 514A     		ldr	r2, .L61+4
 611 0394 23F08053 		bic	r3, r3, #268435456
 612 0398 1364     		str	r3, [r2, #64]
 613              	.L33:
 614              	.LBE2:
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccQgLWi2.s 			page 20


 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 615              		.loc 1 464 0
 616 039a 7B68     		ldr	r3, [r7, #4]
 617 039c 9B69     		ldr	r3, [r3, #24]
 618 039e 002B     		cmp	r3, #0
 619 03a0 00F09280 		beq	.L47
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 620              		.loc 1 467 0
 621 03a4 4C4B     		ldr	r3, .L61+4
 622 03a6 9B68     		ldr	r3, [r3, #8]
 623 03a8 03F00C03 		and	r3, r3, #12
 624 03ac 082B     		cmp	r3, #8
 625 03ae 5CD0     		beq	.L48
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 626              		.loc 1 469 0
 627 03b0 7B68     		ldr	r3, [r7, #4]
 628 03b2 9B69     		ldr	r3, [r3, #24]
 629 03b4 022B     		cmp	r3, #2
 630 03b6 41D1     		bne	.L49
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Check the parameters */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 631              		.loc 1 479 0
 632 03b8 484B     		ldr	r3, .L61+8
 633 03ba 0022     		movs	r2, #0
 634 03bc 1A60     		str	r2, [r3]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 635              		.loc 1 482 0
 636 03be FFF7FEFF 		bl	HAL_GetTick
 637 03c2 3861     		str	r0, [r7, #16]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 638              		.loc 1 485 0
 639 03c4 08E0     		b	.L50
 640              	.L51:
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 641              		.loc 1 487 0
 642 03c6 FFF7FEFF 		bl	HAL_GetTick
 643 03ca 0246     		mov	r2, r0
ARM GAS  /tmp/ccQgLWi2.s 			page 21


 644 03cc 3B69     		ldr	r3, [r7, #16]
 645 03ce D31A     		subs	r3, r2, r3
 646 03d0 022B     		cmp	r3, #2
 647 03d2 01D9     		bls	.L50
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 648              		.loc 1 489 0
 649 03d4 0323     		movs	r3, #3
 650 03d6 78E0     		b	.L5
 651              	.L50:
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 652              		.loc 1 485 0
 653 03d8 3F4B     		ldr	r3, .L61+4
 654 03da 1B68     		ldr	r3, [r3]
 655 03dc 03F00073 		and	r3, r3, #33554432
 656 03e0 002B     		cmp	r3, #0
 657 03e2 F0D1     		bne	.L51
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                  
 658              		.loc 1 494 0
 659 03e4 7B68     		ldr	r3, [r7, #4]
 660 03e6 DA69     		ldr	r2, [r3, #28]
 661 03e8 7B68     		ldr	r3, [r7, #4]
 662 03ea 1B6A     		ldr	r3, [r3, #32]
 663 03ec 1A43     		orrs	r2, r2, r3
 664 03ee 7B68     		ldr	r3, [r7, #4]
 665 03f0 5B6A     		ldr	r3, [r3, #36]
 666 03f2 9B01     		lsls	r3, r3, #6
 667 03f4 1A43     		orrs	r2, r2, r3
 668 03f6 7B68     		ldr	r3, [r7, #4]
 669 03f8 9B6A     		ldr	r3, [r3, #40]
 670 03fa 5B08     		lsrs	r3, r3, #1
 671 03fc 013B     		subs	r3, r3, #1
 672 03fe 1B04     		lsls	r3, r3, #16
 673 0400 1A43     		orrs	r2, r2, r3
 674 0402 7B68     		ldr	r3, [r7, #4]
 675 0404 DB6A     		ldr	r3, [r3, #44]
 676 0406 1B06     		lsls	r3, r3, #24
 677 0408 3349     		ldr	r1, .L61+4
 678 040a 1343     		orrs	r3, r3, r2
 679 040c 4B60     		str	r3, [r1, #4]
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  RCC_OscInitStruct->PLL.PLLM                                       
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Po
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                                  (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Enable the main PLL. */
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 680              		.loc 1 500 0
 681 040e 334B     		ldr	r3, .L61+8
 682 0410 0122     		movs	r2, #1
 683 0412 1A60     		str	r2, [r3]
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  /tmp/ccQgLWi2.s 			page 22


 684              		.loc 1 503 0
 685 0414 FFF7FEFF 		bl	HAL_GetTick
 686 0418 3861     		str	r0, [r7, #16]
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 687              		.loc 1 506 0
 688 041a 08E0     		b	.L52
 689              	.L53:
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 690              		.loc 1 508 0
 691 041c FFF7FEFF 		bl	HAL_GetTick
 692 0420 0246     		mov	r2, r0
 693 0422 3B69     		ldr	r3, [r7, #16]
 694 0424 D31A     		subs	r3, r2, r3
 695 0426 022B     		cmp	r3, #2
 696 0428 01D9     		bls	.L52
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 697              		.loc 1 510 0
 698 042a 0323     		movs	r3, #3
 699 042c 4DE0     		b	.L5
 700              	.L52:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 701              		.loc 1 506 0
 702 042e 2A4B     		ldr	r3, .L61+4
 703 0430 1B68     		ldr	r3, [r3]
 704 0432 03F00073 		and	r3, r3, #33554432
 705 0436 002B     		cmp	r3, #0
 706 0438 F0D0     		beq	.L53
 707 043a 45E0     		b	.L47
 708              	.L49:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Disable the main PLL. */
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 709              		.loc 1 517 0
 710 043c 274B     		ldr	r3, .L61+8
 711 043e 0022     		movs	r2, #0
 712 0440 1A60     		str	r2, [r3]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Get Start Tick */
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 713              		.loc 1 520 0
 714 0442 FFF7FEFF 		bl	HAL_GetTick
 715 0446 3861     		str	r0, [r7, #16]
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 716              		.loc 1 523 0
 717 0448 08E0     		b	.L54
 718              	.L55:
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
ARM GAS  /tmp/ccQgLWi2.s 			page 23


 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 719              		.loc 1 525 0
 720 044a FFF7FEFF 		bl	HAL_GetTick
 721 044e 0246     		mov	r2, r0
 722 0450 3B69     		ldr	r3, [r7, #16]
 723 0452 D31A     		subs	r3, r2, r3
 724 0454 022B     		cmp	r3, #2
 725 0456 01D9     		bls	.L54
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 726              		.loc 1 527 0
 727 0458 0323     		movs	r3, #3
 728 045a 36E0     		b	.L5
 729              	.L54:
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 730              		.loc 1 523 0
 731 045c 1E4B     		ldr	r3, .L61+4
 732 045e 1B68     		ldr	r3, [r3]
 733 0460 03F00073 		and	r3, r3, #33554432
 734 0464 002B     		cmp	r3, #0
 735 0466 F0D1     		bne	.L55
 736 0468 2EE0     		b	.L47
 737              	.L48:
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           }
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 738              		.loc 1 535 0
 739 046a 7B68     		ldr	r3, [r7, #4]
 740 046c 9B69     		ldr	r3, [r3, #24]
 741 046e 012B     		cmp	r3, #1
 742 0470 01D1     		bne	.L56
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 743              		.loc 1 537 0
 744 0472 0123     		movs	r3, #1
 745 0474 29E0     		b	.L5
 746              	.L56:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pll_config = RCC->CFGR;
 747              		.loc 1 542 0
 748 0476 184B     		ldr	r3, .L61+4
 749 0478 9B68     		ldr	r3, [r3, #8]
 750 047a FB60     		str	r3, [r7, #12]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 751              		.loc 1 543 0
 752 047c FB68     		ldr	r3, [r7, #12]
 753 047e 03F48002 		and	r2, r3, #4194304
 754 0482 7B68     		ldr	r3, [r7, #4]
 755 0484 DB69     		ldr	r3, [r3, #28]
ARM GAS  /tmp/ccQgLWi2.s 			page 24


 756 0486 9A42     		cmp	r2, r3
 757 0488 1CD1     		bne	.L57
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 758              		.loc 1 544 0 discriminator 1
 759 048a FB68     		ldr	r3, [r7, #12]
 760 048c 03F03F02 		and	r2, r3, #63
 761 0490 7B68     		ldr	r3, [r7, #4]
 762 0492 1B6A     		ldr	r3, [r3, #32]
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 763              		.loc 1 543 0 discriminator 1
 764 0494 9A42     		cmp	r2, r3
 765 0496 15D1     		bne	.L57
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 766              		.loc 1 545 0
 767 0498 FA68     		ldr	r2, [r7, #12]
 768 049a 47F6C073 		movw	r3, #32704
 769 049e 1340     		ands	r3, r3, r2
 770 04a0 7A68     		ldr	r2, [r7, #4]
 771 04a2 526A     		ldr	r2, [r2, #36]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 772              		.loc 1 544 0
 773 04a4 9342     		cmp	r3, r2
 774 04a6 0DD1     		bne	.L57
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 775              		.loc 1 546 0
 776 04a8 FB68     		ldr	r3, [r7, #12]
 777 04aa 03F44032 		and	r2, r3, #196608
 778 04ae 7B68     		ldr	r3, [r7, #4]
 779 04b0 9B6A     		ldr	r3, [r3, #40]
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 780              		.loc 1 545 0
 781 04b2 9A42     		cmp	r2, r3
 782 04b4 06D1     		bne	.L57
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 783              		.loc 1 547 0
 784 04b6 FB68     		ldr	r3, [r7, #12]
 785 04b8 03F07062 		and	r2, r3, #251658240
 786 04bc 7B68     		ldr	r3, [r7, #4]
 787 04be DB6A     		ldr	r3, [r3, #44]
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 788              		.loc 1 546 0
 789 04c0 9A42     		cmp	r2, r3
 790 04c2 01D0     		beq	.L47
 791              	.L57:
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         {
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****           return HAL_ERROR;
 792              		.loc 1 549 0
 793 04c4 0123     		movs	r3, #1
 794 04c6 00E0     		b	.L5
 795              	.L47:
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         }
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 796              		.loc 1 554 0
 797 04c8 0023     		movs	r3, #0
ARM GAS  /tmp/ccQgLWi2.s 			page 25


 798              	.L5:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 799              		.loc 1 555 0
 800 04ca 1846     		mov	r0, r3
 801 04cc 1837     		adds	r7, r7, #24
 802              	.LCFI7:
 803              		.cfi_def_cfa_offset 8
 804 04ce BD46     		mov	sp, r7
 805              	.LCFI8:
 806              		.cfi_def_cfa_register 13
 807              		@ sp needed
 808 04d0 80BD     		pop	{r7, pc}
 809              	.L62:
 810 04d2 00BF     		.align	2
 811              	.L61:
 812 04d4 00700040 		.word	1073770496
 813 04d8 00380240 		.word	1073887232
 814 04dc 60004742 		.word	1111949408
 815              		.cfi_endproc
 816              	.LFE131:
 818              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 819              		.align	1
 820              		.global	HAL_RCC_ClockConfig
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 824              		.fpu fpv4-sp-d16
 826              	HAL_RCC_ClockConfig:
 827              	.LFB132:
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
ARM GAS  /tmp/ccQgLWi2.s 			page 26


 828              		.loc 1 583 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 16
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832 0000 80B5     		push	{r7, lr}
 833              	.LCFI9:
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 84B0     		sub	sp, sp, #16
 838              	.LCFI10:
 839              		.cfi_def_cfa_offset 24
 840 0004 00AF     		add	r7, sp, #0
 841              	.LCFI11:
 842              		.cfi_def_cfa_register 7
 843 0006 7860     		str	r0, [r7, #4]
 844 0008 3960     		str	r1, [r7]
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t tickstart;
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check Null pointer */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 845              		.loc 1 587 0
 846 000a 7B68     		ldr	r3, [r7, #4]
 847 000c 002B     		cmp	r3, #0
 848 000e 01D1     		bne	.L64
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     return HAL_ERROR;
 849              		.loc 1 589 0
 850 0010 0123     		movs	r3, #1
 851 0012 CCE0     		b	.L65
 852              	.L64:
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 853              		.loc 1 601 0
 854 0014 684B     		ldr	r3, .L81
 855 0016 1B68     		ldr	r3, [r3]
 856 0018 03F00F03 		and	r3, r3, #15
 857 001c 3A68     		ldr	r2, [r7]
 858 001e 9A42     		cmp	r2, r3
 859 0020 0CD9     		bls	.L66
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 860              		.loc 1 604 0
 861 0022 654B     		ldr	r3, .L81
 862 0024 3A68     		ldr	r2, [r7]
 863 0026 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccQgLWi2.s 			page 27


 864 0028 1A70     		strb	r2, [r3]
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 865              		.loc 1 608 0
 866 002a 634B     		ldr	r3, .L81
 867 002c 1B68     		ldr	r3, [r3]
 868 002e 03F00F03 		and	r3, r3, #15
 869 0032 3A68     		ldr	r2, [r7]
 870 0034 9A42     		cmp	r2, r3
 871 0036 01D0     		beq	.L66
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 872              		.loc 1 610 0
 873 0038 0123     		movs	r3, #1
 874 003a B8E0     		b	.L65
 875              	.L66:
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 876              		.loc 1 615 0
 877 003c 7B68     		ldr	r3, [r7, #4]
 878 003e 1B68     		ldr	r3, [r3]
 879 0040 03F00203 		and	r3, r3, #2
 880 0044 002B     		cmp	r3, #0
 881 0046 20D0     		beq	.L67
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 882              		.loc 1 619 0
 883 0048 7B68     		ldr	r3, [r7, #4]
 884 004a 1B68     		ldr	r3, [r3]
 885 004c 03F00403 		and	r3, r3, #4
 886 0050 002B     		cmp	r3, #0
 887 0052 05D0     		beq	.L68
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 888              		.loc 1 621 0
 889 0054 594B     		ldr	r3, .L81+4
 890 0056 9B68     		ldr	r3, [r3, #8]
 891 0058 584A     		ldr	r2, .L81+4
 892 005a 43F4E053 		orr	r3, r3, #7168
 893 005e 9360     		str	r3, [r2, #8]
 894              	.L68:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 895              		.loc 1 624 0
 896 0060 7B68     		ldr	r3, [r7, #4]
 897 0062 1B68     		ldr	r3, [r3]
 898 0064 03F00803 		and	r3, r3, #8
 899 0068 002B     		cmp	r3, #0
 900 006a 05D0     		beq	.L69
ARM GAS  /tmp/ccQgLWi2.s 			page 28


 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 901              		.loc 1 626 0
 902 006c 534B     		ldr	r3, .L81+4
 903 006e 9B68     		ldr	r3, [r3, #8]
 904 0070 524A     		ldr	r2, .L81+4
 905 0072 43F46043 		orr	r3, r3, #57344
 906 0076 9360     		str	r3, [r2, #8]
 907              	.L69:
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 908              		.loc 1 630 0
 909 0078 504B     		ldr	r3, .L81+4
 910 007a 9B68     		ldr	r3, [r3, #8]
 911 007c 23F0F002 		bic	r2, r3, #240
 912 0080 7B68     		ldr	r3, [r7, #4]
 913 0082 9B68     		ldr	r3, [r3, #8]
 914 0084 4D49     		ldr	r1, .L81+4
 915 0086 1343     		orrs	r3, r3, r2
 916 0088 8B60     		str	r3, [r1, #8]
 917              	.L67:
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 918              		.loc 1 634 0
 919 008a 7B68     		ldr	r3, [r7, #4]
 920 008c 1B68     		ldr	r3, [r3]
 921 008e 03F00103 		and	r3, r3, #1
 922 0092 002B     		cmp	r3, #0
 923 0094 44D0     		beq	.L70
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 924              		.loc 1 639 0
 925 0096 7B68     		ldr	r3, [r7, #4]
 926 0098 5B68     		ldr	r3, [r3, #4]
 927 009a 012B     		cmp	r3, #1
 928 009c 07D1     		bne	.L71
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSE ready flag */
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 929              		.loc 1 642 0
 930 009e 474B     		ldr	r3, .L81+4
 931 00a0 1B68     		ldr	r3, [r3]
 932 00a2 03F40033 		and	r3, r3, #131072
 933 00a6 002B     		cmp	r3, #0
 934 00a8 19D1     		bne	.L72
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 935              		.loc 1 644 0
 936 00aa 0123     		movs	r3, #1
 937 00ac 7FE0     		b	.L65
ARM GAS  /tmp/ccQgLWi2.s 			page 29


 938              	.L71:
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 939              		.loc 1 648 0
 940 00ae 7B68     		ldr	r3, [r7, #4]
 941 00b0 5B68     		ldr	r3, [r3, #4]
 942 00b2 022B     		cmp	r3, #2
 943 00b4 03D0     		beq	.L73
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 944              		.loc 1 649 0 discriminator 1
 945 00b6 7B68     		ldr	r3, [r7, #4]
 946 00b8 5B68     		ldr	r3, [r3, #4]
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 947              		.loc 1 648 0 discriminator 1
 948 00ba 032B     		cmp	r3, #3
 949 00bc 07D1     		bne	.L74
 950              	.L73:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 951              		.loc 1 652 0
 952 00be 3F4B     		ldr	r3, .L81+4
 953 00c0 1B68     		ldr	r3, [r3]
 954 00c2 03F00073 		and	r3, r3, #33554432
 955 00c6 002B     		cmp	r3, #0
 956 00c8 09D1     		bne	.L72
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 957              		.loc 1 654 0
 958 00ca 0123     		movs	r3, #1
 959 00cc 6FE0     		b	.L65
 960              	.L74:
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     else
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* Check the HSI ready flag */
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 961              		.loc 1 661 0
 962 00ce 3B4B     		ldr	r3, .L81+4
 963 00d0 1B68     		ldr	r3, [r3]
 964 00d2 03F00203 		and	r3, r3, #2
 965 00d6 002B     		cmp	r3, #0
 966 00d8 01D1     		bne	.L72
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_ERROR;
 967              		.loc 1 663 0
 968 00da 0123     		movs	r3, #1
 969 00dc 67E0     		b	.L65
 970              	.L72:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
ARM GAS  /tmp/ccQgLWi2.s 			page 30


 971              		.loc 1 667 0
 972 00de 374B     		ldr	r3, .L81+4
 973 00e0 9B68     		ldr	r3, [r3, #8]
 974 00e2 23F00302 		bic	r2, r3, #3
 975 00e6 7B68     		ldr	r3, [r7, #4]
 976 00e8 5B68     		ldr	r3, [r3, #4]
 977 00ea 3449     		ldr	r1, .L81+4
 978 00ec 1343     		orrs	r3, r3, r2
 979 00ee 8B60     		str	r3, [r1, #8]
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Get Start Tick */
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 980              		.loc 1 670 0
 981 00f0 FFF7FEFF 		bl	HAL_GetTick
 982 00f4 F860     		str	r0, [r7, #12]
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 983              		.loc 1 672 0
 984 00f6 0AE0     		b	.L76
 985              	.L77:
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 986              		.loc 1 674 0
 987 00f8 FFF7FEFF 		bl	HAL_GetTick
 988 00fc 0246     		mov	r2, r0
 989 00fe FB68     		ldr	r3, [r7, #12]
 990 0100 D31A     		subs	r3, r2, r3
 991 0102 41F28832 		movw	r2, #5000
 992 0106 9342     		cmp	r3, r2
 993 0108 01D9     		bls	.L76
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 994              		.loc 1 676 0
 995 010a 0323     		movs	r3, #3
 996 010c 4FE0     		b	.L65
 997              	.L76:
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 998              		.loc 1 672 0
 999 010e 2B4B     		ldr	r3, .L81+4
 1000 0110 9B68     		ldr	r3, [r3, #8]
 1001 0112 03F00C02 		and	r2, r3, #12
 1002 0116 7B68     		ldr	r3, [r7, #4]
 1003 0118 5B68     		ldr	r3, [r3, #4]
 1004 011a 9B00     		lsls	r3, r3, #2
 1005 011c 9A42     		cmp	r2, r3
 1006 011e EBD1     		bne	.L77
 1007              	.L70:
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 1008              		.loc 1 682 0
 1009 0120 254B     		ldr	r3, .L81
 1010 0122 1B68     		ldr	r3, [r3]
 1011 0124 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccQgLWi2.s 			page 31


 1012 0128 3A68     		ldr	r2, [r7]
 1013 012a 9A42     		cmp	r2, r3
 1014 012c 0CD2     		bcs	.L78
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1015              		.loc 1 685 0
 1016 012e 224B     		ldr	r3, .L81
 1017 0130 3A68     		ldr	r2, [r7]
 1018 0132 D2B2     		uxtb	r2, r2
 1019 0134 1A70     		strb	r2, [r3]
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 1020              		.loc 1 689 0
 1021 0136 204B     		ldr	r3, .L81
 1022 0138 1B68     		ldr	r3, [r3]
 1023 013a 03F00F03 		and	r3, r3, #15
 1024 013e 3A68     		ldr	r2, [r7]
 1025 0140 9A42     		cmp	r2, r3
 1026 0142 01D0     		beq	.L78
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       return HAL_ERROR;
 1027              		.loc 1 691 0
 1028 0144 0123     		movs	r3, #1
 1029 0146 32E0     		b	.L65
 1030              	.L78:
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1031              		.loc 1 696 0
 1032 0148 7B68     		ldr	r3, [r7, #4]
 1033 014a 1B68     		ldr	r3, [r3]
 1034 014c 03F00403 		and	r3, r3, #4
 1035 0150 002B     		cmp	r3, #0
 1036 0152 08D0     		beq	.L79
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1037              		.loc 1 699 0
 1038 0154 194B     		ldr	r3, .L81+4
 1039 0156 9B68     		ldr	r3, [r3, #8]
 1040 0158 23F4E052 		bic	r2, r3, #7168
 1041 015c 7B68     		ldr	r3, [r7, #4]
 1042 015e DB68     		ldr	r3, [r3, #12]
 1043 0160 1649     		ldr	r1, .L81+4
 1044 0162 1343     		orrs	r3, r3, r2
 1045 0164 8B60     		str	r3, [r1, #8]
 1046              	.L79:
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1047              		.loc 1 703 0
ARM GAS  /tmp/ccQgLWi2.s 			page 32


 1048 0166 7B68     		ldr	r3, [r7, #4]
 1049 0168 1B68     		ldr	r3, [r3]
 1050 016a 03F00803 		and	r3, r3, #8
 1051 016e 002B     		cmp	r3, #0
 1052 0170 09D0     		beq	.L80
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1053              		.loc 1 706 0
 1054 0172 124B     		ldr	r3, .L81+4
 1055 0174 9B68     		ldr	r3, [r3, #8]
 1056 0176 23F46042 		bic	r2, r3, #57344
 1057 017a 7B68     		ldr	r3, [r7, #4]
 1058 017c 1B69     		ldr	r3, [r3, #16]
 1059 017e DB00     		lsls	r3, r3, #3
 1060 0180 0E49     		ldr	r1, .L81+4
 1061 0182 1343     		orrs	r3, r3, r2
 1062 0184 8B60     		str	r3, [r1, #8]
 1063              	.L80:
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1064              		.loc 1 710 0
 1065 0186 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1066 018a 0146     		mov	r1, r0
 1067 018c 0B4B     		ldr	r3, .L81+4
 1068 018e 9B68     		ldr	r3, [r3, #8]
 1069 0190 1B09     		lsrs	r3, r3, #4
 1070 0192 03F00F03 		and	r3, r3, #15
 1071 0196 0A4A     		ldr	r2, .L81+8
 1072 0198 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1073 019a 21FA03F3 		lsr	r3, r1, r3
 1074 019e 094A     		ldr	r2, .L81+12
 1075 01a0 1360     		str	r3, [r2]
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 1076              		.loc 1 713 0
 1077 01a2 094B     		ldr	r3, .L81+16
 1078 01a4 1B68     		ldr	r3, [r3]
 1079 01a6 1846     		mov	r0, r3
 1080 01a8 FFF7FEFF 		bl	HAL_InitTick
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return HAL_OK;
 1081              		.loc 1 715 0
 1082 01ac 0023     		movs	r3, #0
 1083              	.L65:
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1084              		.loc 1 716 0
 1085 01ae 1846     		mov	r0, r3
 1086 01b0 1037     		adds	r7, r7, #16
 1087              	.LCFI12:
 1088              		.cfi_def_cfa_offset 8
 1089 01b2 BD46     		mov	sp, r7
 1090              	.LCFI13:
 1091              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccQgLWi2.s 			page 33


 1092              		@ sp needed
 1093 01b4 80BD     		pop	{r7, pc}
 1094              	.L82:
 1095 01b6 00BF     		.align	2
 1096              	.L81:
 1097 01b8 003C0240 		.word	1073888256
 1098 01bc 00380240 		.word	1073887232
 1099 01c0 00000000 		.word	AHBPrescTable
 1100 01c4 00000000 		.word	SystemCoreClock
 1101 01c8 00000000 		.word	uwTickPrio
 1102              		.cfi_endproc
 1103              	.LFE132:
 1105              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1106              		.align	1
 1107              		.global	HAL_RCC_MCOConfig
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1111              		.fpu fpv4-sp-d16
 1113              	HAL_RCC_MCOConfig:
 1114              	.LFB133:
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @}
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  *
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @verbatim
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****  ===============================================================================
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     [..]
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     frequencies.
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** @endverbatim
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @{
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source, available for a
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_I2SCLK: I2SCLK clock selected as MCO2 source, available only for
ARM GAS  /tmp/ccQgLWi2.s 			page 34


 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note  For STM32F410Rx devices to output I2SCLK clock on MCO2 you should have
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *        at last one of the SPI clocks enabled (SPI1, SPI2 or SPI5).
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1115              		.loc 1 767 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 48
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119 0000 80B5     		push	{r7, lr}
 1120              	.LCFI14:
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 8CB0     		sub	sp, sp, #48
 1125              	.LCFI15:
 1126              		.cfi_def_cfa_offset 56
 1127 0004 00AF     		add	r7, sp, #0
 1128              	.LCFI16:
 1129              		.cfi_def_cfa_register 7
 1130 0006 F860     		str	r0, [r7, #12]
 1131 0008 B960     		str	r1, [r7, #8]
 1132 000a 7A60     		str	r2, [r7, #4]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check the parameters */
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* RCC_MCO1 */
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1133              		.loc 1 773 0
 1134 000c FB68     		ldr	r3, [r7, #12]
 1135 000e 002B     		cmp	r3, #0
 1136 0010 29D1     		bne	.L84
 1137              	.LBB4:
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1138              		.loc 1 778 0
 1139 0012 0023     		movs	r3, #0
 1140 0014 BB61     		str	r3, [r7, #24]
 1141 0016 2B4B     		ldr	r3, .L87
 1142 0018 1B6B     		ldr	r3, [r3, #48]
 1143 001a 2A4A     		ldr	r2, .L87
 1144 001c 43F00103 		orr	r3, r3, #1
 1145 0020 1363     		str	r3, [r2, #48]
ARM GAS  /tmp/ccQgLWi2.s 			page 35


 1146 0022 284B     		ldr	r3, .L87
 1147 0024 1B6B     		ldr	r3, [r3, #48]
 1148 0026 03F00103 		and	r3, r3, #1
 1149 002a BB61     		str	r3, [r7, #24]
 1150 002c BB69     		ldr	r3, [r7, #24]
 1151              	.LBE4:
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1152              		.loc 1 781 0
 1153 002e 4FF48073 		mov	r3, #256
 1154 0032 FB61     		str	r3, [r7, #28]
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1155              		.loc 1 782 0
 1156 0034 0223     		movs	r3, #2
 1157 0036 3B62     		str	r3, [r7, #32]
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1158              		.loc 1 783 0
 1159 0038 0323     		movs	r3, #3
 1160 003a BB62     		str	r3, [r7, #40]
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1161              		.loc 1 784 0
 1162 003c 0023     		movs	r3, #0
 1163 003e 7B62     		str	r3, [r7, #36]
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1164              		.loc 1 785 0
 1165 0040 0023     		movs	r3, #0
 1166 0042 FB62     		str	r3, [r7, #44]
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1167              		.loc 1 786 0
 1168 0044 07F11C03 		add	r3, r7, #28
 1169 0048 1946     		mov	r1, r3
 1170 004a 1F48     		ldr	r0, .L87+4
 1171 004c FFF7FEFF 		bl	HAL_GPIO_Init
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1172              		.loc 1 789 0
 1173 0050 1C4B     		ldr	r3, .L87
 1174 0052 9B68     		ldr	r3, [r3, #8]
 1175 0054 23F0EC62 		bic	r2, r3, #123731968
 1176 0058 B968     		ldr	r1, [r7, #8]
 1177 005a 7B68     		ldr	r3, [r7, #4]
 1178 005c 0B43     		orrs	r3, r3, r1
 1179 005e 1949     		ldr	r1, .L87
 1180 0060 1343     		orrs	r3, r3, r2
 1181 0062 8B60     		str	r3, [r1, #8]
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO1 enable feature is available only on STM32F410xx devices */
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO1EN)
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO1_ENABLE();
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO1EN */
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2)
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
ARM GAS  /tmp/ccQgLWi2.s 			page 36


 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    /* This RCC MCO2 enable feature is available only on STM32F410Rx devices */
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #if defined(RCC_CFGR_MCO2EN)
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_MCO2_ENABLE();
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2EN */
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** #endif /* RCC_CFGR_MCO2 */
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1182              		.loc 1 821 0
 1183 0064 29E0     		b	.L86
 1184              	.L84:
 1185              	.LBB5:
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1186              		.loc 1 802 0
 1187 0066 0023     		movs	r3, #0
 1188 0068 7B61     		str	r3, [r7, #20]
 1189 006a 164B     		ldr	r3, .L87
 1190 006c 1B6B     		ldr	r3, [r3, #48]
 1191 006e 154A     		ldr	r2, .L87
 1192 0070 43F00403 		orr	r3, r3, #4
 1193 0074 1363     		str	r3, [r2, #48]
 1194 0076 134B     		ldr	r3, .L87
 1195 0078 1B6B     		ldr	r3, [r3, #48]
 1196 007a 03F00403 		and	r3, r3, #4
 1197 007e 7B61     		str	r3, [r7, #20]
 1198 0080 7B69     		ldr	r3, [r7, #20]
 1199              	.LBE5:
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1200              		.loc 1 805 0
 1201 0082 4FF40073 		mov	r3, #512
 1202 0086 FB61     		str	r3, [r7, #28]
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1203              		.loc 1 806 0
 1204 0088 0223     		movs	r3, #2
 1205 008a 3B62     		str	r3, [r7, #32]
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1206              		.loc 1 807 0
 1207 008c 0323     		movs	r3, #3
 1208 008e BB62     		str	r3, [r7, #40]
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1209              		.loc 1 808 0
 1210 0090 0023     		movs	r3, #0
 1211 0092 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/ccQgLWi2.s 			page 37


 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1212              		.loc 1 809 0
 1213 0094 0023     		movs	r3, #0
 1214 0096 FB62     		str	r3, [r7, #44]
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1215              		.loc 1 810 0
 1216 0098 07F11C03 		add	r3, r7, #28
 1217 009c 1946     		mov	r1, r3
 1218 009e 0B48     		ldr	r0, .L87+8
 1219 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 1220              		.loc 1 813 0
 1221 00a4 074B     		ldr	r3, .L87
 1222 00a6 9B68     		ldr	r3, [r3, #8]
 1223 00a8 23F07842 		bic	r2, r3, #-134217728
 1224 00ac 7B68     		ldr	r3, [r7, #4]
 1225 00ae D900     		lsls	r1, r3, #3
 1226 00b0 BB68     		ldr	r3, [r7, #8]
 1227 00b2 0B43     		orrs	r3, r3, r1
 1228 00b4 0349     		ldr	r1, .L87
 1229 00b6 1343     		orrs	r3, r3, r2
 1230 00b8 8B60     		str	r3, [r1, #8]
 1231              	.L86:
 1232              		.loc 1 821 0
 1233 00ba 00BF     		nop
 1234 00bc 3037     		adds	r7, r7, #48
 1235              	.LCFI17:
 1236              		.cfi_def_cfa_offset 8
 1237 00be BD46     		mov	sp, r7
 1238              	.LCFI18:
 1239              		.cfi_def_cfa_register 13
 1240              		@ sp needed
 1241 00c0 80BD     		pop	{r7, pc}
 1242              	.L88:
 1243 00c2 00BF     		.align	2
 1244              	.L87:
 1245 00c4 00380240 		.word	1073887232
 1246 00c8 00000240 		.word	1073872896
 1247 00cc 00080240 		.word	1073874944
 1248              		.cfi_endproc
 1249              	.LFE133:
 1251              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1252              		.align	1
 1253              		.global	HAL_RCC_EnableCSS
 1254              		.syntax unified
 1255              		.thumb
 1256              		.thumb_func
 1257              		.fpu fpv4-sp-d16
 1259              	HAL_RCC_EnableCSS:
 1260              	.LFB134:
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
ARM GAS  /tmp/ccQgLWi2.s 			page 38


 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1261              		.loc 1 833 0
 1262              		.cfi_startproc
 1263              		@ args = 0, pretend = 0, frame = 0
 1264              		@ frame_needed = 1, uses_anonymous_args = 0
 1265              		@ link register save eliminated.
 1266 0000 80B4     		push	{r7}
 1267              	.LCFI19:
 1268              		.cfi_def_cfa_offset 4
 1269              		.cfi_offset 7, -4
 1270 0002 00AF     		add	r7, sp, #0
 1271              	.LCFI20:
 1272              		.cfi_def_cfa_register 7
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1273              		.loc 1 834 0
 1274 0004 034B     		ldr	r3, .L90
 1275 0006 0122     		movs	r2, #1
 1276 0008 1A60     		str	r2, [r3]
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1277              		.loc 1 835 0
 1278 000a 00BF     		nop
 1279 000c BD46     		mov	sp, r7
 1280              	.LCFI21:
 1281              		.cfi_def_cfa_register 13
 1282              		@ sp needed
 1283 000e 5DF8047B 		ldr	r7, [sp], #4
 1284              	.LCFI22:
 1285              		.cfi_restore 7
 1286              		.cfi_def_cfa_offset 0
 1287 0012 7047     		bx	lr
 1288              	.L91:
 1289              		.align	2
 1290              	.L90:
 1291 0014 4C004742 		.word	1111949388
 1292              		.cfi_endproc
 1293              	.LFE134:
 1295              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1296              		.align	1
 1297              		.global	HAL_RCC_DisableCSS
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1301              		.fpu fpv4-sp-d16
 1303              	HAL_RCC_DisableCSS:
 1304              	.LFB135:
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1305              		.loc 1 842 0
ARM GAS  /tmp/ccQgLWi2.s 			page 39


 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 1, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310 0000 80B4     		push	{r7}
 1311              	.LCFI23:
 1312              		.cfi_def_cfa_offset 4
 1313              		.cfi_offset 7, -4
 1314 0002 00AF     		add	r7, sp, #0
 1315              	.LCFI24:
 1316              		.cfi_def_cfa_register 7
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1317              		.loc 1 843 0
 1318 0004 034B     		ldr	r3, .L93
 1319 0006 0022     		movs	r2, #0
 1320 0008 1A60     		str	r2, [r3]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1321              		.loc 1 844 0
 1322 000a 00BF     		nop
 1323 000c BD46     		mov	sp, r7
 1324              	.LCFI25:
 1325              		.cfi_def_cfa_register 13
 1326              		@ sp needed
 1327 000e 5DF8047B 		ldr	r7, [sp], #4
 1328              	.LCFI26:
 1329              		.cfi_restore 7
 1330              		.cfi_def_cfa_offset 0
 1331 0012 7047     		bx	lr
 1332              	.L94:
 1333              		.align	2
 1334              	.L93:
 1335 0014 4C004742 		.word	1111949388
 1336              		.cfi_endproc
 1337              	.LFE135:
 1339              		.global	__aeabi_uldivmod
 1340              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1341              		.align	1
 1342              		.weak	HAL_RCC_GetSysClockFreq
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv4-sp-d16
 1348              	HAL_RCC_GetSysClockFreq:
 1349              	.LFB136:
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         constant and the selected clock source:
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
ARM GAS  /tmp/ccQgLWi2.s 			page 40


 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *               in voltage and temperature.
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *                have wrong result.
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         value for HSE crystal.
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval SYSCLK frequency
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak uint32_t HAL_RCC_GetSysClockFreq(void)
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1350              		.loc 1 877 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 16
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1355              	.LCFI27:
 1356              		.cfi_def_cfa_offset 20
 1357              		.cfi_offset 4, -20
 1358              		.cfi_offset 5, -16
 1359              		.cfi_offset 6, -12
 1360              		.cfi_offset 7, -8
 1361              		.cfi_offset 14, -4
 1362 0002 85B0     		sub	sp, sp, #20
 1363              	.LCFI28:
 1364              		.cfi_def_cfa_offset 40
 1365 0004 00AF     		add	r7, sp, #0
 1366              	.LCFI29:
 1367              		.cfi_def_cfa_register 7
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1368              		.loc 1 878 0
 1369 0006 0023     		movs	r3, #0
 1370 0008 7B60     		str	r3, [r7, #4]
 1371 000a 0023     		movs	r3, #0
 1372 000c FB60     		str	r3, [r7, #12]
 1373 000e 0023     		movs	r3, #0
 1374 0010 3B60     		str	r3, [r7]
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1375              		.loc 1 879 0
 1376 0012 0023     		movs	r3, #0
 1377 0014 BB60     		str	r3, [r7, #8]
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1378              		.loc 1 882 0
 1379 0016 634B     		ldr	r3, .L105
 1380 0018 9B68     		ldr	r3, [r3, #8]
 1381 001a 03F00C03 		and	r3, r3, #12
ARM GAS  /tmp/ccQgLWi2.s 			page 41


 1382 001e 042B     		cmp	r3, #4
 1383 0020 07D0     		beq	.L97
 1384 0022 082B     		cmp	r3, #8
 1385 0024 08D0     		beq	.L98
 1386 0026 002B     		cmp	r3, #0
 1387 0028 40F0B480 		bne	.L104
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1388              		.loc 1 886 0
 1389 002c 5E4B     		ldr	r3, .L105+4
 1390 002e BB60     		str	r3, [r7, #8]
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****        break;
 1391              		.loc 1 887 0
 1392 0030 B3E0     		b	.L100
 1393              	.L97:
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1394              		.loc 1 891 0
 1395 0032 5E4B     		ldr	r3, .L105+8
 1396 0034 BB60     		str	r3, [r7, #8]
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1397              		.loc 1 892 0
 1398 0036 B0E0     		b	.L100
 1399              	.L98:
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1400              		.loc 1 898 0
 1401 0038 5A4B     		ldr	r3, .L105
 1402 003a 5B68     		ldr	r3, [r3, #4]
 1403 003c 03F03F03 		and	r3, r3, #63
 1404 0040 7B60     		str	r3, [r7, #4]
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1405              		.loc 1 899 0
 1406 0042 584B     		ldr	r3, .L105
 1407 0044 5B68     		ldr	r3, [r3, #4]
 1408 0046 03F48003 		and	r3, r3, #4194304
 1409 004a 002B     		cmp	r3, #0
 1410 004c 4AD0     		beq	.L101
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSE used as PLL clock source */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1411              		.loc 1 902 0
 1412 004e 554B     		ldr	r3, .L105
 1413 0050 5B68     		ldr	r3, [r3, #4]
 1414 0052 9B09     		lsrs	r3, r3, #6
 1415 0054 4FF00004 		mov	r4, #0
 1416 0058 40F2FF11 		movw	r1, #511
 1417 005c 4FF00002 		mov	r2, #0
 1418 0060 03EA0105 		and	r5, r3, r1
ARM GAS  /tmp/ccQgLWi2.s 			page 42


 1419 0064 04EA0206 		and	r6, r4, r2
 1420 0068 2946     		mov	r1, r5
 1421 006a 3246     		mov	r2, r6
 1422 006c 4FF00003 		mov	r3, #0
 1423 0070 4FF00004 		mov	r4, #0
 1424 0074 5401     		lsls	r4, r2, #5
 1425 0076 44EAD164 		orr	r4, r4, r1, lsr #27
 1426 007a 4B01     		lsls	r3, r1, #5
 1427 007c 1946     		mov	r1, r3
 1428 007e 2246     		mov	r2, r4
 1429 0080 491B     		subs	r1, r1, r5
 1430 0082 62EB0602 		sbc	r2, r2, r6
 1431 0086 4FF00003 		mov	r3, #0
 1432 008a 4FF00004 		mov	r4, #0
 1433 008e 9401     		lsls	r4, r2, #6
 1434 0090 44EA9164 		orr	r4, r4, r1, lsr #26
 1435 0094 8B01     		lsls	r3, r1, #6
 1436 0096 5B1A     		subs	r3, r3, r1
 1437 0098 64EB0204 		sbc	r4, r4, r2
 1438 009c 4FF00001 		mov	r1, #0
 1439 00a0 4FF00002 		mov	r2, #0
 1440 00a4 E200     		lsls	r2, r4, #3
 1441 00a6 42EA5372 		orr	r2, r2, r3, lsr #29
 1442 00aa D900     		lsls	r1, r3, #3
 1443 00ac 0B46     		mov	r3, r1
 1444 00ae 1446     		mov	r4, r2
 1445 00b0 5B19     		adds	r3, r3, r5
 1446 00b2 44EB0604 		adc	r4, r4, r6
 1447 00b6 4FF00001 		mov	r1, #0
 1448 00ba 4FF00002 		mov	r2, #0
 1449 00be 6202     		lsls	r2, r4, #9
 1450 00c0 42EAD352 		orr	r2, r2, r3, lsr #23
 1451 00c4 5902     		lsls	r1, r3, #9
 1452 00c6 0B46     		mov	r3, r1
 1453 00c8 1446     		mov	r4, r2
 1454 00ca 1846     		mov	r0, r3
 1455 00cc 2146     		mov	r1, r4
 1456 00ce 7B68     		ldr	r3, [r7, #4]
 1457 00d0 4FF00004 		mov	r4, #0
 1458 00d4 1A46     		mov	r2, r3
 1459 00d6 2346     		mov	r3, r4
 1460 00d8 FFF7FEFF 		bl	__aeabi_uldivmod
 1461              	.LVL0:
 1462 00dc 0346     		mov	r3, r0
 1463 00de 0C46     		mov	r4, r1
 1464 00e0 FB60     		str	r3, [r7, #12]
 1465 00e2 49E0     		b	.L102
 1466              	.L101:
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       else
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       {
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         /* HSI used as PLL clock source */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1467              		.loc 1 907 0
 1468 00e4 2F4B     		ldr	r3, .L105
 1469 00e6 5B68     		ldr	r3, [r3, #4]
 1470 00e8 9B09     		lsrs	r3, r3, #6
ARM GAS  /tmp/ccQgLWi2.s 			page 43


 1471 00ea 4FF00004 		mov	r4, #0
 1472 00ee 40F2FF11 		movw	r1, #511
 1473 00f2 4FF00002 		mov	r2, #0
 1474 00f6 03EA0105 		and	r5, r3, r1
 1475 00fa 04EA0206 		and	r6, r4, r2
 1476 00fe 2946     		mov	r1, r5
 1477 0100 3246     		mov	r2, r6
 1478 0102 4FF00003 		mov	r3, #0
 1479 0106 4FF00004 		mov	r4, #0
 1480 010a 5401     		lsls	r4, r2, #5
 1481 010c 44EAD164 		orr	r4, r4, r1, lsr #27
 1482 0110 4B01     		lsls	r3, r1, #5
 1483 0112 1946     		mov	r1, r3
 1484 0114 2246     		mov	r2, r4
 1485 0116 491B     		subs	r1, r1, r5
 1486 0118 62EB0602 		sbc	r2, r2, r6
 1487 011c 4FF00003 		mov	r3, #0
 1488 0120 4FF00004 		mov	r4, #0
 1489 0124 9401     		lsls	r4, r2, #6
 1490 0126 44EA9164 		orr	r4, r4, r1, lsr #26
 1491 012a 8B01     		lsls	r3, r1, #6
 1492 012c 5B1A     		subs	r3, r3, r1
 1493 012e 64EB0204 		sbc	r4, r4, r2
 1494 0132 4FF00001 		mov	r1, #0
 1495 0136 4FF00002 		mov	r2, #0
 1496 013a E200     		lsls	r2, r4, #3
 1497 013c 42EA5372 		orr	r2, r2, r3, lsr #29
 1498 0140 D900     		lsls	r1, r3, #3
 1499 0142 0B46     		mov	r3, r1
 1500 0144 1446     		mov	r4, r2
 1501 0146 5B19     		adds	r3, r3, r5
 1502 0148 44EB0604 		adc	r4, r4, r6
 1503 014c 4FF00001 		mov	r1, #0
 1504 0150 4FF00002 		mov	r2, #0
 1505 0154 A202     		lsls	r2, r4, #10
 1506 0156 42EA9352 		orr	r2, r2, r3, lsr #22
 1507 015a 9902     		lsls	r1, r3, #10
 1508 015c 0B46     		mov	r3, r1
 1509 015e 1446     		mov	r4, r2
 1510 0160 1846     		mov	r0, r3
 1511 0162 2146     		mov	r1, r4
 1512 0164 7B68     		ldr	r3, [r7, #4]
 1513 0166 4FF00004 		mov	r4, #0
 1514 016a 1A46     		mov	r2, r3
 1515 016c 2346     		mov	r3, r4
 1516 016e FFF7FEFF 		bl	__aeabi_uldivmod
 1517              	.LVL1:
 1518 0172 0346     		mov	r3, r0
 1519 0174 0C46     		mov	r4, r1
 1520 0176 FB60     		str	r3, [r7, #12]
 1521              	.L102:
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       }
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1522              		.loc 1 909 0
 1523 0178 0A4B     		ldr	r3, .L105
 1524 017a 5B68     		ldr	r3, [r3, #4]
 1525 017c 1B0C     		lsrs	r3, r3, #16
ARM GAS  /tmp/ccQgLWi2.s 			page 44


 1526 017e 03F00303 		and	r3, r3, #3
 1527 0182 0133     		adds	r3, r3, #1
 1528 0184 5B00     		lsls	r3, r3, #1
 1529 0186 3B60     		str	r3, [r7]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1530              		.loc 1 911 0
 1531 0188 FA68     		ldr	r2, [r7, #12]
 1532 018a 3B68     		ldr	r3, [r7]
 1533 018c B2FBF3F3 		udiv	r3, r2, r3
 1534 0190 BB60     		str	r3, [r7, #8]
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1535              		.loc 1 912 0
 1536 0192 02E0     		b	.L100
 1537              	.L104:
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     default:
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     {
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1538              		.loc 1 916 0
 1539 0194 044B     		ldr	r3, .L105+4
 1540 0196 BB60     		str	r3, [r7, #8]
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****       break;
 1541              		.loc 1 917 0
 1542 0198 00BF     		nop
 1543              	.L100:
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     }
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return sysclockfreq;
 1544              		.loc 1 920 0
 1545 019a BB68     		ldr	r3, [r7, #8]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1546              		.loc 1 921 0
 1547 019c 1846     		mov	r0, r3
 1548 019e 1437     		adds	r7, r7, #20
 1549              	.LCFI30:
 1550              		.cfi_def_cfa_offset 20
 1551 01a0 BD46     		mov	sp, r7
 1552              	.LCFI31:
 1553              		.cfi_def_cfa_register 13
 1554              		@ sp needed
 1555 01a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1556              	.L106:
 1557              		.align	2
 1558              	.L105:
 1559 01a4 00380240 		.word	1073887232
 1560 01a8 0024F400 		.word	16000000
 1561 01ac 00127A00 		.word	8000000
 1562              		.cfi_endproc
 1563              	.LFE136:
 1565              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1566              		.align	1
 1567              		.global	HAL_RCC_GetHCLKFreq
 1568              		.syntax unified
 1569              		.thumb
 1570              		.thumb_func
 1571              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccQgLWi2.s 			page 45


 1573              	HAL_RCC_GetHCLKFreq:
 1574              	.LFB137:
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         and updated within this function
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval HCLK frequency
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1575              		.loc 1 933 0
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 0
 1578              		@ frame_needed = 1, uses_anonymous_args = 0
 1579              		@ link register save eliminated.
 1580 0000 80B4     		push	{r7}
 1581              	.LCFI32:
 1582              		.cfi_def_cfa_offset 4
 1583              		.cfi_offset 7, -4
 1584 0002 00AF     		add	r7, sp, #0
 1585              	.LCFI33:
 1586              		.cfi_def_cfa_register 7
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return SystemCoreClock;
 1587              		.loc 1 934 0
 1588 0004 034B     		ldr	r3, .L109
 1589 0006 1B68     		ldr	r3, [r3]
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1590              		.loc 1 935 0
 1591 0008 1846     		mov	r0, r3
 1592 000a BD46     		mov	sp, r7
 1593              	.LCFI34:
 1594              		.cfi_def_cfa_register 13
 1595              		@ sp needed
 1596 000c 5DF8047B 		ldr	r7, [sp], #4
 1597              	.LCFI35:
 1598              		.cfi_restore 7
 1599              		.cfi_def_cfa_offset 0
 1600 0010 7047     		bx	lr
 1601              	.L110:
 1602 0012 00BF     		.align	2
 1603              	.L109:
 1604 0014 00000000 		.word	SystemCoreClock
 1605              		.cfi_endproc
 1606              	.LFE137:
 1608              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1609              		.align	1
 1610              		.global	HAL_RCC_GetPCLK1Freq
 1611              		.syntax unified
 1612              		.thumb
 1613              		.thumb_func
 1614              		.fpu fpv4-sp-d16
 1616              	HAL_RCC_GetPCLK1Freq:
 1617              	.LFB138:
ARM GAS  /tmp/ccQgLWi2.s 			page 46


 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK1 frequency
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1618              		.loc 1 944 0
 1619              		.cfi_startproc
 1620              		@ args = 0, pretend = 0, frame = 0
 1621              		@ frame_needed = 1, uses_anonymous_args = 0
 1622 0000 80B5     		push	{r7, lr}
 1623              	.LCFI36:
 1624              		.cfi_def_cfa_offset 8
 1625              		.cfi_offset 7, -8
 1626              		.cfi_offset 14, -4
 1627 0002 00AF     		add	r7, sp, #0
 1628              	.LCFI37:
 1629              		.cfi_def_cfa_register 7
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]
 1630              		.loc 1 946 0
 1631 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1632 0008 0146     		mov	r1, r0
 1633 000a 054B     		ldr	r3, .L113
 1634 000c 9B68     		ldr	r3, [r3, #8]
 1635 000e 9B0A     		lsrs	r3, r3, #10
 1636 0010 03F00703 		and	r3, r3, #7
 1637 0014 034A     		ldr	r2, .L113+4
 1638 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1639 0018 21FA03F3 		lsr	r3, r1, r3
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1640              		.loc 1 947 0
 1641 001c 1846     		mov	r0, r3
 1642 001e 80BD     		pop	{r7, pc}
 1643              	.L114:
 1644              		.align	2
 1645              	.L113:
 1646 0020 00380240 		.word	1073887232
 1647 0024 00000000 		.word	APBPrescTable
 1648              		.cfi_endproc
 1649              	.LFE138:
 1651              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1652              		.align	1
 1653              		.global	HAL_RCC_GetPCLK2Freq
 1654              		.syntax unified
 1655              		.thumb
 1656              		.thumb_func
 1657              		.fpu fpv4-sp-d16
 1659              	HAL_RCC_GetPCLK2Freq:
 1660              	.LFB139:
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
ARM GAS  /tmp/ccQgLWi2.s 			page 47


 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval PCLK2 frequency
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1661              		.loc 1 956 0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 0
 1664              		@ frame_needed = 1, uses_anonymous_args = 0
 1665 0000 80B5     		push	{r7, lr}
 1666              	.LCFI38:
 1667              		.cfi_def_cfa_offset 8
 1668              		.cfi_offset 7, -8
 1669              		.cfi_offset 14, -4
 1670 0002 00AF     		add	r7, sp, #0
 1671              	.LCFI39:
 1672              		.cfi_def_cfa_register 7
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos])
 1673              		.loc 1 958 0
 1674 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1675 0008 0146     		mov	r1, r0
 1676 000a 054B     		ldr	r3, .L117
 1677 000c 9B68     		ldr	r3, [r3, #8]
 1678 000e 5B0B     		lsrs	r3, r3, #13
 1679 0010 03F00703 		and	r3, r3, #7
 1680 0014 034A     		ldr	r2, .L117+4
 1681 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1682 0018 21FA03F3 		lsr	r3, r1, r3
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1683              		.loc 1 959 0
 1684 001c 1846     		mov	r0, r3
 1685 001e 80BD     		pop	{r7, pc}
 1686              	.L118:
 1687              		.align	2
 1688              	.L117:
 1689 0020 00380240 		.word	1073887232
 1690 0024 00000000 		.word	APBPrescTable
 1691              		.cfi_endproc
 1692              	.LFE139:
 1694              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1695              		.align	1
 1696              		.weak	HAL_RCC_GetOscConfig
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1700              		.fpu fpv4-sp-d16
 1702              	HAL_RCC_GetOscConfig:
 1703              	.LFB140:
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccQgLWi2.s 			page 48


 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1704              		.loc 1 969 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 8
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708              		@ link register save eliminated.
 1709 0000 80B4     		push	{r7}
 1710              	.LCFI40:
 1711              		.cfi_def_cfa_offset 4
 1712              		.cfi_offset 7, -4
 1713 0002 83B0     		sub	sp, sp, #12
 1714              	.LCFI41:
 1715              		.cfi_def_cfa_offset 16
 1716 0004 00AF     		add	r7, sp, #0
 1717              	.LCFI42:
 1718              		.cfi_def_cfa_register 7
 1719 0006 7860     		str	r0, [r7, #4]
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1720              		.loc 1 971 0
 1721 0008 7B68     		ldr	r3, [r7, #4]
 1722 000a 0F22     		movs	r2, #15
 1723 000c 1A60     		str	r2, [r3]
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1724              		.loc 1 974 0
 1725 000e 454B     		ldr	r3, .L132
 1726 0010 1B68     		ldr	r3, [r3]
 1727 0012 03F48023 		and	r3, r3, #262144
 1728 0016 B3F5802F 		cmp	r3, #262144
 1729 001a 04D1     		bne	.L120
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1730              		.loc 1 976 0
 1731 001c 7B68     		ldr	r3, [r7, #4]
 1732 001e 4FF4A022 		mov	r2, #327680
 1733 0022 5A60     		str	r2, [r3, #4]
 1734 0024 0EE0     		b	.L121
 1735              	.L120:
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1736              		.loc 1 978 0
 1737 0026 3F4B     		ldr	r3, .L132
 1738 0028 1B68     		ldr	r3, [r3]
 1739 002a 03F48033 		and	r3, r3, #65536
 1740 002e B3F5803F 		cmp	r3, #65536
 1741 0032 04D1     		bne	.L122
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1742              		.loc 1 980 0
 1743 0034 7B68     		ldr	r3, [r7, #4]
 1744 0036 4FF48032 		mov	r2, #65536
 1745 003a 5A60     		str	r2, [r3, #4]
 1746 003c 02E0     		b	.L121
 1747              	.L122:
ARM GAS  /tmp/ccQgLWi2.s 			page 49


 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1748              		.loc 1 984 0
 1749 003e 7B68     		ldr	r3, [r7, #4]
 1750 0040 0022     		movs	r2, #0
 1751 0042 5A60     		str	r2, [r3, #4]
 1752              	.L121:
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1753              		.loc 1 988 0
 1754 0044 374B     		ldr	r3, .L132
 1755 0046 1B68     		ldr	r3, [r3]
 1756 0048 03F00103 		and	r3, r3, #1
 1757 004c 012B     		cmp	r3, #1
 1758 004e 03D1     		bne	.L123
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1759              		.loc 1 990 0
 1760 0050 7B68     		ldr	r3, [r7, #4]
 1761 0052 0122     		movs	r2, #1
 1762 0054 DA60     		str	r2, [r3, #12]
 1763 0056 02E0     		b	.L124
 1764              	.L123:
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1765              		.loc 1 994 0
 1766 0058 7B68     		ldr	r3, [r7, #4]
 1767 005a 0022     		movs	r2, #0
 1768 005c DA60     		str	r2, [r3, #12]
 1769              	.L124:
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_P
 1770              		.loc 1 997 0
 1771 005e 314B     		ldr	r3, .L132
 1772 0060 1B68     		ldr	r3, [r3]
 1773 0062 DB08     		lsrs	r3, r3, #3
 1774 0064 03F01F02 		and	r2, r3, #31
 1775 0068 7B68     		ldr	r3, [r7, #4]
 1776 006a 1A61     		str	r2, [r3, #16]
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1777              		.loc 1 1000 0
 1778 006c 2D4B     		ldr	r3, .L132
 1779 006e 1B6F     		ldr	r3, [r3, #112]
 1780 0070 03F00403 		and	r3, r3, #4
 1781 0074 042B     		cmp	r3, #4
 1782 0076 03D1     		bne	.L125
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
ARM GAS  /tmp/ccQgLWi2.s 			page 50


 1783              		.loc 1 1002 0
 1784 0078 7B68     		ldr	r3, [r7, #4]
 1785 007a 0522     		movs	r2, #5
 1786 007c 9A60     		str	r2, [r3, #8]
 1787 007e 0CE0     		b	.L126
 1788              	.L125:
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1789              		.loc 1 1004 0
 1790 0080 284B     		ldr	r3, .L132
 1791 0082 1B6F     		ldr	r3, [r3, #112]
 1792 0084 03F00103 		and	r3, r3, #1
 1793 0088 012B     		cmp	r3, #1
 1794 008a 03D1     		bne	.L127
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1795              		.loc 1 1006 0
 1796 008c 7B68     		ldr	r3, [r7, #4]
 1797 008e 0122     		movs	r2, #1
 1798 0090 9A60     		str	r2, [r3, #8]
 1799 0092 02E0     		b	.L126
 1800              	.L127:
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1801              		.loc 1 1010 0
 1802 0094 7B68     		ldr	r3, [r7, #4]
 1803 0096 0022     		movs	r2, #0
 1804 0098 9A60     		str	r2, [r3, #8]
 1805              	.L126:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1806              		.loc 1 1014 0
 1807 009a 224B     		ldr	r3, .L132
 1808 009c 5B6F     		ldr	r3, [r3, #116]
 1809 009e 03F00103 		and	r3, r3, #1
 1810 00a2 012B     		cmp	r3, #1
 1811 00a4 03D1     		bne	.L128
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1812              		.loc 1 1016 0
 1813 00a6 7B68     		ldr	r3, [r7, #4]
 1814 00a8 0122     		movs	r2, #1
 1815 00aa 5A61     		str	r2, [r3, #20]
 1816 00ac 02E0     		b	.L129
 1817              	.L128:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1818              		.loc 1 1020 0
 1819 00ae 7B68     		ldr	r3, [r7, #4]
 1820 00b0 0022     		movs	r2, #0
 1821 00b2 5A61     		str	r2, [r3, #20]
ARM GAS  /tmp/ccQgLWi2.s 			page 51


 1822              	.L129:
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1823              		.loc 1 1024 0
 1824 00b4 1B4B     		ldr	r3, .L132
 1825 00b6 1B68     		ldr	r3, [r3]
 1826 00b8 03F08073 		and	r3, r3, #16777216
 1827 00bc B3F1807F 		cmp	r3, #16777216
 1828 00c0 03D1     		bne	.L130
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1829              		.loc 1 1026 0
 1830 00c2 7B68     		ldr	r3, [r7, #4]
 1831 00c4 0222     		movs	r2, #2
 1832 00c6 9A61     		str	r2, [r3, #24]
 1833 00c8 02E0     		b	.L131
 1834              	.L130:
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   else
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1835              		.loc 1 1030 0
 1836 00ca 7B68     		ldr	r3, [r7, #4]
 1837 00cc 0122     		movs	r2, #1
 1838 00ce 9A61     		str	r2, [r3, #24]
 1839              	.L131:
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 1840              		.loc 1 1032 0
 1841 00d0 144B     		ldr	r3, .L132
 1842 00d2 5B68     		ldr	r3, [r3, #4]
 1843 00d4 03F48002 		and	r2, r3, #4194304
 1844 00d8 7B68     		ldr	r3, [r7, #4]
 1845 00da DA61     		str	r2, [r3, #28]
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 1846              		.loc 1 1033 0
 1847 00dc 114B     		ldr	r3, .L132
 1848 00de 5B68     		ldr	r3, [r3, #4]
 1849 00e0 03F03F02 		and	r2, r3, #63
 1850 00e4 7B68     		ldr	r3, [r7, #4]
 1851 00e6 1A62     		str	r2, [r3, #32]
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Po
 1852              		.loc 1 1034 0
 1853 00e8 0E4B     		ldr	r3, .L132
 1854 00ea 5B68     		ldr	r3, [r3, #4]
 1855 00ec 9B09     		lsrs	r3, r3, #6
 1856 00ee C3F30802 		ubfx	r2, r3, #0, #9
 1857 00f2 7B68     		ldr	r3, [r7, #4]
 1858 00f4 5A62     		str	r2, [r3, #36]
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 1859              		.loc 1 1035 0
 1860 00f6 0B4B     		ldr	r3, .L132
 1861 00f8 5B68     		ldr	r3, [r3, #4]
 1862 00fa 03F44033 		and	r3, r3, #196608
 1863 00fe 03F58033 		add	r3, r3, #65536
ARM GAS  /tmp/ccQgLWi2.s 			page 52


 1864 0102 5B00     		lsls	r3, r3, #1
 1865 0104 1A0C     		lsrs	r2, r3, #16
 1866 0106 7B68     		ldr	r3, [r7, #4]
 1867 0108 9A62     		str	r2, [r3, #40]
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Po
 1868              		.loc 1 1036 0
 1869 010a 064B     		ldr	r3, .L132
 1870 010c 5B68     		ldr	r3, [r3, #4]
 1871 010e 1B0E     		lsrs	r3, r3, #24
 1872 0110 03F00F02 		and	r2, r3, #15
 1873 0114 7B68     		ldr	r3, [r7, #4]
 1874 0116 DA62     		str	r2, [r3, #44]
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1875              		.loc 1 1037 0
 1876 0118 00BF     		nop
 1877 011a 0C37     		adds	r7, r7, #12
 1878              	.LCFI43:
 1879              		.cfi_def_cfa_offset 4
 1880 011c BD46     		mov	sp, r7
 1881              	.LCFI44:
 1882              		.cfi_def_cfa_register 13
 1883              		@ sp needed
 1884 011e 5DF8047B 		ldr	r7, [sp], #4
 1885              	.LCFI45:
 1886              		.cfi_restore 7
 1887              		.cfi_def_cfa_offset 0
 1888 0122 7047     		bx	lr
 1889              	.L133:
 1890              		.align	2
 1891              	.L132:
 1892 0124 00380240 		.word	1073887232
 1893              		.cfi_endproc
 1894              	.LFE140:
 1896              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1897              		.align	1
 1898              		.global	HAL_RCC_GetClockConfig
 1899              		.syntax unified
 1900              		.thumb
 1901              		.thumb_func
 1902              		.fpu fpv4-sp-d16
 1904              	HAL_RCC_GetClockConfig:
 1905              	.LFB141:
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * RCC configuration registers.
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * will be configured.
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1906              		.loc 1 1048 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 8
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccQgLWi2.s 			page 53


 1910              		@ link register save eliminated.
 1911 0000 80B4     		push	{r7}
 1912              	.LCFI46:
 1913              		.cfi_def_cfa_offset 4
 1914              		.cfi_offset 7, -4
 1915 0002 83B0     		sub	sp, sp, #12
 1916              	.LCFI47:
 1917              		.cfi_def_cfa_offset 16
 1918 0004 00AF     		add	r7, sp, #0
 1919              	.LCFI48:
 1920              		.cfi_def_cfa_register 7
 1921 0006 7860     		str	r0, [r7, #4]
 1922 0008 3960     		str	r1, [r7]
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 1923              		.loc 1 1050 0
 1924 000a 7B68     		ldr	r3, [r7, #4]
 1925 000c 0F22     		movs	r2, #15
 1926 000e 1A60     		str	r2, [r3]
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 1927              		.loc 1 1053 0
 1928 0010 124B     		ldr	r3, .L135
 1929 0012 9B68     		ldr	r3, [r3, #8]
 1930 0014 03F00302 		and	r2, r3, #3
 1931 0018 7B68     		ldr	r3, [r7, #4]
 1932 001a 5A60     		str	r2, [r3, #4]
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 1933              		.loc 1 1056 0
 1934 001c 0F4B     		ldr	r3, .L135
 1935 001e 9B68     		ldr	r3, [r3, #8]
 1936 0020 03F0F002 		and	r2, r3, #240
 1937 0024 7B68     		ldr	r3, [r7, #4]
 1938 0026 9A60     		str	r2, [r3, #8]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 1939              		.loc 1 1059 0
 1940 0028 0C4B     		ldr	r3, .L135
 1941 002a 9B68     		ldr	r3, [r3, #8]
 1942 002c 03F4E052 		and	r2, r3, #7168
 1943 0030 7B68     		ldr	r3, [r7, #4]
 1944 0032 DA60     		str	r2, [r3, #12]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 1945              		.loc 1 1062 0
 1946 0034 094B     		ldr	r3, .L135
 1947 0036 9B68     		ldr	r3, [r3, #8]
 1948 0038 DB08     		lsrs	r3, r3, #3
 1949 003a 03F4E052 		and	r2, r3, #7168
 1950 003e 7B68     		ldr	r3, [r7, #4]
 1951 0040 1A61     		str	r2, [r3, #16]
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
ARM GAS  /tmp/ccQgLWi2.s 			page 54


1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 1952              		.loc 1 1065 0
 1953 0042 074B     		ldr	r3, .L135+4
 1954 0044 1B68     		ldr	r3, [r3]
 1955 0046 03F00F02 		and	r2, r3, #15
 1956 004a 3B68     		ldr	r3, [r7]
 1957 004c 1A60     		str	r2, [r3]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 1958              		.loc 1 1066 0
 1959 004e 00BF     		nop
 1960 0050 0C37     		adds	r7, r7, #12
 1961              	.LCFI49:
 1962              		.cfi_def_cfa_offset 4
 1963 0052 BD46     		mov	sp, r7
 1964              	.LCFI50:
 1965              		.cfi_def_cfa_register 13
 1966              		@ sp needed
 1967 0054 5DF8047B 		ldr	r7, [sp], #4
 1968              	.LCFI51:
 1969              		.cfi_restore 7
 1970              		.cfi_def_cfa_offset 0
 1971 0058 7047     		bx	lr
 1972              	.L136:
 1973 005a 00BF     		.align	2
 1974              	.L135:
 1975 005c 00380240 		.word	1073887232
 1976 0060 003C0240 		.word	1073888256
 1977              		.cfi_endproc
 1978              	.LFE141:
 1980              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1981              		.align	1
 1982              		.global	HAL_RCC_NMI_IRQHandler
 1983              		.syntax unified
 1984              		.thumb
 1985              		.thumb_func
 1986              		.fpu fpv4-sp-d16
 1988              	HAL_RCC_NMI_IRQHandler:
 1989              	.LFB142:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 1990              		.loc 1 1074 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 0
 1993              		@ frame_needed = 1, uses_anonymous_args = 0
 1994 0000 80B5     		push	{r7, lr}
 1995              	.LCFI52:
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 7, -8
 1998              		.cfi_offset 14, -4
 1999 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccQgLWi2.s 			page 55


 2000              	.LCFI53:
 2001              		.cfi_def_cfa_register 7
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2002              		.loc 1 1076 0
 2003 0004 064B     		ldr	r3, .L140
 2004 0006 DB68     		ldr	r3, [r3, #12]
 2005 0008 03F08003 		and	r3, r3, #128
 2006 000c 802B     		cmp	r3, #128
 2007 000e 04D1     		bne	.L139
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   {
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2008              		.loc 1 1079 0
 2009 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2010              		.loc 1 1082 0
 2011 0014 034B     		ldr	r3, .L140+4
 2012 0016 8022     		movs	r2, #128
 2013 0018 1A70     		strb	r2, [r3]
 2014              	.L139:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   }
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2015              		.loc 1 1084 0
 2016 001a 00BF     		nop
 2017 001c 80BD     		pop	{r7, pc}
 2018              	.L141:
 2019 001e 00BF     		.align	2
 2020              	.L140:
 2021 0020 00380240 		.word	1073887232
 2022 0024 0E380240 		.word	1073887246
 2023              		.cfi_endproc
 2024              	.LFE142:
 2026              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2027              		.align	1
 2028              		.weak	HAL_RCC_CSSCallback
 2029              		.syntax unified
 2030              		.thumb
 2031              		.thumb_func
 2032              		.fpu fpv4-sp-d16
 2034              	HAL_RCC_CSSCallback:
 2035              	.LFB143:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** 
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** /**
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   * @retval None
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   */
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** {
 2036              		.loc 1 1091 0
 2037              		.cfi_startproc
 2038              		@ args = 0, pretend = 0, frame = 0
 2039              		@ frame_needed = 1, uses_anonymous_args = 0
 2040              		@ link register save eliminated.
 2041 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccQgLWi2.s 			page 56


 2042              	.LCFI54:
 2043              		.cfi_def_cfa_offset 4
 2044              		.cfi_offset 7, -4
 2045 0002 00AF     		add	r7, sp, #0
 2046              	.LCFI55:
 2047              		.cfi_def_cfa_register 7
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c ****    */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c **** }
 2048              		.loc 1 1095 0
 2049 0004 00BF     		nop
 2050 0006 BD46     		mov	sp, r7
 2051              	.LCFI56:
 2052              		.cfi_def_cfa_register 13
 2053              		@ sp needed
 2054 0008 5DF8047B 		ldr	r7, [sp], #4
 2055              	.LCFI57:
 2056              		.cfi_restore 7
 2057              		.cfi_def_cfa_offset 0
 2058 000c 7047     		bx	lr
 2059              		.cfi_endproc
 2060              	.LFE143:
 2062              		.text
 2063              	.Letext0:
 2064              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2065              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2066              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2067              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 2068              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2069              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2070              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2071              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2072              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2073              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2074              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccQgLWi2.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_rcc.c
     /tmp/ccQgLWi2.s:18     .text.HAL_RCC_DeInit:0000000000000000 $t
     /tmp/ccQgLWi2.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
     /tmp/ccQgLWi2.s:57     .text.HAL_RCC_OscConfig:0000000000000000 $t
     /tmp/ccQgLWi2.s:64     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
     /tmp/ccQgLWi2.s:481    .text.HAL_RCC_OscConfig:00000000000002ac $d
     /tmp/ccQgLWi2.s:487    .text.HAL_RCC_OscConfig:00000000000002bc $t
     /tmp/ccQgLWi2.s:812    .text.HAL_RCC_OscConfig:00000000000004d4 $d
     /tmp/ccQgLWi2.s:819    .text.HAL_RCC_ClockConfig:0000000000000000 $t
     /tmp/ccQgLWi2.s:826    .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
     /tmp/ccQgLWi2.s:1348   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
     /tmp/ccQgLWi2.s:1097   .text.HAL_RCC_ClockConfig:00000000000001b8 $d
     /tmp/ccQgLWi2.s:1106   .text.HAL_RCC_MCOConfig:0000000000000000 $t
     /tmp/ccQgLWi2.s:1113   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
     /tmp/ccQgLWi2.s:1245   .text.HAL_RCC_MCOConfig:00000000000000c4 $d
     /tmp/ccQgLWi2.s:1252   .text.HAL_RCC_EnableCSS:0000000000000000 $t
     /tmp/ccQgLWi2.s:1259   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
     /tmp/ccQgLWi2.s:1291   .text.HAL_RCC_EnableCSS:0000000000000014 $d
     /tmp/ccQgLWi2.s:1296   .text.HAL_RCC_DisableCSS:0000000000000000 $t
     /tmp/ccQgLWi2.s:1303   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
     /tmp/ccQgLWi2.s:1335   .text.HAL_RCC_DisableCSS:0000000000000014 $d
     /tmp/ccQgLWi2.s:1341   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
     /tmp/ccQgLWi2.s:1559   .text.HAL_RCC_GetSysClockFreq:00000000000001a4 $d
     /tmp/ccQgLWi2.s:1566   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
     /tmp/ccQgLWi2.s:1573   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
     /tmp/ccQgLWi2.s:1604   .text.HAL_RCC_GetHCLKFreq:0000000000000014 $d
     /tmp/ccQgLWi2.s:1609   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
     /tmp/ccQgLWi2.s:1616   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccQgLWi2.s:1646   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
     /tmp/ccQgLWi2.s:1652   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
     /tmp/ccQgLWi2.s:1659   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccQgLWi2.s:1689   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
     /tmp/ccQgLWi2.s:1695   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
     /tmp/ccQgLWi2.s:1702   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
     /tmp/ccQgLWi2.s:1892   .text.HAL_RCC_GetOscConfig:0000000000000124 $d
     /tmp/ccQgLWi2.s:1897   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
     /tmp/ccQgLWi2.s:1904   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
     /tmp/ccQgLWi2.s:1975   .text.HAL_RCC_GetClockConfig:000000000000005c $d
     /tmp/ccQgLWi2.s:1981   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
     /tmp/ccQgLWi2.s:1988   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccQgLWi2.s:2034   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
     /tmp/ccQgLWi2.s:2021   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
     /tmp/ccQgLWi2.s:2027   .text.HAL_RCC_CSSCallback:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
AHBPrescTable
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
APBPrescTable
